{"id":"82c09402410103fa2a98cc05bc564c31","_format":"hh-sol-build-info-1","solcVersion":"0.8.6","solcLongVersion":"0.8.6+commit.11564f7e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/Blackjack.sol":{"content":"/// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.6;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport { SafeMath } from \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"./ChipToken.sol\";\nimport \"./CardDeck.sol\";\n\n/// @title A Blackjack game.\ncontract Blackjack is Context {\n    uint256 public constant MIN_BET = 1;\n    uint256 public constant MAX_BET = 1000000000000000000000;\n\n    struct Player {\n        bool isPlayer;\n        bool betMade;\n        bool turnOver;\n        uint256 betValue;\n        uint256 stackValue;\n    }\n\n    struct Dealer {\n        address dealer;\n        uint256 faceUpValue;\n        uint256 stackValue;\n    }\n\n    enum Stage {\n        BETTING,\n        DEALING,\n        PLAYING,\n        PAYOUT,\n        GAME_OVER\n    }\n\n    enum Decision {\n        HIT,\n        STAND\n    }\n\n    struct GameMetadata {\n        address currentPlayer;\n        uint256 betCount;\n        uint256 moveCount;\n        uint256 numPlayers;\n        Stage currentStage;\n        address[] playerAddresses;\n    }\n\n    ChipToken public token;\n    GameMetadata internal game;\n    Dealer internal dealer;\n    mapping(address => Player) public players;\n\n    using CardDeckUtils for CardDeck;\n    CardDeck internal deck;\n\n    event BetReceived(address player, uint256 amount);\n    event StageAdvanced(Stage stage);\n    event PlayerMoved(address player);\n    event DealerMoved(address dealer);\n    event CollectedChips(address player, uint256 amount);\n    event PaidChips(address player, uint256 amount);\n    event CardDrawn(address player, Suit suit, Value value);\n\n    modifier isStage(Stage stage) {\n        require(\n            game.currentStage == stage,\n            \"function cannot be called right now.\"\n        );\n        _;\n    }\n\n    modifier isValidBet(uint256 amount) {\n        require(\n            amount <= MAX_BET && amount >= MIN_BET,\n            \"bet amount must be valid.\"\n        );\n        require(\n            players[_msgSender()].betMade == false,\n            \"player has already bet.\"\n        );\n        require(\n            token.balanceOf(_msgSender()) >= amount,\n            \"player doesn't have enough tokens.\"\n        );\n        _;\n    }\n\n    modifier onlyDealer() {\n        require(\n            _msgSender() == dealer.dealer,\n            \"only the dealer can call this function.\"\n        );\n        _;\n    }\n\n    modifier onlyPlayer() {\n        require(\n            players[_msgSender()].isPlayer == true,\n            \"not a player in this game.\"\n        );\n        require(players[_msgSender()].turnOver == false, \"your turn is over.\");\n        _;\n    }\n\n    constructor(address[] memory _players, address _token) {\n        token = ChipToken(_token);\n        dealer = Dealer(_msgSender(), 0, 0);\n        for (uint256 i = 0; i < _players.length; i++) {\n            address player = _players[i];\n            players[player] = Player(true, false, false, 0, 0);\n        }\n        game = GameMetadata(\n            _players[0],\n            0,\n            0,\n            _players.length,\n            Stage.BETTING,\n            _players\n        );\n        deck.createDeck();\n    }\n\n    function bet(uint256 amount)\n        external\n        isStage(Stage.BETTING)\n        isValidBet(amount)\n        onlyPlayer\n    {\n        address player = _msgSender();\n\n        _collectChips(player, amount);\n\n        players[player].betMade = true;\n        players[player].betValue = amount;\n        game.betCount++;\n\n        emit BetReceived(player, amount);\n\n        if (_isBettingOver()) {\n            _advanceStage();\n        }\n    }\n\n    function deal() external isStage(Stage.DEALING) onlyDealer {\n        for (uint256 i = 0; i < game.numPlayers; i++) {\n            address playerAddress = game.playerAddresses[i];\n\n            Card memory playersCard = deck.drawCard();\n            emit CardDrawn(playerAddress, playersCard.suit, playersCard.value);\n            uint256 cardValue = _convertCardValueToUint(playersCard.value);\n\n            players[playerAddress].stackValue += cardValue;\n        }\n\n        Card memory dealersCard = deck.drawCard();\n        uint256 dealersCardValue = _convertCardValueToUint(dealersCard.value);\n        emit CardDrawn(dealer.dealer, dealersCard.suit, dealersCard.value);\n        dealer.faceUpValue += dealersCardValue;\n        dealer.stackValue += dealersCardValue;\n\n        for (uint256 i = 0; i < game.numPlayers; i++) {\n            address playerAddress = game.playerAddresses[i];\n\n            Card memory playersCard = deck.drawCard();\n            emit CardDrawn(playerAddress, playersCard.suit, playersCard.value);\n            uint256 cardValue = _convertCardValueToUint(playersCard.value);\n\n            players[playerAddress].stackValue += cardValue;\n        }\n\n        Card memory dealersSecondCard = deck.drawCard();\n        emit CardDrawn(\n            dealer.dealer,\n            dealersSecondCard.suit,\n            dealersSecondCard.value\n        );\n        dealer.stackValue += _convertCardValueToUint(dealersSecondCard.value);\n\n        _checkNaturals();\n\n        _advanceStage();\n    }\n\n    function play(Decision decision)\n        external\n        isStage(Stage.PLAYING)\n        onlyPlayer\n    {\n        require(_msgSender() == game.currentPlayer, \"not your turn to play.\");\n\n        address playerAddress = _msgSender();\n        Player storage player = players[playerAddress];\n\n        if (decision == Decision.STAND) {\n            player.turnOver = true;\n            game.moveCount++;\n        } else {\n            Card memory card = deck.drawCard();\n            emit CardDrawn(playerAddress, card.suit, card.value);\n            player.stackValue += _convertCardValueToUint(card.value);\n\n            if (player.stackValue > 21) {\n                player.turnOver = true;\n                game.moveCount++;\n            }\n        }\n\n        emit PlayerMoved(playerAddress);\n\n        if (player.turnOver == true && game.moveCount < game.numPlayers)\n            game.currentPlayer = game.playerAddresses[game.moveCount];\n\n        if (_isPlayingOver()) {\n            _playDealer();\n            _advanceStage();\n        }\n    }\n\n    function payout() external onlyDealer isStage(Stage.PAYOUT) {\n        bool dealerBusts = (dealer.stackValue > 21);\n\n        for (uint256 i = 0; i < game.numPlayers; i++) {\n            address playerAddress = game.playerAddresses[i];\n            Player memory player = players[playerAddress];\n\n            if (!player.turnOver && dealerBusts) {\n                _payChips(playerAddress, SafeMath.mul(2, player.betValue));\n            } else if (\n                !player.turnOver && (player.stackValue > dealer.stackValue)\n            ) {\n                _payChips(playerAddress, SafeMath.mul(2, player.betValue));\n            }\n        }\n\n        _advanceStage();\n    }\n\n    function getPlayerInfo(address player)\n        external\n        view\n        returns (\n            bool,\n            bool,\n            uint256,\n            uint256\n        )\n    {\n        return (\n            players[player].betMade,\n            players[player].turnOver,\n            players[player].betValue,\n            players[player].stackValue\n        );\n    }\n\n    function getGameInfo()\n        external\n        view\n        returns (\n            address,\n            uint256,\n            uint256,\n            uint256 numPlayers,\n            Stage,\n            address[] memory\n        )\n    {\n        return (\n            game.currentPlayer,\n            game.betCount,\n            game.moveCount,\n            game.numPlayers,\n            game.currentStage,\n            game.playerAddresses\n        );\n    }\n\n    function getDealersFaceUpCardValue()\n        external\n        view\n        isStage(Stage.PLAYING)\n        returns (uint256)\n    {\n        return dealer.faceUpValue;\n    }\n\n    function getCurrentStage() external view returns (Stage) {\n        return game.currentStage;\n    }\n\n    function _playDealer() internal onlyDealer isStage(Stage.PLAYING) {\n        while (dealer.stackValue < 17) {\n            Card memory card = deck.drawCard();\n\n            dealer.stackValue += _convertCardValueToUint(card.value);\n        }\n\n        emit DealerMoved(dealer.dealer);\n    }\n\n    function _checkNaturals() internal isStage(Stage.DEALING) {\n        bool dealerHasNatural = (dealer.stackValue == 21);\n\n        for (uint256 i = 0; i < game.numPlayers; i++) {\n            address playerAddress = game.playerAddresses[i];\n            Player storage player = players[playerAddress];\n            bool playerHasNatural = (player.stackValue == 21);\n            uint256 betValue = player.betValue;\n\n            if (!dealerHasNatural && playerHasNatural) {\n                player.turnOver = true;\n                uint256 betValueDivBy2 = SafeMath.add(betValue, 1) / 2;\n                _payChips(playerAddress, SafeMath.mul(5, betValueDivBy2));\n            } else if (dealerHasNatural && playerHasNatural) {\n                player.turnOver = true;\n                _payChips(playerAddress, betValue);\n            } else if (dealerHasNatural && !playerHasNatural) {\n                player.turnOver = true;\n            }\n        }\n    }\n\n    function _collectChips(address player, uint256 amount) internal {\n        token.transferFrom(player, dealer.dealer, amount);\n    }\n\n    function _payChips(address player, uint256 amount) internal {\n        token.transferFrom(dealer.dealer, player, amount);\n    }\n\n    function _advanceStage() internal {\n        if (game.currentStage == Stage.BETTING) {\n            game.currentStage = Stage.DEALING;\n            emit StageAdvanced(game.currentStage);\n        } else if (game.currentStage == Stage.DEALING) {\n            game.currentStage = Stage.PLAYING;\n            emit StageAdvanced(game.currentStage);\n        } else if (game.currentStage == Stage.PLAYING) {\n            game.currentStage = Stage.PAYOUT;\n            emit StageAdvanced(game.currentStage);\n        } else if (game.currentStage == Stage.PAYOUT) {\n            game.currentStage = Stage.GAME_OVER;\n            emit StageAdvanced(game.currentStage);\n        } else {}\n    }\n\n    function _isBettingOver() internal view returns (bool) {\n        return game.betCount == game.numPlayers;\n    }\n\n    function _isPlayingOver() internal view returns (bool) {\n        return game.moveCount == game.numPlayers;\n    }\n\n    function _convertCardValueToUint(Value value)\n        internal\n        pure\n        returns (uint256)\n    {\n        if (\n            value == Value.Jack || value == Value.King || value == Value.Queen\n        ) {\n            return 10;\n        } else {\n            return uint256(value);\n        }\n    }\n}"},"contracts/CardDeck.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.6;\n\nenum Suit {\n    Spades,\n    Clubs,\n    Diamonds,\n    Hearts\n}\n\nenum Value {\n    Two,\n    Three,\n    Four,\n    Five,\n    Six,\n    Seven,\n    Eight,\n    Nine,\n    Ten,\n    Jack,\n    King,\n    Queen,\n    Ace\n}\n\nstruct Card {\n    Suit suit;\n    Value value;\n}\n\nstruct CardDeck {\n    Card[] cards;\n    uint256 numCards;\n}\n\nlibrary CardDeckUtils {\n    function createDeck(CardDeck storage deck) internal {\n        for (uint256 i = 0; i < 4; i++) {\n            for (uint256 j = 0; j < 13; j++) {\n                deck.cards.push(Card(Suit(i), Value(j)));\n                deck.numCards++;\n            }\n        }\n    }\n\n    function drawCard(CardDeck storage deck) internal returns (Card memory) {\n        require(deck.numCards > 0, \"no more cards left in the deck\");\n        uint256 index = _random() % deck.numCards;\n        Card memory card = deck.cards[index];\n        deck.cards[index] = deck.cards[deck.cards.length - 1];\n        deck.cards.pop();\n        deck.numCards--;\n        return card;\n    }\n\n    /// @dev generates a pseudo random number - randomness would require an oracle\n    /// https://stackoverflow.com/questions/48848948/how-to-generate-a-random-number-in-solidity\n    function _random() private view returns (uint256) {\n        return\n            uint256(\n                keccak256(abi.encodePacked(block.difficulty, block.timestamp))\n            );\n    }\n}"},"contracts/ChipToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\n/// @title A ChipToken contract for use as in game currency in casino games.\ncontract ChipToken is Context, AccessControl, ERC20 {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant TRANSFER_ROLE = keccak256(\"TRANSFER_ROLE\");\n\n    constructor() ERC20(\"Chip\", \"CHIP\") {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n        _setupRole(MINTER_ROLE, _msgSender());\n        _setupRole(TRANSFER_ROLE, _msgSender());\n    }\n\n    function mint(address to, uint256 amount) public {\n        require(\n            hasRole(MINTER_ROLE, _msgSender()),\n            \"ChipToken: must have minter role to mint new chips.\"\n        );\n        _mint(to, amount);\n    }\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[1108],"ERC165":[1361],"IAccessControl":[388],"IERC165":[1373],"Math":[2239],"SignedMath":[2656],"Strings":[1337]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":389,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":1109,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":1338,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":1362,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1108,"src":"1967:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1967:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":388,"src":"1976:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1976:14:0"},{"baseName":{"id":11,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1361,"src":"1992:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1992:6:0"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,1361,1373,388,1108],"name":"AccessControl","nameLocation":"1950:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"2056:7:0","nodeType":"VariableDeclaration","scope":19,"src":"2031:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"2081:9:0","nodeType":"VariableDeclaration","scope":19,"src":"2073:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2012:8:0","nodeType":"StructDefinition","scope":315,"src":"2005:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2140:6:0","nodeType":"VariableDeclaration","scope":315,"src":"2103:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2122:8:0"},"referencedDeclaration":19,"src":"2122:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2177:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2153:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2621:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2642:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2631:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2631:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2631:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2657:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2209:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2598:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2615:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:0"},"src":"2589:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[1360],"body":{"id":59,"nodeType":"Block","src":"2823:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2840:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2860:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2855:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$388","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2915:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"2891:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2891:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2833:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2671:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2741:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2766:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2759:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2817:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:0"},"scope":315,"src":"2732:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[355],"body":{"id":78,"nodeType":"Block","src":"3113:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3130:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3137:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3130:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3151:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"3123:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2940:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3030:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"3046:4:0","nodeType":"VariableDeclaration","scope":79,"src":"3038:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"3060:7:0","nodeType":"VariableDeclaration","scope":79,"src":"3052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"3107:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:0"},"scope":315,"src":"3021:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3516:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3537:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"3543:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3543:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3526:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3526:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3526:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3172:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3469:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3488:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3480:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3516:0:0"},"scope":315,"src":"3460:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3917:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3932:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3932:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3927:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3956:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4135:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"4115:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1337_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1311,"src":"4115:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4115:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4234:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"4214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1337_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1291,"src":"4214:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4214:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4022:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3994:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3970:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3569:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3853:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3872:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3864:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3886:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3878:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3917:0:0"},"scope":315,"src":"3844:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[363],"body":{"id":145,"nodeType":"Block","src":"4587:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4611:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4604:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4597:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4329:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4513:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4534:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4578:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:0"},"scope":315,"src":"4504:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[371],"body":{"id":165,"nodeType":"Block","src":"5032:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5053:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"5059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5042:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5042:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"5042:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4639:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5025:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5012:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5012:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5003:8:0"},"nodeType":"ModifierInvocation","src":"5003:28:0"}],"name":"grantRole","nameLocation":"4938:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4956:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4948:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4970:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"5032:0:0"},"scope":315,"src":"4929:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[379],"body":{"id":185,"nodeType":"Block","src":"5458:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5480:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5486:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5468:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5468:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5468:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"5080:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5451:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5438:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5438:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5429:8:0"},"nodeType":"ModifierInvocation","src":"5429:28:0"}],"name":"revokeRole","nameLocation":"5363:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5382:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5374:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5396:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5388:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5458:0:0"},"scope":315,"src":"5354:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[387],"body":{"id":208,"nodeType":"Block","src":"6115:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"6144:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6144:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6125:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"6125:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6231:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6237:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6219:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6219:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6219:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5507:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6047:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"6068:4:0","nodeType":"VariableDeclaration","scope":209,"src":"6060:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"6082:7:0","nodeType":"VariableDeclaration","scope":209,"src":"6074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"6115:0:0"},"scope":315,"src":"6038:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"7005:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"7026:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7015:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"7015:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6258:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6946:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6965:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6957:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6979:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6971:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"7005:0:0"},"scope":315,"src":"6937:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7245:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7263:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7255:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7296:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7283:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7311:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7318:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7311:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7336:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7311:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7377:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7383:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7402:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7360:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7360:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7355:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"7053:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7181:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7203:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7217:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7209:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7245:0:0"},"scope":315,"src":"7172:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7655:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7670:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7670:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7665:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7694:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7708:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7708:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7708:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7775:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7781:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"7790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7763:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7758:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7425:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7596:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7615:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7629:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7621:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7655:0:0"},"scope":315,"src":"7587:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"8060:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8082:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8088:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8074:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8074:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"8070:149:0","trueBody":{"id":311,"nodeType":"Block","src":"8098:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8112:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"8112:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"8112:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8180:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"8195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"8168:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8168:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8163:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7826:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8000:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"8020:4:0","nodeType":"VariableDeclaration","scope":314,"src":"8012:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"8034:7:0","nodeType":"VariableDeclaration","scope":314,"src":"8026:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"8060:0:0"},"scope":315,"src":"7991:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1932:6295:0","usedErrors":[]}],"src":"108:8120:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"id":327,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":327,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":327,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":327,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"id":336,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":336,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":336,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":336,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"id":345,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":345,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":355,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":355,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":388,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":363,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":388,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":371,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":371,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":388,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":379,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":379,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":388,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":387,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":387,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":388,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":389,"src":"209:2710:1","usedErrors":[]}],"src":"94:2826:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1108],"ERC20":[975],"IERC20":[1053],"IERC20Metadata":[1078]},"id":976,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":976,"sourceUnit":1054,"src":"130:22:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":392,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":976,"sourceUnit":1079,"src":"153:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":393,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":976,"sourceUnit":1109,"src":"195:33:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":395,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1108,"src":"1550:7:2"},"id":396,"nodeType":"InheritanceSpecifier","src":"1550:7:2"},{"baseName":{"id":397,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1053,"src":"1559:6:2"},"id":398,"nodeType":"InheritanceSpecifier","src":"1559:6:2"},{"baseName":{"id":399,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":1078,"src":"1567:14:2"},"id":400,"nodeType":"InheritanceSpecifier","src":"1567:14:2"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"230:1301:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":975,"linearizedBaseContracts":[975,1078,1053,1108],"name":"ERC20","nameLocation":"1541:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":404,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:2","nodeType":"VariableDeclaration","scope":975,"src":"1588:45:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":403,"keyType":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":410,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:2","nodeType":"VariableDeclaration","scope":975,"src":"1640:67:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":409,"keyType":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":408,"keyType":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":412,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:2","nodeType":"VariableDeclaration","scope":975,"src":"1714:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":414,"mutability":"mutable","name":"_name","nameLocation":"1764:5:2","nodeType":"VariableDeclaration","scope":975,"src":"1749:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":413,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":416,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:2","nodeType":"VariableDeclaration","scope":975,"src":"1775:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":415,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":432,"nodeType":"Block","src":"2036:57:2","statements":[{"expression":{"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":424,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"2046:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":425,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"2054:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":427,"nodeType":"ExpressionStatement","src":"2046:13:2"},{"expression":{"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":428,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2069:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":429,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"2079:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":431,"nodeType":"ExpressionStatement","src":"2069:17:2"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"1804:171:2","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":433,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"name_","nameLocation":"2006:5:2","nodeType":"VariableDeclaration","scope":433,"src":"1992:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":418,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:2","nodeType":"VariableDeclaration","scope":433,"src":"2013:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":420,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:2"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"2036:0:2"},"scope":975,"src":"1980:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1065],"body":{"id":442,"nodeType":"Block","src":"2227:29:2","statements":[{"expression":{"id":440,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"2244:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":439,"id":441,"nodeType":"Return","src":"2237:12:2"}]},"documentation":{"id":434,"nodeType":"StructuredDocumentation","src":"2099:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":443,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:2","nodeType":"FunctionDefinition","overrides":{"id":436,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:2"},"parameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"2171:2:2"},"returnParameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":443,"src":"2212:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":437,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:2"},"scope":975,"src":"2158:98:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1071],"body":{"id":452,"nodeType":"Block","src":"2440:31:2","statements":[{"expression":{"id":450,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2457:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":449,"id":451,"nodeType":"Return","src":"2450:14:2"}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"2262:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":453,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:2","nodeType":"FunctionDefinition","overrides":{"id":446,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:2"},"parameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"2384:2:2"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":453,"src":"2425:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":447,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:2"},"scope":975,"src":"2369:102:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1077],"body":{"id":462,"nodeType":"Block","src":"3169:26:2","statements":[{"expression":{"hexValue":"3138","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":459,"id":461,"nodeType":"Return","src":"3179:9:2"}]},"documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"2477:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":463,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:2","nodeType":"FunctionDefinition","overrides":{"id":456,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:2"},"parameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"3121:2:2"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":463,"src":"3162:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":457,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:2"},"scope":975,"src":"3104:91:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1002],"body":{"id":472,"nodeType":"Block","src":"3325:36:2","statements":[{"expression":{"id":470,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3342:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":469,"id":471,"nodeType":"Return","src":"3335:19:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"3201:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":473,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:2","nodeType":"FunctionDefinition","overrides":{"id":466,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:2"},"parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"3275:2:2"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":473,"src":"3316:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:2"},"scope":975,"src":"3255:106:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1010],"body":{"id":486,"nodeType":"Block","src":"3502:42:2","statements":[{"expression":{"baseExpression":{"id":482,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"3519:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":484,"indexExpression":{"id":483,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"3529:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":481,"id":485,"nodeType":"Return","src":"3512:25:2"}]},"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"3367:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":487,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:2","nodeType":"FunctionDefinition","overrides":{"id":478,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:2"},"parameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"account","nameLocation":"3446:7:2","nodeType":"VariableDeclaration","scope":487,"src":"3438:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:2"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":487,"src":"3493:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:2"},"scope":975,"src":"3419:125:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1020],"body":{"id":511,"nodeType":"Block","src":"3825:104:2","statements":[{"assignments":[499],"declarations":[{"constant":false,"id":499,"mutability":"mutable","name":"owner","nameLocation":"3843:5:2","nodeType":"VariableDeclaration","scope":511,"src":"3835:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":502,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":500,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"3851:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3851:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:2"},{"expression":{"arguments":[{"id":504,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"3883:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":505,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"3890:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":506,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3894:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":503,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"3873:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3873:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":508,"nodeType":"ExpressionStatement","src":"3873:28:2"},{"expression":{"hexValue":"74727565","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":497,"id":510,"nodeType":"Return","src":"3911:11:2"}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"3550:185:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":512,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:2","nodeType":"FunctionDefinition","overrides":{"id":494,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:2"},"parameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"to","nameLocation":"3766:2:2","nodeType":"VariableDeclaration","scope":512,"src":"3758:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":492,"mutability":"mutable","name":"amount","nameLocation":"3778:6:2","nodeType":"VariableDeclaration","scope":512,"src":"3770:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":491,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:2"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":512,"src":"3819:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":495,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:2"},"scope":975,"src":"3740:189:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1030],"body":{"id":529,"nodeType":"Block","src":"4085:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":523,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"4102:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":525,"indexExpression":{"id":524,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"4114:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":527,"indexExpression":{"id":526,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"4121:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":522,"id":528,"nodeType":"Return","src":"4095:34:2"}]},"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"3935:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":530,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:2","nodeType":"FunctionDefinition","overrides":{"id":519,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:2"},"parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"mutability":"mutable","name":"owner","nameLocation":"4014:5:2","nodeType":"VariableDeclaration","scope":530,"src":"4006:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"spender","nameLocation":"4029:7:2","nodeType":"VariableDeclaration","scope":530,"src":"4021:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:2"},"returnParameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":530,"src":"4076:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:2"},"scope":975,"src":"3987:149:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1040],"body":{"id":554,"nodeType":"Block","src":"4533:108:2","statements":[{"assignments":[542],"declarations":[{"constant":false,"id":542,"mutability":"mutable","name":"owner","nameLocation":"4551:5:2","nodeType":"VariableDeclaration","scope":554,"src":"4543:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":545,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":543,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"4559:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4559:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:2"},{"expression":{"arguments":[{"id":547,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"4590:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":548,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"4597:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":549,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"4606:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":546,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"4581:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4581:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":551,"nodeType":"ExpressionStatement","src":"4581:32:2"},{"expression":{"hexValue":"74727565","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":540,"id":553,"nodeType":"Return","src":"4623:11:2"}]},"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"4142:297:2","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":555,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:2","nodeType":"FunctionDefinition","overrides":{"id":537,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:2"},"parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"spender","nameLocation":"4469:7:2","nodeType":"VariableDeclaration","scope":555,"src":"4461:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"amount","nameLocation":"4486:6:2","nodeType":"VariableDeclaration","scope":555,"src":"4478:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:2"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"4527:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":538,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:2"},"scope":975,"src":"4444:197:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1052],"body":{"id":587,"nodeType":"Block","src":"5306:153:2","statements":[{"assignments":[569],"declarations":[{"constant":false,"id":569,"mutability":"mutable","name":"spender","nameLocation":"5324:7:2","nodeType":"VariableDeclaration","scope":587,"src":"5316:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":572,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":570,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"5334:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5334:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:2"},{"expression":{"arguments":[{"id":574,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"5372:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":575,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"5378:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":576,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"5387:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":573,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"5356:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5356:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":578,"nodeType":"ExpressionStatement","src":"5356:38:2"},{"expression":{"arguments":[{"id":580,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"5414:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":581,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"5420:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":582,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"5424:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":579,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"5404:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5404:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":584,"nodeType":"ExpressionStatement","src":"5404:27:2"},{"expression":{"hexValue":"74727565","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":567,"id":586,"nodeType":"Return","src":"5441:11:2"}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"4647:551:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":588,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:2","nodeType":"FunctionDefinition","overrides":{"id":564,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:2"},"parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"from","nameLocation":"5233:4:2","nodeType":"VariableDeclaration","scope":588,"src":"5225:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"to","nameLocation":"5247:2:2","nodeType":"VariableDeclaration","scope":588,"src":"5239:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"amount","nameLocation":"5259:6:2","nodeType":"VariableDeclaration","scope":588,"src":"5251:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:2"},"returnParameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":588,"src":"5300:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":565,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:2"},"scope":975,"src":"5203:256:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":616,"nodeType":"Block","src":"5948:140:2","statements":[{"assignments":[599],"declarations":[{"constant":false,"id":599,"mutability":"mutable","name":"owner","nameLocation":"5966:5:2","nodeType":"VariableDeclaration","scope":616,"src":"5958:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":602,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":600,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"5974:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5974:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:2"},{"expression":{"arguments":[{"id":604,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"6005:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":605,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"6012:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":607,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"6031:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":608,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"6038:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":606,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6021:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6021:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":610,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"6049:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":603,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"5996:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5996:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"ExpressionStatement","src":"5996:64:2"},{"expression":{"hexValue":"74727565","id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":597,"id":615,"nodeType":"Return","src":"6070:11:2"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"5465:384:2","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":617,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:2","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"spender","nameLocation":"5889:7:2","nodeType":"VariableDeclaration","scope":617,"src":"5881:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:2","nodeType":"VariableDeclaration","scope":617,"src":"5898:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:2"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":617,"src":"5942:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":595,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:2"},"scope":975,"src":"5854:234:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":657,"nodeType":"Block","src":"6674:328:2","statements":[{"assignments":[628],"declarations":[{"constant":false,"id":628,"mutability":"mutable","name":"owner","nameLocation":"6692:5:2","nodeType":"VariableDeclaration","scope":657,"src":"6684:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":631,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":629,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"6700:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6700:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:2"},{"assignments":[633],"declarations":[{"constant":false,"id":633,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:2","nodeType":"VariableDeclaration","scope":657,"src":"6722:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":638,"initialValue":{"arguments":[{"id":635,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"6759:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":636,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"6766:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":634,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6749:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6749:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"6792:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":641,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6812:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":639,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6784:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"6784:85:2"},{"id":654,"nodeType":"UncheckedBlock","src":"6879:95:2","statements":[{"expression":{"arguments":[{"id":647,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"6912:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":648,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"6919:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":649,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"6928:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":650,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6947:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":646,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"6903:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6903:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"6903:60:2"}]},{"expression":{"hexValue":"74727565","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":626,"id":656,"nodeType":"Return","src":"6984:11:2"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"6094:476:2","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":658,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:2","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"spender","nameLocation":"6610:7:2","nodeType":"VariableDeclaration","scope":658,"src":"6602:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:2","nodeType":"VariableDeclaration","scope":658,"src":"6619:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:2"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"6668:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":624,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:2"},"scope":975,"src":"6575:427:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":734,"nodeType":"Block","src":"7534:710:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":669,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"7552:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:2","typeDescriptions":{}}},"id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7560:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":668,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7544:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"7544:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":679,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7630:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:2","typeDescriptions":{}}},"id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7636:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":678,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7622:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":687,"nodeType":"ExpressionStatement","src":"7622:64:2"},{"expression":{"arguments":[{"id":689,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"7718:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":690,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7724:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":691,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"7728:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":688,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"7697:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7697:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":693,"nodeType":"ExpressionStatement","src":"7697:38:2"},{"assignments":[695],"declarations":[{"constant":false,"id":695,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:2","nodeType":"VariableDeclaration","scope":734,"src":"7746:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":699,"initialValue":{"baseExpression":{"id":696,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"7768:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":698,"indexExpression":{"id":697,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"7778:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":701,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"7801:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":702,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"7816:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7793:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":706,"nodeType":"ExpressionStatement","src":"7793:72:2"},{"id":721,"nodeType":"UncheckedBlock","src":"7875:273:2","statements":[{"expression":{"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":707,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"7899:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":709,"indexExpression":{"id":708,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"7909:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":710,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"7917:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":711,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"7931:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":714,"nodeType":"ExpressionStatement","src":"7899:38:2"},{"expression":{"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":715,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8114:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":717,"indexExpression":{"id":716,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"8124:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":718,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"8131:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":720,"nodeType":"ExpressionStatement","src":"8114:23:2"}]},{"eventCall":{"arguments":[{"id":723,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"8172:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"8178:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"8182:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":722,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"8163:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8163:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"EmitStatement","src":"8158:31:2"},{"expression":{"arguments":[{"id":729,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"8220:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":730,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"8226:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":731,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"8230:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":728,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"8200:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8200:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":733,"nodeType":"ExpressionStatement","src":"8200:37:2"}]},"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"7008:443:2","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":735,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:2","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"from","nameLocation":"7483:4:2","nodeType":"VariableDeclaration","scope":735,"src":"7475:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"to","nameLocation":"7497:2:2","nodeType":"VariableDeclaration","scope":735,"src":"7489:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"amount","nameLocation":"7509:6:2","nodeType":"VariableDeclaration","scope":735,"src":"7501:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:2"},"returnParameters":{"id":667,"nodeType":"ParameterList","parameters":[],"src":"7534:0:2"},"scope":975,"src":"7456:788:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":791,"nodeType":"Block","src":"8585:470:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":744,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"8603:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:2","typeDescriptions":{}}},"id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8614:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":743,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8595:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":752,"nodeType":"ExpressionStatement","src":"8595:65:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:2","typeDescriptions":{}}},"id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":758,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"8704:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":759,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"8713:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":753,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"8671:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8671:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":761,"nodeType":"ExpressionStatement","src":"8671:49:2"},{"expression":{"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":762,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"8731:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":763,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"8747:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":765,"nodeType":"ExpressionStatement","src":"8731:22:2"},{"id":772,"nodeType":"UncheckedBlock","src":"8763:175:2","statements":[{"expression":{"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":766,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8899:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":768,"indexExpression":{"id":767,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"8909:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":769,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"8921:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":771,"nodeType":"ExpressionStatement","src":"8899:28:2"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:2","typeDescriptions":{}}},"id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8961:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":778,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"8973:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"8982:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":773,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"8952:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8952:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":781,"nodeType":"EmitStatement","src":"8947:42:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:2","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9020:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"9032:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":788,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"9041:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":782,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"9000:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9000:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"ExpressionStatement","src":"9000:48:2"}]},"documentation":{"id":736,"nodeType":"StructuredDocumentation","src":"8250:265:2","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":792,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:2","nodeType":"FunctionDefinition","parameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"account","nameLocation":"8543:7:2","nodeType":"VariableDeclaration","scope":792,"src":"8535:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"amount","nameLocation":"8560:6:2","nodeType":"VariableDeclaration","scope":792,"src":"8552:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":739,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:2"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[],"src":"8585:0:2"},"scope":975,"src":"8520:535:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":863,"nodeType":"Block","src":"9440:594:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":801,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"9458:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:2","typeDescriptions":{}}},"id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9469:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":800,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9450:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":809,"nodeType":"ExpressionStatement","src":"9450:67:2"},{"expression":{"arguments":[{"id":811,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"9549:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:2","typeDescriptions":{}}},"id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9558:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":816,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"9570:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"9528:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9528:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"9528:49:2"},{"assignments":[820],"declarations":[{"constant":false,"id":820,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:2","nodeType":"VariableDeclaration","scope":863,"src":"9588:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":824,"initialValue":{"baseExpression":{"id":821,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"9613:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":823,"indexExpression":{"id":822,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"9623:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":826,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"9649:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":827,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"9667:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":825,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9641:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":831,"nodeType":"ExpressionStatement","src":"9641:71:2"},{"id":844,"nodeType":"UncheckedBlock","src":"9722:194:2","statements":[{"expression":{"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":832,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"9746:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":834,"indexExpression":{"id":833,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"9756:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":835,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"9767:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":836,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"9784:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":839,"nodeType":"ExpressionStatement","src":"9746:44:2"},{"expression":{"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":840,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"9883:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":841,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"9899:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":843,"nodeType":"ExpressionStatement","src":"9883:22:2"}]},{"eventCall":{"arguments":[{"id":846,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"9940:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:2","typeDescriptions":{}}},"id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9949:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":851,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"9961:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":845,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"9931:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9931:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":853,"nodeType":"EmitStatement","src":"9926:42:2"},{"expression":{"arguments":[{"id":855,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"9999:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:2","typeDescriptions":{}}},"id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10008:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":860,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"10020:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":854,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"9979:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9979:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":862,"nodeType":"ExpressionStatement","src":"9979:48:2"}]},"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"9061:309:2","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":864,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:2","nodeType":"FunctionDefinition","parameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"account","nameLocation":"9398:7:2","nodeType":"VariableDeclaration","scope":864,"src":"9390:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":797,"mutability":"mutable","name":"amount","nameLocation":"9415:6:2","nodeType":"VariableDeclaration","scope":864,"src":"9407:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":796,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:2"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[],"src":"9440:0:2"},"scope":975,"src":"9375:659:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":908,"nodeType":"Block","src":"10540:257:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":875,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"10558:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:2","typeDescriptions":{}}},"id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10567:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10550:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"10550:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":885,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"10636:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:2","typeDescriptions":{}}},"id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10647:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":884,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10628:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"ExpressionStatement","src":"10628:68:2"},{"expression":{"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":894,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"10707:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":897,"indexExpression":{"id":895,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"10719:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":898,"indexExpression":{"id":896,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"10726:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":899,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"10737:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":901,"nodeType":"ExpressionStatement","src":"10707:36:2"},{"eventCall":{"arguments":[{"id":903,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"10767:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":904,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"10774:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":905,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"10783:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":902,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"10758:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10758:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":907,"nodeType":"EmitStatement","src":"10753:37:2"}]},"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"10040:412:2","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":909,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:2","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"owner","nameLocation":"10483:5:2","nodeType":"VariableDeclaration","scope":909,"src":"10475:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"spender","nameLocation":"10498:7:2","nodeType":"VariableDeclaration","scope":909,"src":"10490:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"amount","nameLocation":"10515:6:2","nodeType":"VariableDeclaration","scope":909,"src":"10507:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:2"},"returnParameters":{"id":873,"nodeType":"ParameterList","parameters":[],"src":"10540:0:2"},"scope":975,"src":"10457:340:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":951,"nodeType":"Block","src":"11168:321:2","statements":[{"assignments":[920],"declarations":[{"constant":false,"id":920,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:2","nodeType":"VariableDeclaration","scope":951,"src":"11178:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":925,"initialValue":{"arguments":[{"id":922,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"11215:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":923,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"11222:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":921,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"11205:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11205:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":926,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"11244:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":927,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11264:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11264:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":950,"nodeType":"IfStatement","src":"11240:243:2","trueBody":{"id":949,"nodeType":"Block","src":"11283:200:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":934,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"11305:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":935,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"11325:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":933,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11297:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"ExpressionStatement","src":"11297:68:2"},{"id":948,"nodeType":"UncheckedBlock","src":"11379:94:2","statements":[{"expression":{"arguments":[{"id":941,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"11416:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":942,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"11423:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":943,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"11432:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":944,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"11451:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":940,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"11407:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11407:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"ExpressionStatement","src":"11407:51:2"}]}]}}]},"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"10803:270:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":952,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:2","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"owner","nameLocation":"11111:5:2","nodeType":"VariableDeclaration","scope":952,"src":"11103:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"spender","nameLocation":"11126:7:2","nodeType":"VariableDeclaration","scope":952,"src":"11118:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"amount","nameLocation":"11143:6:2","nodeType":"VariableDeclaration","scope":952,"src":"11135:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:2"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"11168:0:2"},"scope":975,"src":"11078:411:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":962,"nodeType":"Block","src":"12162:2:2","statements":[]},"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"11495:573:2","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":963,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:2","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"from","nameLocation":"12111:4:2","nodeType":"VariableDeclaration","scope":963,"src":"12103:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"to","nameLocation":"12125:2:2","nodeType":"VariableDeclaration","scope":963,"src":"12117:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"amount","nameLocation":"12137:6:2","nodeType":"VariableDeclaration","scope":963,"src":"12129:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:2"},"returnParameters":{"id":961,"nodeType":"ParameterList","parameters":[],"src":"12162:0:2"},"scope":975,"src":"12073:91:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":973,"nodeType":"Block","src":"12840:2:2","statements":[]},"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"12170:577:2","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":974,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:2","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"from","nameLocation":"12789:4:2","nodeType":"VariableDeclaration","scope":974,"src":"12781:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"to","nameLocation":"12803:2:2","nodeType":"VariableDeclaration","scope":974,"src":"12795:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"amount","nameLocation":"12815:6:2","nodeType":"VariableDeclaration","scope":974,"src":"12807:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:2"},"returnParameters":{"id":972,"nodeType":"ParameterList","parameters":[],"src":"12840:0:2"},"scope":975,"src":"12752:90:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":976,"src":"1532:11312:2","usedErrors":[]}],"src":"105:12740:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1053]},"id":1054,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":977,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1053,"linearizedBaseContracts":[1053],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":987,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":987,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":983,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":987,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":982,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":985,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":987,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":984,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":996,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":996,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":996,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":994,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":996,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1002,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1002,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":1053,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1010,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":1010,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1010,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":1053,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1020,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":1020,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":1020,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1020,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1017,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":1053,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1021,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1030,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":1030,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":1030,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1030,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":1053,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1040,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":1040,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":1040,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1040,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1037,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":1053,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1052,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"from","nameLocation":"2676:4:3","nodeType":"VariableDeclaration","scope":1052,"src":"2668:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"to","nameLocation":"2690:2:3","nodeType":"VariableDeclaration","scope":1052,"src":"2682:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"amount","nameLocation":"2702:6:3","nodeType":"VariableDeclaration","scope":1052,"src":"2694:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:3"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1052,"src":"2728:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1049,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:3"},"scope":1053,"src":"2646:88:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1054,"src":"202:2534:3","usedErrors":[]}],"src":"106:2631:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1053],"IERC20Metadata":[1078]},"id":1079,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1055,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1056,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1079,"sourceUnit":1054,"src":"135:23:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1058,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1053,"src":"305:6:4"},"id":1059,"nodeType":"InheritanceSpecifier","src":"305:6:4"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1057,"nodeType":"StructuredDocumentation","src":"160:116:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1078,"linearizedBaseContracts":[1078,1053],"name":"IERC20Metadata","nameLocation":"287:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"318:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1065,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:4","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[],"src":"390:2:4"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1065,"src":"416:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1062,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:4"},"scope":1078,"src":"377:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"437:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1071,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:4","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[],"src":"513:2:4"},"returnParameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1071,"src":"539:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1068,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:4"},"scope":1078,"src":"498:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1072,"nodeType":"StructuredDocumentation","src":"560:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1077,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:4","nodeType":"FunctionDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[],"src":"647:2:4"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1077,"src":"673:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1074,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:4"},"scope":1078,"src":"630:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1079,"src":"277:405:4","usedErrors":[]}],"src":"110:573:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1108]},"id":1109,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1080,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"126:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1108,"linearizedBaseContracts":[1108],"name":"Context","nameLocation":"641:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1089,"nodeType":"Block","src":"717:34:5","statements":[{"expression":{"expression":{"id":1086,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"734:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1085,"id":1088,"nodeType":"Return","src":"727:17:5"}]},"id":1090,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:5","nodeType":"FunctionDefinition","parameters":{"id":1082,"nodeType":"ParameterList","parameters":[],"src":"674:2:5"},"returnParameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1090,"src":"708:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:5"},"scope":1108,"src":"655:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1098,"nodeType":"Block","src":"824:32:5","statements":[{"expression":{"expression":{"id":1095,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"841:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1094,"id":1097,"nodeType":"Return","src":"834:15:5"}]},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:5","nodeType":"FunctionDefinition","parameters":{"id":1091,"nodeType":"ParameterList","parameters":[],"src":"774:2:5"},"returnParameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1099,"src":"808:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1092,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:5"},"scope":1108,"src":"757:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1106,"nodeType":"Block","src":"934:25:5","statements":[{"expression":{"hexValue":"30","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1103,"id":1105,"nodeType":"Return","src":"944:8:5"}]},"id":1107,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:5","nodeType":"FunctionDefinition","parameters":{"id":1100,"nodeType":"ParameterList","parameters":[],"src":"891:2:5"},"returnParameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1107,"src":"925:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:5"},"scope":1108,"src":"862:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1109,"src":"623:338:5","usedErrors":[]}],"src":"101:861:5"},"id":5},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2239],"SignedMath":[2656],"Strings":[1337]},"id":1338,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1110,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1111,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1338,"sourceUnit":2240,"src":"126:25:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1112,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1338,"sourceUnit":2657,"src":"152:31:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"185:34:6","text":" @dev String operations."},"fullyImplemented":true,"id":1337,"linearizedBaseContracts":[1337],"name":"Strings","nameLocation":"228:7:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1116,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:6","nodeType":"VariableDeclaration","scope":1337,"src":"242:54:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1114,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:6","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1119,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:6","nodeType":"VariableDeclaration","scope":1337,"src":"302:43:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1117,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:6","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1166,"nodeType":"Block","src":"518:625:6","statements":[{"id":1165,"nodeType":"UncheckedBlock","src":"528:609:6","statements":[{"assignments":[1128],"declarations":[{"constant":false,"id":1128,"mutability":"mutable","name":"length","nameLocation":"560:6:6","nodeType":"VariableDeclaration","scope":1165,"src":"552:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1135,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"580:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1129,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"569:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2239_$","typeString":"type(library Math)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2076,"src":"569:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"569:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:6"},{"assignments":[1137],"declarations":[{"constant":false,"id":1137,"mutability":"mutable","name":"buffer","nameLocation":"618:6:6","nodeType":"VariableDeclaration","scope":1165,"src":"604:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1136,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1142,"initialValue":{"arguments":[{"id":1140,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"638:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1138,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"627:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:6"},{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"mutability":"mutable","name":"ptr","nameLocation":"667:3:6","nodeType":"VariableDeclaration","scope":1165,"src":"659:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1145,"nodeType":"VariableDeclarationStatement","src":"659:11:6"},{"AST":{"nodeType":"YulBlock","src":"740:67:6","statements":[{"nodeType":"YulAssignment","src":"758:35:6","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:6","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:6"},"nodeType":"YulFunctionCall","src":"777:15:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:6"},"nodeType":"YulFunctionCall","src":"765:28:6"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":1137,"isOffset":false,"isSlot":false,"src":"769:6:6","valueSize":1},{"declaration":1128,"isOffset":false,"isSlot":false,"src":"785:6:6","valueSize":1},{"declaration":1144,"isOffset":false,"isSlot":false,"src":"758:3:6","valueSize":1}],"id":1146,"nodeType":"InlineAssembly","src":"731:76:6"},{"body":{"id":1161,"nodeType":"Block","src":"833:267:6","statements":[{"expression":{"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:6","subExpression":{"id":1148,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"851:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1150,"nodeType":"ExpressionStatement","src":"851:5:6"},{"AST":{"nodeType":"YulBlock","src":"934:84:6","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:6"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:6","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:6"},"nodeType":"YulFunctionCall","src":"974:14:6"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:6"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:6"},"nodeType":"YulFunctionCall","src":"969:30:6"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:6"},"nodeType":"YulFunctionCall","src":"956:44:6"},"nodeType":"YulExpressionStatement","src":"956:44:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":1116,"isOffset":false,"isSlot":false,"src":"990:8:6","valueSize":1},{"declaration":1144,"isOffset":false,"isSlot":false,"src":"964:3:6","valueSize":1},{"declaration":1122,"isOffset":false,"isSlot":false,"src":"978:5:6","valueSize":1}],"id":1151,"nodeType":"InlineAssembly","src":"925:93:6"},{"expression":{"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"1035:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1155,"nodeType":"ExpressionStatement","src":"1035:11:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"1068:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1160,"nodeType":"IfStatement","src":"1064:21:6","trueBody":{"id":1159,"nodeType":"Break","src":"1080:5:6"}}]},"condition":{"hexValue":"74727565","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1162,"nodeType":"WhileStatement","src":"820:280:6"},{"expression":{"id":1163,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"1120:6:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1126,"id":1164,"nodeType":"Return","src":"1113:13:6"}]}]},"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"352:90:6","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1167,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:6","nodeType":"FunctionDefinition","parameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"value","nameLocation":"473:5:6","nodeType":"VariableDeclaration","scope":1167,"src":"465:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1121,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:6"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1167,"src":"503:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1124,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:6"},"scope":1337,"src":"447:696:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1194,"nodeType":"Block","src":"1313:103:6","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"1354:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:6","trueExpression":{"hexValue":"2d","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"1400:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1186,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"1385:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2656_$","typeString":"type(library SignedMath)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2655,"src":"1385:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1185,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1167,1195],"referencedDeclaration":1167,"src":"1376:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1177,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1337:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1175,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:6","typeDescriptions":{}}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1330:79:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1174,"id":1193,"nodeType":"Return","src":"1323:86:6"}]},"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"1149:89:6","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1195,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:6","nodeType":"FunctionDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"value","nameLocation":"1268:5:6","nodeType":"VariableDeclaration","scope":1195,"src":"1261:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1169,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:6"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1195,"src":"1298:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1172,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:6"},"scope":1337,"src":"1243:173:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1214,"nodeType":"Block","src":"1595:100:6","statements":[{"id":1213,"nodeType":"UncheckedBlock","src":"1605:84:6","statements":[{"expression":{"arguments":[{"id":1204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"1648:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"1667:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1205,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"1655:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2239_$","typeString":"type(library Math)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2199,"src":"1655:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1203,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1215,1291,1311],"referencedDeclaration":1291,"src":"1636:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1202,"id":1212,"nodeType":"Return","src":"1629:49:6"}]}]},"documentation":{"id":1196,"nodeType":"StructuredDocumentation","src":"1422:94:6","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:6","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"value","nameLocation":"1550:5:6","nodeType":"VariableDeclaration","scope":1215,"src":"1542:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:6"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"1580:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1200,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:6"},"scope":1337,"src":"1521:174:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1290,"nodeType":"Block","src":"1908:347:6","statements":[{"assignments":[1226],"declarations":[{"constant":false,"id":1226,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:6","nodeType":"VariableDeclaration","scope":1290,"src":"1918:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1225,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1235,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1230,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"1954:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1227,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1940:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:6"},{"expression":{"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1236,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"1975:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1238,"indexExpression":{"hexValue":"30","id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1241,"nodeType":"ExpressionStatement","src":"1975:15:6"},{"expression":{"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1242,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"2000:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1244,"indexExpression":{"hexValue":"31","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1247,"nodeType":"ExpressionStatement","src":"2000:15:6"},{"body":{"id":1276,"nodeType":"Block","src":"2070:83:6","statements":[{"expression":{"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1262,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"2084:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1264,"indexExpression":{"id":1263,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"2091:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1265,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"2096:8:6","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1269,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"2105:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:6","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1271,"nodeType":"ExpressionStatement","src":"2084:33:6"},{"expression":{"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"2131:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1275,"nodeType":"ExpressionStatement","src":"2131:11:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1256,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"2058:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1277,"initializationExpression":{"assignments":[1249],"declarations":[{"constant":false,"id":1249,"mutability":"mutable","name":"i","nameLocation":"2038:1:6","nodeType":"VariableDeclaration","scope":1277,"src":"2030:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1255,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1251,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"2046:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:6"},"loopExpression":{"expression":{"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:6","subExpression":{"id":1259,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"2067:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1261,"nodeType":"ExpressionStatement","src":"2065:3:6"},"nodeType":"ForStatement","src":"2025:128:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"2170:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2162:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1284,"nodeType":"ExpressionStatement","src":"2162:55:6"},{"expression":{"arguments":[{"id":1287,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"2241:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1285,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:6","typeDescriptions":{}}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1224,"id":1289,"nodeType":"Return","src":"2227:21:6"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"1701:112:6","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1291,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:6","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"value","nameLocation":"1847:5:6","nodeType":"VariableDeclaration","scope":1291,"src":"1839:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"length","nameLocation":"1862:6:6","nodeType":"VariableDeclaration","scope":1291,"src":"1854:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:6"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1291,"src":"1893:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1222,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:6"},"scope":1337,"src":"1818:437:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1310,"nodeType":"Block","src":"2480:76:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1304,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"2525:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1302,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:6","typeDescriptions":{}}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:6","typeDescriptions":{}}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1307,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"2533:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1299,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1215,1291,1311],"referencedDeclaration":1291,"src":"2497:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1298,"id":1309,"nodeType":"Return","src":"2490:59:6"}]},"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"2261:141:6","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1311,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:6","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"addr","nameLocation":"2436:4:6","nodeType":"VariableDeclaration","scope":1311,"src":"2428:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:6"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1311,"src":"2465:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1296,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:6"},"scope":1337,"src":"2407:149:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1335,"nodeType":"Block","src":"2711:66:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1324,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"2744:1:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1322,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:6","typeDescriptions":{}}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2738:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1321,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1330,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"2767:1:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1328,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:6","typeDescriptions":{}}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2761:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1327,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2751:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1320,"id":1334,"nodeType":"Return","src":"2721:49:6"}]},"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"2562:66:6","text":" @dev Returns true if the two strings are equal."},"id":1336,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:6","nodeType":"FunctionDefinition","parameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"a","nameLocation":"2662:1:6","nodeType":"VariableDeclaration","scope":1336,"src":"2648:15:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1313,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1316,"mutability":"mutable","name":"b","nameLocation":"2679:1:6","nodeType":"VariableDeclaration","scope":1336,"src":"2665:15:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1315,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:6"},"returnParameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1336,"src":"2705:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1318,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:6"},"scope":1337,"src":"2633:144:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1338,"src":"220:2559:6","usedErrors":[]}],"src":"101:2679:6"},"id":6},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1361],"IERC165":[1373]},"id":1362,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1339,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1340,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1362,"sourceUnit":1374,"src":"124:23:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1342,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1373,"src":"754:7:7"},"id":1343,"nodeType":"InheritanceSpecifier","src":"754:7:7"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"149:576:7","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1361,"linearizedBaseContracts":[1361,1373],"name":"ERC165","nameLocation":"744:6:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1372],"body":{"id":1359,"nodeType":"Block","src":"920:64:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1352,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"937:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1354,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"957:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1373_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1373_$","typeString":"type(contract IERC165)"}],"id":1353,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1373","typeString":"type(contract IERC165)"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1351,"id":1358,"nodeType":"Return","src":"930:47:7"}]},"documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"768:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1360,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:7","nodeType":"FunctionDefinition","overrides":{"id":1348,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:7"},"parameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:7","nodeType":"VariableDeclaration","scope":1360,"src":"856:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1345,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:7"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1360,"src":"914:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1349,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:7"},"scope":1361,"src":"829:155:7","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1362,"src":"726:260:7","usedErrors":[]}],"src":"99:888:7"},"id":7},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1373]},"id":1374,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1363,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1364,"nodeType":"StructuredDocumentation","src":"125:279:8","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1373,"linearizedBaseContracts":[1373],"name":"IERC165","nameLocation":"415:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"429:340:8","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1372,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:8","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:8","nodeType":"VariableDeclaration","scope":1372,"src":"801:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1366,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:8"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1372,"src":"844:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1369,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:8"},"scope":1373,"src":"774:76:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1374,"src":"405:447:8","usedErrors":[]}],"src":"100:753:8"},"id":8},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2239]},"id":2240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1375,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"128:73:9","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2239,"linearizedBaseContracts":[2239],"name":"Math","nameLocation":"210:4:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1380,"members":[{"id":1377,"name":"Down","nameLocation":"245:4:9","nodeType":"EnumValue","src":"245:4:9"},{"id":1378,"name":"Up","nameLocation":"287:2:9","nodeType":"EnumValue","src":"287:2:9"},{"id":1379,"name":"Zero","nameLocation":"318:4:9","nodeType":"EnumValue","src":"318:4:9"}],"name":"Rounding","nameLocation":"226:8:9","nodeType":"EnumDefinition","src":"221:122:9"},{"body":{"id":1397,"nodeType":"Block","src":"480:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"497:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1391,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"501:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1394,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"509:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:9","trueExpression":{"id":1393,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"505:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1389,"id":1396,"nodeType":"Return","src":"490:20:9"}]},"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"349:59:9","text":" @dev Returns the largest of two numbers."},"id":1398,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:9","nodeType":"FunctionDefinition","parameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"a","nameLocation":"434:1:9","nodeType":"VariableDeclaration","scope":1398,"src":"426:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"b","nameLocation":"445:1:9","nodeType":"VariableDeclaration","scope":1398,"src":"437:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:9"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1398,"src":"471:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:9"},"scope":2239,"src":"413:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1415,"nodeType":"Block","src":"655:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"672:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1409,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"676:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1412,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"684:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:9","trueExpression":{"id":1411,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"680:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1407,"id":1414,"nodeType":"Return","src":"665:20:9"}]},"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"523:60:9","text":" @dev Returns the smallest of two numbers."},"id":1416,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:9","nodeType":"FunctionDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"a","nameLocation":"609:1:9","nodeType":"VariableDeclaration","scope":1416,"src":"601:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"b","nameLocation":"620:1:9","nodeType":"VariableDeclaration","scope":1416,"src":"612:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:9"},"returnParameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1416,"src":"646:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:9"},"scope":2239,"src":"588:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1438,"nodeType":"Block","src":"876:82:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1426,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"931:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1427,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"935:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1429,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"941:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1431,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"945:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1425,"id":1437,"nodeType":"Return","src":"923:28:9"}]},"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"698:102:9","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1439,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:9","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"a","nameLocation":"830:1:9","nodeType":"VariableDeclaration","scope":1439,"src":"822:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"b","nameLocation":"841:1:9","nodeType":"VariableDeclaration","scope":1439,"src":"833:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:9"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1439,"src":"867:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:9"},"scope":2239,"src":"805:153:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1463,"nodeType":"Block","src":"1228:123:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"1316:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1453,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"1330:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1457,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"1339:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:9","trueExpression":{"hexValue":"30","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1448,"id":1462,"nodeType":"Return","src":"1309:35:9"}]},"documentation":{"id":1440,"nodeType":"StructuredDocumentation","src":"964:188:9","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1464,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:9","nodeType":"FunctionDefinition","parameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"a","nameLocation":"1182:1:9","nodeType":"VariableDeclaration","scope":1464,"src":"1174:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"b","nameLocation":"1193:1:9","nodeType":"VariableDeclaration","scope":1464,"src":"1185:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1443,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:9"},"returnParameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1464,"src":"1219:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:9"},"scope":2239,"src":"1157:194:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1586,"nodeType":"Block","src":"1765:4115:9","statements":[{"id":1585,"nodeType":"UncheckedBlock","src":"1775:4099:9","statements":[{"assignments":[1477],"declarations":[{"constant":false,"id":1477,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:9","nodeType":"VariableDeclaration","scope":1585,"src":"2096:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1476,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1478,"nodeType":"VariableDeclarationStatement","src":"2096:13:9"},{"assignments":[1480],"declarations":[{"constant":false,"id":1480,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:9","nodeType":"VariableDeclaration","scope":1585,"src":"2168:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1481,"nodeType":"VariableDeclarationStatement","src":"2168:13:9"},{"AST":{"nodeType":"YulBlock","src":"2248:157:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:9","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:9"},"nodeType":"YulFunctionCall","src":"2289:6:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:9"},"nodeType":"YulFunctionCall","src":"2276:20:9"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:9","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:9"},"nodeType":"YulFunctionCall","src":"2322:9:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:9"}]},{"nodeType":"YulAssignment","src":"2348:43:9","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:9"},"nodeType":"YulFunctionCall","src":"2361:14:9"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:9"},"nodeType":"YulFunctionCall","src":"2377:13:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:9"},"nodeType":"YulFunctionCall","src":"2357:34:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:9"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1477,"isOffset":false,"isSlot":false,"src":"2313:5:9","valueSize":1},{"declaration":1477,"isOffset":false,"isSlot":false,"src":"2369:5:9","valueSize":1},{"declaration":1477,"isOffset":false,"isSlot":false,"src":"2384:5:9","valueSize":1},{"declaration":1480,"isOffset":false,"isSlot":false,"src":"2348:5:9","valueSize":1},{"declaration":1467,"isOffset":false,"isSlot":false,"src":"2283:1:9","valueSize":1},{"declaration":1467,"isOffset":false,"isSlot":false,"src":"2326:1:9","valueSize":1},{"declaration":1469,"isOffset":false,"isSlot":false,"src":"2286:1:9","valueSize":1},{"declaration":1469,"isOffset":false,"isSlot":false,"src":"2329:1:9","valueSize":1}],"id":1482,"nodeType":"InlineAssembly","src":"2239:166:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1483,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"2486:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1491,"nodeType":"IfStatement","src":"2482:368:9","trueBody":{"id":1490,"nodeType":"Block","src":"2498:352:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"2816:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1487,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2824:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1475,"id":1489,"nodeType":"Return","src":"2809:26:9"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1493,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2960:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1494,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"2974:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1492,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1498,"nodeType":"ExpressionStatement","src":"2952:53:9"},{"assignments":[1500],"declarations":[{"constant":false,"id":1500,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:9","nodeType":"VariableDeclaration","scope":1585,"src":"3261:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1501,"nodeType":"VariableDeclarationStatement","src":"3261:17:9"},{"AST":{"nodeType":"YulBlock","src":"3301:291:9","statements":[{"nodeType":"YulAssignment","src":"3370:38:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:9"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:9"},"nodeType":"YulFunctionCall","src":"3383:25:9"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:9"}]},{"nodeType":"YulAssignment","src":"3490:41:9","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:9"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:9"},"nodeType":"YulFunctionCall","src":"3510:20:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:9"},"nodeType":"YulFunctionCall","src":"3499:32:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:9"}]},{"nodeType":"YulAssignment","src":"3548:30:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:9"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:9"},"nodeType":"YulFunctionCall","src":"3557:21:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:9"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1471,"isOffset":false,"isSlot":false,"src":"3396:11:9","valueSize":1},{"declaration":1477,"isOffset":false,"isSlot":false,"src":"3524:5:9","valueSize":1},{"declaration":1477,"isOffset":false,"isSlot":false,"src":"3548:5:9","valueSize":1},{"declaration":1477,"isOffset":false,"isSlot":false,"src":"3561:5:9","valueSize":1},{"declaration":1480,"isOffset":false,"isSlot":false,"src":"3490:5:9","valueSize":1},{"declaration":1480,"isOffset":false,"isSlot":false,"src":"3503:5:9","valueSize":1},{"declaration":1500,"isOffset":false,"isSlot":false,"src":"3370:9:9","valueSize":1},{"declaration":1500,"isOffset":false,"isSlot":false,"src":"3513:9:9","valueSize":1},{"declaration":1500,"isOffset":false,"isSlot":false,"src":"3568:9:9","valueSize":1},{"declaration":1467,"isOffset":false,"isSlot":false,"src":"3390:1:9","valueSize":1},{"declaration":1469,"isOffset":false,"isSlot":false,"src":"3393:1:9","valueSize":1}],"id":1502,"nodeType":"InlineAssembly","src":"3292:300:9"},{"assignments":[1504],"declarations":[{"constant":false,"id":1504,"mutability":"mutable","name":"twos","nameLocation":"3907:4:9","nodeType":"VariableDeclaration","scope":1585,"src":"3899:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1512,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1505,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"3914:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:9","subExpression":{"id":1506,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"3930:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:9"},{"AST":{"nodeType":"YulBlock","src":"3969:362:9","statements":[{"nodeType":"YulAssignment","src":"4034:37:9","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:9"},"nodeType":"YulFunctionCall","src":"4049:22:9"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:9"}]},{"nodeType":"YulAssignment","src":"4138:25:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:9"},"nodeType":"YulFunctionCall","src":"4147:16:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:9"}]},{"nodeType":"YulAssignment","src":"4278:39:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:9","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:9"},"nodeType":"YulFunctionCall","src":"4294:12:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:9"},"nodeType":"YulFunctionCall","src":"4290:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:9"},"nodeType":"YulFunctionCall","src":"4286:31:9"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:9"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1471,"isOffset":false,"isSlot":false,"src":"4034:11:9","valueSize":1},{"declaration":1471,"isOffset":false,"isSlot":false,"src":"4053:11:9","valueSize":1},{"declaration":1477,"isOffset":false,"isSlot":false,"src":"4138:5:9","valueSize":1},{"declaration":1477,"isOffset":false,"isSlot":false,"src":"4151:5:9","valueSize":1},{"declaration":1504,"isOffset":false,"isSlot":false,"src":"4066:4:9","valueSize":1},{"declaration":1504,"isOffset":false,"isSlot":false,"src":"4158:4:9","valueSize":1},{"declaration":1504,"isOffset":false,"isSlot":false,"src":"4278:4:9","valueSize":1},{"declaration":1504,"isOffset":false,"isSlot":false,"src":"4301:4:9","valueSize":1},{"declaration":1504,"isOffset":false,"isSlot":false,"src":"4308:4:9","valueSize":1}],"id":1513,"nodeType":"InlineAssembly","src":"3960:371:9"},{"expression":{"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1514,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"4397:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1515,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"4406:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1516,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"4414:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1519,"nodeType":"ExpressionStatement","src":"4397:21:9"},{"assignments":[1521],"declarations":[{"constant":false,"id":1521,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:9","nodeType":"VariableDeclaration","scope":1585,"src":"4736:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1528,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1523,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"4759:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:9"},{"expression":{"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1529,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"4992:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1531,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"5007:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1532,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5021:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1536,"nodeType":"ExpressionStatement","src":"4992:36:9"},{"expression":{"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1537,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5061:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1539,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"5076:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1540,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5090:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1544,"nodeType":"ExpressionStatement","src":"5061:36:9"},{"expression":{"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1545,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5131:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1547,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"5146:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1548,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5160:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1552,"nodeType":"ExpressionStatement","src":"5131:36:9"},{"expression":{"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1553,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5201:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1555,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"5216:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1556,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5230:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1560,"nodeType":"ExpressionStatement","src":"5201:36:9"},{"expression":{"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1561,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1563,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"5286:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1564,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5300:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1568,"nodeType":"ExpressionStatement","src":"5271:36:9"},{"expression":{"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1569,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1571,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"5357:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1572,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5371:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1576,"nodeType":"ExpressionStatement","src":"5342:36:9"},{"expression":{"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1577,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"5812:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1578,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"5821:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1579,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5829:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1582,"nodeType":"ExpressionStatement","src":"5812:24:9"},{"expression":{"id":1583,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"5857:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1475,"id":1584,"nodeType":"Return","src":"5850:13:9"}]}]},"documentation":{"id":1465,"nodeType":"StructuredDocumentation","src":"1357:305:9","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1587,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:9","nodeType":"FunctionDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1467,"mutability":"mutable","name":"x","nameLocation":"1691:1:9","nodeType":"VariableDeclaration","scope":1587,"src":"1683:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1469,"mutability":"mutable","name":"y","nameLocation":"1702:1:9","nodeType":"VariableDeclaration","scope":1587,"src":"1694:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:9","nodeType":"VariableDeclaration","scope":1587,"src":"1705:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:9"},"returnParameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"result","nameLocation":"1757:6:9","nodeType":"VariableDeclaration","scope":1587,"src":"1749:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:9"},"scope":2239,"src":"1667:4213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1630,"nodeType":"Block","src":"6122:189:9","statements":[{"assignments":[1603],"declarations":[{"constant":false,"id":1603,"mutability":"mutable","name":"result","nameLocation":"6140:6:9","nodeType":"VariableDeclaration","scope":1630,"src":"6132:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1609,"initialValue":{"arguments":[{"id":1605,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"6156:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1606,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"6159:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1607,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"6162:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1604,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1587,1631],"referencedDeclaration":1587,"src":"6149:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6149:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1610,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"6188:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1611,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"6200:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1380_$","typeString":"type(enum Math.Rounding)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"6200:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"}},"src":"6188:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1615,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"6222:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1616,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"6225:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1617,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"6228:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1614,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:9","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6215:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1627,"nodeType":"IfStatement","src":"6184:98:9","trueBody":{"id":1626,"nodeType":"Block","src":"6246:36:9","statements":[{"expression":{"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1622,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"6260:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1625,"nodeType":"ExpressionStatement","src":"6260:11:9"}]}},{"expression":{"id":1628,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"6298:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1601,"id":1629,"nodeType":"Return","src":"6291:13:9"}]},"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"5886:121:9","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1631,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:9","nodeType":"FunctionDefinition","parameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"x","nameLocation":"6036:1:9","nodeType":"VariableDeclaration","scope":1631,"src":"6028:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1589,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"y","nameLocation":"6047:1:9","nodeType":"VariableDeclaration","scope":1631,"src":"6039:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1594,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:9","nodeType":"VariableDeclaration","scope":1631,"src":"6050:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:9","nodeType":"VariableDeclaration","scope":1631,"src":"6071:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"},"typeName":{"id":1596,"nodeType":"UserDefinedTypeName","pathNode":{"id":1595,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1380,"src":"6071:8:9"},"referencedDeclaration":1380,"src":"6071:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:9"},"returnParameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1631,"src":"6113:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:9"},"scope":2239,"src":"6012:299:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1742,"nodeType":"Block","src":"6587:1585:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1639,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"6601:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1645,"nodeType":"IfStatement","src":"6597:45:9","trueBody":{"id":1644,"nodeType":"Block","src":"6609:33:9","statements":[{"expression":{"hexValue":"30","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1638,"id":1643,"nodeType":"Return","src":"6623:8:9"}]}},{"assignments":[1647],"declarations":[{"constant":false,"id":1647,"mutability":"mutable","name":"result","nameLocation":"7329:6:9","nodeType":"VariableDeclaration","scope":1742,"src":"7321:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1656,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1650,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"7349:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1649,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1911,1947],"referencedDeclaration":1911,"src":"7344:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:9"},{"id":1741,"nodeType":"UncheckedBlock","src":"7758:408:9","statements":[{"expression":{"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1657,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"7782:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1658,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"7792:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1659,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"7801:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"7805:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1667,"nodeType":"ExpressionStatement","src":"7782:35:9"},{"expression":{"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1668,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"7831:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1669,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"7841:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1670,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"7850:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1671,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"7854:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1678,"nodeType":"ExpressionStatement","src":"7831:35:9"},{"expression":{"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1679,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"7880:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"7890:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"7899:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"7903:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1689,"nodeType":"ExpressionStatement","src":"7880:35:9"},{"expression":{"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"7929:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"7939:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1692,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"7948:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1693,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"7952:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1696,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1700,"nodeType":"ExpressionStatement","src":"7929:35:9"},{"expression":{"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"7978:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"7988:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"7997:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1704,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"8001:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1711,"nodeType":"ExpressionStatement","src":"7978:35:9"},{"expression":{"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"8027:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"8037:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1714,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"8046:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1715,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"8050:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1722,"nodeType":"ExpressionStatement","src":"8027:35:9"},{"expression":{"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"8076:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1724,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"8086:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"8095:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1726,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"8099:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1729,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1733,"nodeType":"ExpressionStatement","src":"8076:35:9"},{"expression":{"arguments":[{"id":1735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"8136:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1736,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"8144:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"8148:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1734,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"8132:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1638,"id":1740,"nodeType":"Return","src":"8125:30:9"}]}]},"documentation":{"id":1632,"nodeType":"StructuredDocumentation","src":"6317:208:9","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:9","nodeType":"FunctionDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"a","nameLocation":"6552:1:9","nodeType":"VariableDeclaration","scope":1743,"src":"6544:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1633,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:9"},"returnParameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1743,"src":"6578:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:9"},"scope":2239,"src":"6530:1642:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1778,"nodeType":"Block","src":"8348:161:9","statements":[{"id":1777,"nodeType":"UncheckedBlock","src":"8358:145:9","statements":[{"assignments":[1755],"declarations":[{"constant":false,"id":1755,"mutability":"mutable","name":"result","nameLocation":"8390:6:9","nodeType":"VariableDeclaration","scope":1777,"src":"8382:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1759,"initialValue":{"arguments":[{"id":1757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"8404:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1756,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1743,1779],"referencedDeclaration":1743,"src":"8399:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"8427:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1761,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"8437:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1762,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"8449:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1380_$","typeString":"type(enum Math.Rounding)"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"8449:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"}},"src":"8437:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"8464:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1766,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"8473:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1768,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"8482:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:9","trueExpression":{"hexValue":"31","id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1753,"id":1776,"nodeType":"Return","src":"8420:72:9"}]}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"8178:89:9","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:9","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"a","nameLocation":"8294:1:9","nodeType":"VariableDeclaration","scope":1779,"src":"8286:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1749,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:9","nodeType":"VariableDeclaration","scope":1779,"src":"8297:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"},"typeName":{"id":1748,"nodeType":"UserDefinedTypeName","pathNode":{"id":1747,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1380,"src":"8297:8:9"},"referencedDeclaration":1380,"src":"8297:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:9"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1779,"src":"8339:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1751,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:9"},"scope":2239,"src":"8272:237:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1910,"nodeType":"Block","src":"8694:922:9","statements":[{"assignments":[1788],"declarations":[{"constant":false,"id":1788,"mutability":"mutable","name":"result","nameLocation":"8712:6:9","nodeType":"VariableDeclaration","scope":1910,"src":"8704:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1790,"initialValue":{"hexValue":"30","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:9"},{"id":1907,"nodeType":"UncheckedBlock","src":"8732:855:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"8760:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1805,"nodeType":"IfStatement","src":"8756:99:9","trueBody":{"id":1804,"nodeType":"Block","src":"8778:77:9","statements":[{"expression":{"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"8796:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1799,"nodeType":"ExpressionStatement","src":"8796:13:9"},{"expression":{"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1800,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"8827:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1803,"nodeType":"ExpressionStatement","src":"8827:13:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"8872:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1820,"nodeType":"IfStatement","src":"8868:96:9","trueBody":{"id":1819,"nodeType":"Block","src":"8889:75:9","statements":[{"expression":{"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"8907:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1814,"nodeType":"ExpressionStatement","src":"8907:12:9"},{"expression":{"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"8937:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1818,"nodeType":"ExpressionStatement","src":"8937:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"8981:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1835,"nodeType":"IfStatement","src":"8977:96:9","trueBody":{"id":1834,"nodeType":"Block","src":"8998:75:9","statements":[{"expression":{"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"9016:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1829,"nodeType":"ExpressionStatement","src":"9016:12:9"},{"expression":{"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"9046:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1833,"nodeType":"ExpressionStatement","src":"9046:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"9090:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1850,"nodeType":"IfStatement","src":"9086:96:9","trueBody":{"id":1849,"nodeType":"Block","src":"9107:75:9","statements":[{"expression":{"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"9125:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1844,"nodeType":"ExpressionStatement","src":"9125:12:9"},{"expression":{"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"9155:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1848,"nodeType":"ExpressionStatement","src":"9155:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"9199:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1865,"nodeType":"IfStatement","src":"9195:93:9","trueBody":{"id":1864,"nodeType":"Block","src":"9215:73:9","statements":[{"expression":{"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"9233:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1859,"nodeType":"ExpressionStatement","src":"9233:11:9"},{"expression":{"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1860,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"9262:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1863,"nodeType":"ExpressionStatement","src":"9262:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"9305:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1880,"nodeType":"IfStatement","src":"9301:93:9","trueBody":{"id":1879,"nodeType":"Block","src":"9321:73:9","statements":[{"expression":{"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"9339:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1874,"nodeType":"ExpressionStatement","src":"9339:11:9"},{"expression":{"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1875,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"9368:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1878,"nodeType":"ExpressionStatement","src":"9368:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"9411:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1895,"nodeType":"IfStatement","src":"9407:93:9","trueBody":{"id":1894,"nodeType":"Block","src":"9427:73:9","statements":[{"expression":{"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"9445:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1889,"nodeType":"ExpressionStatement","src":"9445:11:9"},{"expression":{"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1890,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"9474:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1893,"nodeType":"ExpressionStatement","src":"9474:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"9517:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1906,"nodeType":"IfStatement","src":"9513:64:9","trueBody":{"id":1905,"nodeType":"Block","src":"9533:44:9","statements":[{"expression":{"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"9551:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1904,"nodeType":"ExpressionStatement","src":"9551:11:9"}]}}]},{"expression":{"id":1908,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"9603:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1786,"id":1909,"nodeType":"Return","src":"9596:13:9"}]},"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"8515:113:9","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1911,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:9","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"value","nameLocation":"8655:5:9","nodeType":"VariableDeclaration","scope":1911,"src":"8647:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:9"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1911,"src":"8685:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:9"},"scope":2239,"src":"8633:983:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1946,"nodeType":"Block","src":"9849:165:9","statements":[{"id":1945,"nodeType":"UncheckedBlock","src":"9859:149:9","statements":[{"assignments":[1923],"declarations":[{"constant":false,"id":1923,"mutability":"mutable","name":"result","nameLocation":"9891:6:9","nodeType":"VariableDeclaration","scope":1945,"src":"9883:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1927,"initialValue":{"arguments":[{"id":1925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"9905:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1924,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1911,1947],"referencedDeclaration":1911,"src":"9900:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9900:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1928,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"9932:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1929,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"9942:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1930,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"9954:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1380_$","typeString":"type(enum Math.Rounding)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"9954:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"}},"src":"9942:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1934,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"9974:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"9983:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:9","trueExpression":{"hexValue":"31","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1921,"id":1944,"nodeType":"Return","src":"9925:72:9"}]}]},"documentation":{"id":1912,"nodeType":"StructuredDocumentation","src":"9622:142:9","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1947,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:9","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"value","nameLocation":"9791:5:9","nodeType":"VariableDeclaration","scope":1947,"src":"9783:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1917,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:9","nodeType":"VariableDeclaration","scope":1947,"src":"9798:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"},"typeName":{"id":1916,"nodeType":"UserDefinedTypeName","pathNode":{"id":1915,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1380,"src":"9798:8:9"},"referencedDeclaration":1380,"src":"9798:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:9"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1947,"src":"9840:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:9"},"scope":2239,"src":"9769:245:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2075,"nodeType":"Block","src":"10201:854:9","statements":[{"assignments":[1956],"declarations":[{"constant":false,"id":1956,"mutability":"mutable","name":"result","nameLocation":"10219:6:9","nodeType":"VariableDeclaration","scope":2075,"src":"10211:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1958,"initialValue":{"hexValue":"30","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:9"},{"id":2072,"nodeType":"UncheckedBlock","src":"10239:787:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"10267:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1975,"nodeType":"IfStatement","src":"10263:103:9","trueBody":{"id":1974,"nodeType":"Block","src":"10286:80:9","statements":[{"expression":{"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"10304:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1969,"nodeType":"ExpressionStatement","src":"10304:17:9"},{"expression":{"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1970,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"10339:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1973,"nodeType":"ExpressionStatement","src":"10339:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"10383:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1992,"nodeType":"IfStatement","src":"10379:103:9","trueBody":{"id":1991,"nodeType":"Block","src":"10402:80:9","statements":[{"expression":{"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"10420:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1986,"nodeType":"ExpressionStatement","src":"10420:17:9"},{"expression":{"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1987,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"10455:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1990,"nodeType":"ExpressionStatement","src":"10455:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"10499:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2009,"nodeType":"IfStatement","src":"10495:103:9","trueBody":{"id":2008,"nodeType":"Block","src":"10518:80:9","statements":[{"expression":{"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"10536:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2003,"nodeType":"ExpressionStatement","src":"10536:17:9"},{"expression":{"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"10571:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2007,"nodeType":"ExpressionStatement","src":"10571:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"10615:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2026,"nodeType":"IfStatement","src":"10611:100:9","trueBody":{"id":2025,"nodeType":"Block","src":"10633:78:9","statements":[{"expression":{"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"10651:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2020,"nodeType":"ExpressionStatement","src":"10651:16:9"},{"expression":{"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2021,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"10685:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2024,"nodeType":"ExpressionStatement","src":"10685:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"10728:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2043,"nodeType":"IfStatement","src":"10724:100:9","trueBody":{"id":2042,"nodeType":"Block","src":"10746:78:9","statements":[{"expression":{"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"10764:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2037,"nodeType":"ExpressionStatement","src":"10764:16:9"},{"expression":{"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"10798:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2041,"nodeType":"ExpressionStatement","src":"10798:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"10841:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2060,"nodeType":"IfStatement","src":"10837:100:9","trueBody":{"id":2059,"nodeType":"Block","src":"10859:78:9","statements":[{"expression":{"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"10877:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2054,"nodeType":"ExpressionStatement","src":"10877:16:9"},{"expression":{"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2055,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"10911:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2058,"nodeType":"ExpressionStatement","src":"10911:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"10954:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2071,"nodeType":"IfStatement","src":"10950:66:9","trueBody":{"id":2070,"nodeType":"Block","src":"10972:44:9","statements":[{"expression":{"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"10990:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2069,"nodeType":"ExpressionStatement","src":"10990:11:9"}]}}]},{"expression":{"id":2073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"11042:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1954,"id":2074,"nodeType":"Return","src":"11035:13:9"}]},"documentation":{"id":1948,"nodeType":"StructuredDocumentation","src":"10020:114:9","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2076,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:9","nodeType":"FunctionDefinition","parameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"value","nameLocation":"10162:5:9","nodeType":"VariableDeclaration","scope":2076,"src":"10154:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1949,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:9"},"returnParameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2076,"src":"10192:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:9"},"scope":2239,"src":"10139:916:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2111,"nodeType":"Block","src":"11290:167:9","statements":[{"id":2110,"nodeType":"UncheckedBlock","src":"11300:151:9","statements":[{"assignments":[2088],"declarations":[{"constant":false,"id":2088,"mutability":"mutable","name":"result","nameLocation":"11332:6:9","nodeType":"VariableDeclaration","scope":2110,"src":"11324:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2087,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2092,"initialValue":{"arguments":[{"id":2090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"11347:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2089,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2076,2112],"referencedDeclaration":2076,"src":"11341:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11341:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2093,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"11374:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2094,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"11384:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2095,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"11396:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1380_$","typeString":"type(enum Math.Rounding)"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"11396:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"}},"src":"11384:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2099,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"11417:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"11426:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:9","trueExpression":{"hexValue":"31","id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2086,"id":2109,"nodeType":"Return","src":"11367:73:9"}]}]},"documentation":{"id":2077,"nodeType":"StructuredDocumentation","src":"11061:143:9","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2112,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:9","nodeType":"FunctionDefinition","parameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"value","nameLocation":"11232:5:9","nodeType":"VariableDeclaration","scope":2112,"src":"11224:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2082,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:9","nodeType":"VariableDeclaration","scope":2112,"src":"11239:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"},"typeName":{"id":2081,"nodeType":"UserDefinedTypeName","pathNode":{"id":2080,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1380,"src":"11239:8:9"},"referencedDeclaration":1380,"src":"11239:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:9"},"returnParameters":{"id":2086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2112,"src":"11281:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2084,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:9"},"scope":2239,"src":"11209:248:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2198,"nodeType":"Block","src":"11771:600:9","statements":[{"assignments":[2121],"declarations":[{"constant":false,"id":2121,"mutability":"mutable","name":"result","nameLocation":"11789:6:9","nodeType":"VariableDeclaration","scope":2198,"src":"11781:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2123,"initialValue":{"hexValue":"30","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:9"},{"id":2195,"nodeType":"UncheckedBlock","src":"11809:533:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"11837:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2138,"nodeType":"IfStatement","src":"11833:98:9","trueBody":{"id":2137,"nodeType":"Block","src":"11855:76:9","statements":[{"expression":{"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"11873:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2132,"nodeType":"ExpressionStatement","src":"11873:13:9"},{"expression":{"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2133,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"11904:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2136,"nodeType":"ExpressionStatement","src":"11904:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"11948:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2153,"nodeType":"IfStatement","src":"11944:95:9","trueBody":{"id":2152,"nodeType":"Block","src":"11965:74:9","statements":[{"expression":{"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"11983:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2147,"nodeType":"ExpressionStatement","src":"11983:12:9"},{"expression":{"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2148,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"12013:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2151,"nodeType":"ExpressionStatement","src":"12013:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"12056:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2168,"nodeType":"IfStatement","src":"12052:95:9","trueBody":{"id":2167,"nodeType":"Block","src":"12073:74:9","statements":[{"expression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"12091:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2162,"nodeType":"ExpressionStatement","src":"12091:12:9"},{"expression":{"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2163,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"12121:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2166,"nodeType":"ExpressionStatement","src":"12121:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"12164:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2183,"nodeType":"IfStatement","src":"12160:95:9","trueBody":{"id":2182,"nodeType":"Block","src":"12181:74:9","statements":[{"expression":{"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"12199:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2177,"nodeType":"ExpressionStatement","src":"12199:12:9"},{"expression":{"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2178,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"12229:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2181,"nodeType":"ExpressionStatement","src":"12229:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"12272:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2194,"nodeType":"IfStatement","src":"12268:64:9","trueBody":{"id":2193,"nodeType":"Block","src":"12288:44:9","statements":[{"expression":{"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2189,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"12306:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2192,"nodeType":"ExpressionStatement","src":"12306:11:9"}]}}]},{"expression":{"id":2196,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"12358:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2119,"id":2197,"nodeType":"Return","src":"12351:13:9"}]},"documentation":{"id":2113,"nodeType":"StructuredDocumentation","src":"11463:240:9","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2199,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:9","nodeType":"FunctionDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"value","nameLocation":"11732:5:9","nodeType":"VariableDeclaration","scope":2199,"src":"11724:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:9"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2199,"src":"11762:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:9"},"scope":2239,"src":"11708:663:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2237,"nodeType":"Block","src":"12608:174:9","statements":[{"id":2236,"nodeType":"UncheckedBlock","src":"12618:158:9","statements":[{"assignments":[2211],"declarations":[{"constant":false,"id":2211,"mutability":"mutable","name":"result","nameLocation":"12650:6:9","nodeType":"VariableDeclaration","scope":2236,"src":"12642:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2210,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2215,"initialValue":{"arguments":[{"id":2213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"12666:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2212,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2199,2238],"referencedDeclaration":2199,"src":"12659:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12659:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"12693:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2217,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"12703:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2218,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"12715:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1380_$","typeString":"type(enum Math.Rounding)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"12715:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"}},"src":"12703:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2222,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"12736:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"12751:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:9","trueExpression":{"hexValue":"31","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2233,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2209,"id":2235,"nodeType":"Return","src":"12686:79:9"}]}]},"documentation":{"id":2200,"nodeType":"StructuredDocumentation","src":"12377:144:9","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2238,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:9","nodeType":"FunctionDefinition","parameters":{"id":2206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"value","nameLocation":"12550:5:9","nodeType":"VariableDeclaration","scope":2238,"src":"12542:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2201,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2205,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:9","nodeType":"VariableDeclaration","scope":2238,"src":"12557:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"},"typeName":{"id":2204,"nodeType":"UserDefinedTypeName","pathNode":{"id":2203,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1380,"src":"12557:8:9"},"referencedDeclaration":1380,"src":"12557:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1380","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:9"},"returnParameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2238,"src":"12599:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:9"},"scope":2239,"src":"12526:256:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2240,"src":"202:12582:9","usedErrors":[]}],"src":"103:12682:9"},"id":9},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[2551]},"id":2552,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2241,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:10"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"285:196:10","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":2551,"linearizedBaseContracts":[2551],"name":"SafeMath","nameLocation":"490:8:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2273,"nodeType":"Block","src":"717:140:10","statements":[{"id":2272,"nodeType":"UncheckedBlock","src":"727:124:10","statements":[{"assignments":[2255],"declarations":[{"constant":false,"id":2255,"mutability":"mutable","name":"c","nameLocation":"759:1:10","nodeType":"VariableDeclaration","scope":2272,"src":"751:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2254,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2259,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"763:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2257,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"767:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2260,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"786:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2261,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"790:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2267,"nodeType":"IfStatement","src":"782:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2253,"id":2266,"nodeType":"Return","src":"793:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2269,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"838:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2253,"id":2271,"nodeType":"Return","src":"824:16:10"}]}]},"documentation":{"id":2243,"nodeType":"StructuredDocumentation","src":"505:131:10","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":2274,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:10","nodeType":"FunctionDefinition","parameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"a","nameLocation":"665:1:10","nodeType":"VariableDeclaration","scope":2274,"src":"657:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2247,"mutability":"mutable","name":"b","nameLocation":"676:1:10","nodeType":"VariableDeclaration","scope":2274,"src":"668:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:10"},"returnParameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2274,"src":"702:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2249,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2274,"src":"708:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:10"},"scope":2551,"src":"641:216:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2301,"nodeType":"Block","src":"1078:113:10","statements":[{"id":2300,"nodeType":"UncheckedBlock","src":"1088:97:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2286,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"1116:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2287,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"1120:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2293,"nodeType":"IfStatement","src":"1112:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2285,"id":2292,"nodeType":"Return","src":"1123:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"1168:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2296,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"1172:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2285,"id":2299,"nodeType":"Return","src":"1154:20:10"}]}]},"documentation":{"id":2275,"nodeType":"StructuredDocumentation","src":"863:134:10","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":2302,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:10","nodeType":"FunctionDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"a","nameLocation":"1026:1:10","nodeType":"VariableDeclaration","scope":2302,"src":"1018:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"b","nameLocation":"1037:1:10","nodeType":"VariableDeclaration","scope":2302,"src":"1029:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:10"},"returnParameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2302,"src":"1063:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2281,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2302,"src":"1069:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:10"},"scope":2551,"src":"1002:189:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2343,"nodeType":"Block","src":"1415:417:10","statements":[{"id":2342,"nodeType":"UncheckedBlock","src":"1425:401:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2314,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"1683:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2321,"nodeType":"IfStatement","src":"1679:28:10","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2313,"id":2320,"nodeType":"Return","src":"1691:16:10"}},{"assignments":[2323],"declarations":[{"constant":false,"id":2323,"mutability":"mutable","name":"c","nameLocation":"1729:1:10","nodeType":"VariableDeclaration","scope":2342,"src":"1721:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2322,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2327,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2324,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"1733:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2325,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"1737:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2328,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"1756:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2329,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"1760:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2331,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"1765:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2337,"nodeType":"IfStatement","src":"1752:33:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2313,"id":2336,"nodeType":"Return","src":"1768:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2339,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"1813:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2313,"id":2341,"nodeType":"Return","src":"1799:16:10"}]}]},"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"1197:137:10","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":2344,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:10","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"a","nameLocation":"1363:1:10","nodeType":"VariableDeclaration","scope":2344,"src":"1355:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2307,"mutability":"mutable","name":"b","nameLocation":"1374:1:10","nodeType":"VariableDeclaration","scope":2344,"src":"1366:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:10"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2344,"src":"1400:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2309,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2344,"src":"1406:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:10"},"scope":2551,"src":"1339:493:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2371,"nodeType":"Block","src":"2057:114:10","statements":[{"id":2370,"nodeType":"UncheckedBlock","src":"2067:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2356,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"2095:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2363,"nodeType":"IfStatement","src":"2091:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2355,"id":2362,"nodeType":"Return","src":"2103:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2148:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2366,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"2152:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2355,"id":2369,"nodeType":"Return","src":"2134:20:10"}]}]},"documentation":{"id":2345,"nodeType":"StructuredDocumentation","src":"1838:138:10","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":2372,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:10","nodeType":"FunctionDefinition","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"a","nameLocation":"2005:1:10","nodeType":"VariableDeclaration","scope":2372,"src":"1997:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2349,"mutability":"mutable","name":"b","nameLocation":"2016:1:10","nodeType":"VariableDeclaration","scope":2372,"src":"2008:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:10"},"returnParameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2372,"src":"2042:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2351,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2372,"src":"2048:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:10"},"scope":2551,"src":"1981:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2399,"nodeType":"Block","src":"2406:114:10","statements":[{"id":2398,"nodeType":"UncheckedBlock","src":"2416:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2384,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"2444:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2391,"nodeType":"IfStatement","src":"2440:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2389,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2383,"id":2390,"nodeType":"Return","src":"2452:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2393,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2497:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2394,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"2501:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2396,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2383,"id":2397,"nodeType":"Return","src":"2483:20:10"}]}]},"documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"2177:148:10","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":2400,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:10","nodeType":"FunctionDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"a","nameLocation":"2354:1:10","nodeType":"VariableDeclaration","scope":2400,"src":"2346:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2377,"mutability":"mutable","name":"b","nameLocation":"2365:1:10","nodeType":"VariableDeclaration","scope":2400,"src":"2357:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2376,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:10"},"returnParameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2400,"src":"2391:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2379,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2400,"src":"2397:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:10"},"scope":2551,"src":"2330:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2414,"nodeType":"Block","src":"2822:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"2839:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2411,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"2843:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2409,"id":2413,"nodeType":"Return","src":"2832:12:10"}]},"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"2526:224:10","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":2415,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:10","nodeType":"FunctionDefinition","parameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"a","nameLocation":"2776:1:10","nodeType":"VariableDeclaration","scope":2415,"src":"2768:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2405,"mutability":"mutable","name":"b","nameLocation":"2787:1:10","nodeType":"VariableDeclaration","scope":2415,"src":"2779:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:10"},"returnParameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2415,"src":"2813:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:10"},"scope":2551,"src":"2755:96:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2429,"nodeType":"Block","src":"3189:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"3206:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2426,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"3210:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2424,"id":2428,"nodeType":"Return","src":"3199:12:10"}]},"documentation":{"id":2416,"nodeType":"StructuredDocumentation","src":"2857:260:10","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":2430,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:10","nodeType":"FunctionDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"a","nameLocation":"3143:1:10","nodeType":"VariableDeclaration","scope":2430,"src":"3135:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2417,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2420,"mutability":"mutable","name":"b","nameLocation":"3154:1:10","nodeType":"VariableDeclaration","scope":2430,"src":"3146:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:10"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2430,"src":"3180:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:10"},"scope":2551,"src":"3122:96:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2444,"nodeType":"Block","src":"3532:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2440,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"3549:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2441,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"3553:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2439,"id":2443,"nodeType":"Return","src":"3542:12:10"}]},"documentation":{"id":2431,"nodeType":"StructuredDocumentation","src":"3224:236:10","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":2445,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:10","nodeType":"FunctionDefinition","parameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"a","nameLocation":"3486:1:10","nodeType":"VariableDeclaration","scope":2445,"src":"3478:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"b","nameLocation":"3497:1:10","nodeType":"VariableDeclaration","scope":2445,"src":"3489:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:10"},"returnParameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2445,"src":"3523:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:10"},"scope":2551,"src":"3465:96:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2459,"nodeType":"Block","src":"3917:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2455,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"3934:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2456,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"3938:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2454,"id":2458,"nodeType":"Return","src":"3927:12:10"}]},"documentation":{"id":2446,"nodeType":"StructuredDocumentation","src":"3567:278:10","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":2460,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:10","nodeType":"FunctionDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"mutability":"mutable","name":"a","nameLocation":"3871:1:10","nodeType":"VariableDeclaration","scope":2460,"src":"3863:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"b","nameLocation":"3882:1:10","nodeType":"VariableDeclaration","scope":2460,"src":"3874:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2449,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:10"},"returnParameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2460,"src":"3908:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:10"},"scope":2551,"src":"3850:96:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2474,"nodeType":"Block","src":"4466:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"4483:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2471,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"4487:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2469,"id":2473,"nodeType":"Return","src":"4476:12:10"}]},"documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"3952:442:10","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":2475,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:10","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"a","nameLocation":"4420:1:10","nodeType":"VariableDeclaration","scope":2475,"src":"4412:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"b","nameLocation":"4431:1:10","nodeType":"VariableDeclaration","scope":2475,"src":"4423:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:10"},"returnParameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2475,"src":"4457:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:10"},"scope":2551,"src":"4399:96:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2499,"nodeType":"Block","src":"5054:106:10","statements":[{"id":2498,"nodeType":"UncheckedBlock","src":"5064:90:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2488,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"5096:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"5101:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5096:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2491,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"5104:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2487,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5088:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5088:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2493,"nodeType":"ExpressionStatement","src":"5088:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2494,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"5138:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2495,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"5142:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5138:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2486,"id":2497,"nodeType":"Return","src":"5131:12:10"}]}]},"documentation":{"id":2476,"nodeType":"StructuredDocumentation","src":"4501:453:10","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":2500,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:10","nodeType":"FunctionDefinition","parameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"a","nameLocation":"4980:1:10","nodeType":"VariableDeclaration","scope":2500,"src":"4972:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2480,"mutability":"mutable","name":"b","nameLocation":"4991:1:10","nodeType":"VariableDeclaration","scope":2500,"src":"4983:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"4983:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2482,"mutability":"mutable","name":"errorMessage","nameLocation":"5008:12:10","nodeType":"VariableDeclaration","scope":2500,"src":"4994:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2481,"name":"string","nodeType":"ElementaryTypeName","src":"4994:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:50:10"},"returnParameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"5045:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2484,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5044:9:10"},"scope":2551,"src":"4959:201:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2524,"nodeType":"Block","src":"5739:105:10","statements":[{"id":2523,"nodeType":"UncheckedBlock","src":"5749:89:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2513,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"5781:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5785:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2516,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"5788:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2512,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5773:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5773:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2518,"nodeType":"ExpressionStatement","src":"5773:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2519,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"5822:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2520,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"5826:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5822:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2511,"id":2522,"nodeType":"Return","src":"5815:12:10"}]}]},"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"5166:473:10","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":2525,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5653:3:10","nodeType":"FunctionDefinition","parameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"a","nameLocation":"5665:1:10","nodeType":"VariableDeclaration","scope":2525,"src":"5657:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2502,"name":"uint256","nodeType":"ElementaryTypeName","src":"5657:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"b","nameLocation":"5676:1:10","nodeType":"VariableDeclaration","scope":2525,"src":"5668:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"5668:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"errorMessage","nameLocation":"5693:12:10","nodeType":"VariableDeclaration","scope":2525,"src":"5679:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2506,"name":"string","nodeType":"ElementaryTypeName","src":"5679:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5656:50:10"},"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2525,"src":"5730:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"5730:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5729:9:10"},"scope":2551,"src":"5644:200:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2549,"nodeType":"Block","src":"6585:105:10","statements":[{"id":2548,"nodeType":"UncheckedBlock","src":"6595:89:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2538,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"6627:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6627:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2541,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"6634:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2537,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6619:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6619:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2543,"nodeType":"ExpressionStatement","src":"6619:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"6668:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2545,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"6672:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6668:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2536,"id":2547,"nodeType":"Return","src":"6661:12:10"}]}]},"documentation":{"id":2526,"nodeType":"StructuredDocumentation","src":"5850:635:10","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":2550,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6499:3:10","nodeType":"FunctionDefinition","parameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"a","nameLocation":"6511:1:10","nodeType":"VariableDeclaration","scope":2550,"src":"6503:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"6503:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2530,"mutability":"mutable","name":"b","nameLocation":"6522:1:10","nodeType":"VariableDeclaration","scope":2550,"src":"6514:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"6514:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2532,"mutability":"mutable","name":"errorMessage","nameLocation":"6539:12:10","nodeType":"VariableDeclaration","scope":2550,"src":"6525:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2531,"name":"string","nodeType":"ElementaryTypeName","src":"6525:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6502:50:10"},"returnParameters":{"id":2536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2550,"src":"6576:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2534,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6575:9:10"},"scope":2551,"src":"6490:200:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2552,"src":"482:6210:10","usedErrors":[]}],"src":"107:6586:10"},"id":10},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2656]},"id":2657,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2553,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2554,"nodeType":"StructuredDocumentation","src":"134:80:11","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2656,"linearizedBaseContracts":[2656],"name":"SignedMath","nameLocation":"223:10:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2571,"nodeType":"Block","src":"375:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2564,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"392:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2565,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"396:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2568,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"404:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:11","trueExpression":{"id":2567,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"400:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2563,"id":2570,"nodeType":"Return","src":"385:20:11"}]},"documentation":{"id":2555,"nodeType":"StructuredDocumentation","src":"240:66:11","text":" @dev Returns the largest of two signed numbers."},"id":2572,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:11","nodeType":"FunctionDefinition","parameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"a","nameLocation":"331:1:11","nodeType":"VariableDeclaration","scope":2572,"src":"324:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2556,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2559,"mutability":"mutable","name":"b","nameLocation":"341:1:11","nodeType":"VariableDeclaration","scope":2572,"src":"334:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2558,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:11"},"returnParameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2572,"src":"367:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2561,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:11"},"scope":2656,"src":"311:101:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2589,"nodeType":"Block","src":"554:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2582,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"571:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2583,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"575:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2586,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"583:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:11","trueExpression":{"id":2585,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"579:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2581,"id":2588,"nodeType":"Return","src":"564:20:11"}]},"documentation":{"id":2573,"nodeType":"StructuredDocumentation","src":"418:67:11","text":" @dev Returns the smallest of two signed numbers."},"id":2590,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:11","nodeType":"FunctionDefinition","parameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"a","nameLocation":"510:1:11","nodeType":"VariableDeclaration","scope":2590,"src":"503:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2574,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"b","nameLocation":"520:1:11","nodeType":"VariableDeclaration","scope":2590,"src":"513:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2576,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:11"},"returnParameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2590,"src":"546:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2579,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:11"},"scope":2656,"src":"490:101:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2633,"nodeType":"Block","src":"796:162:11","statements":[{"assignments":[2601],"declarations":[{"constant":false,"id":2601,"mutability":"mutable","name":"x","nameLocation":"865:1:11","nodeType":"VariableDeclaration","scope":2633,"src":"858:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2600,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2614,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2602,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"870:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"874:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2606,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"881:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2607,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"885:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:11"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2615,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"910:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2620,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"930:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:11","typeDescriptions":{}}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2616,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:11","typeDescriptions":{}}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2625,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"944:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2626,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"948:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2630,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2599,"id":2632,"nodeType":"Return","src":"903:48:11"}]},"documentation":{"id":2591,"nodeType":"StructuredDocumentation","src":"597:126:11","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2634,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:11","nodeType":"FunctionDefinition","parameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"a","nameLocation":"752:1:11","nodeType":"VariableDeclaration","scope":2634,"src":"745:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2592,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"b","nameLocation":"762:1:11","nodeType":"VariableDeclaration","scope":2634,"src":"755:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2594,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:11"},"returnParameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"788:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2597,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:11"},"scope":2656,"src":"728:230:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2654,"nodeType":"Block","src":"1102:158:11","statements":[{"id":2653,"nodeType":"UncheckedBlock","src":"1112:142:11","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2644,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"1227:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:11","subExpression":{"id":2648,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"1241:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:11","trueExpression":{"id":2647,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"1236:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:11","typeDescriptions":{}}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1219:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2641,"id":2652,"nodeType":"Return","src":"1212:31:11"}]}]},"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"964:78:11","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2655,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:11","nodeType":"FunctionDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"n","nameLocation":"1067:1:11","nodeType":"VariableDeclaration","scope":2655,"src":"1060:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2636,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:11"},"returnParameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2655,"src":"1093:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:11"},"scope":2656,"src":"1047:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2657,"src":"215:1047:11","usedErrors":[]}],"src":"109:1154:11"},"id":11},"contracts/Blackjack.sol":{"ast":{"absolutePath":"contracts/Blackjack.sol","exportedSymbols":{"AccessControl":[315],"Blackjack":[3801],"Card":[3829],"CardDeck":[3836],"CardDeckUtils":[3971],"ChipToken":[4042],"Context":[1108],"ERC165":[1361],"ERC20":[975],"IAccessControl":[388],"IERC165":[1373],"IERC20":[1053],"IERC20Metadata":[1078],"Math":[2239],"SafeMath":[2551],"SignedMath":[2656],"Strings":[1337],"Suit":[3808],"Value":[3822]},"id":3802,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2658,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"46:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":2659,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3802,"sourceUnit":1109,"src":"71:51:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":2661,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3802,"sourceUnit":2552,"src":"123:75:12","symbolAliases":[{"foreign":{"id":2660,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"132:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/ChipToken.sol","file":"./ChipToken.sol","id":2662,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3802,"sourceUnit":4043,"src":"199:25:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/CardDeck.sol","file":"./CardDeck.sol","id":2663,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3802,"sourceUnit":3972,"src":"225:24:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2665,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1108,"src":"302:7:12"},"id":2666,"nodeType":"InheritanceSpecifier","src":"302:7:12"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2664,"nodeType":"StructuredDocumentation","src":"251:29:12","text":"@title A Blackjack game."},"fullyImplemented":true,"id":3801,"linearizedBaseContracts":[3801,1108],"name":"Blackjack","nameLocation":"289:9:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"6540742f","id":2669,"mutability":"constant","name":"MIN_BET","nameLocation":"340:7:12","nodeType":"VariableDeclaration","scope":3801,"src":"316:35:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"316:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"350:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":true,"functionSelector":"7e95b523","id":2672,"mutability":"constant","name":"MAX_BET","nameLocation":"381:7:12","nodeType":"VariableDeclaration","scope":3801,"src":"357:56:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2670,"name":"uint256","nodeType":"ElementaryTypeName","src":"357:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030303030303030303030303030303030303030","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"391:22:12","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"},"value":"1000000000000000000000"},"visibility":"public"},{"canonicalName":"Blackjack.Player","id":2683,"members":[{"constant":false,"id":2674,"mutability":"mutable","name":"isPlayer","nameLocation":"449:8:12","nodeType":"VariableDeclaration","scope":2683,"src":"444:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2673,"name":"bool","nodeType":"ElementaryTypeName","src":"444:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2676,"mutability":"mutable","name":"betMade","nameLocation":"472:7:12","nodeType":"VariableDeclaration","scope":2683,"src":"467:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2675,"name":"bool","nodeType":"ElementaryTypeName","src":"467:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2678,"mutability":"mutable","name":"turnOver","nameLocation":"494:8:12","nodeType":"VariableDeclaration","scope":2683,"src":"489:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2677,"name":"bool","nodeType":"ElementaryTypeName","src":"489:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"betValue","nameLocation":"520:8:12","nodeType":"VariableDeclaration","scope":2683,"src":"512:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"512:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"stackValue","nameLocation":"546:10:12","nodeType":"VariableDeclaration","scope":2683,"src":"538:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"538:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Player","nameLocation":"427:6:12","nodeType":"StructDefinition","scope":3801,"src":"420:143:12","visibility":"public"},{"canonicalName":"Blackjack.Dealer","id":2690,"members":[{"constant":false,"id":2685,"mutability":"mutable","name":"dealer","nameLocation":"601:6:12","nodeType":"VariableDeclaration","scope":2690,"src":"593:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2684,"name":"address","nodeType":"ElementaryTypeName","src":"593:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2687,"mutability":"mutable","name":"faceUpValue","nameLocation":"625:11:12","nodeType":"VariableDeclaration","scope":2690,"src":"617:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2686,"name":"uint256","nodeType":"ElementaryTypeName","src":"617:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2689,"mutability":"mutable","name":"stackValue","nameLocation":"654:10:12","nodeType":"VariableDeclaration","scope":2690,"src":"646:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2688,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Dealer","nameLocation":"576:6:12","nodeType":"StructDefinition","scope":3801,"src":"569:102:12","visibility":"public"},{"canonicalName":"Blackjack.Stage","id":2696,"members":[{"id":2691,"name":"BETTING","nameLocation":"698:7:12","nodeType":"EnumValue","src":"698:7:12"},{"id":2692,"name":"DEALING","nameLocation":"715:7:12","nodeType":"EnumValue","src":"715:7:12"},{"id":2693,"name":"PLAYING","nameLocation":"732:7:12","nodeType":"EnumValue","src":"732:7:12"},{"id":2694,"name":"PAYOUT","nameLocation":"749:6:12","nodeType":"EnumValue","src":"749:6:12"},{"id":2695,"name":"GAME_OVER","nameLocation":"765:9:12","nodeType":"EnumValue","src":"765:9:12"}],"name":"Stage","nameLocation":"682:5:12","nodeType":"EnumDefinition","src":"677:103:12"},{"canonicalName":"Blackjack.Decision","id":2699,"members":[{"id":2697,"name":"HIT","nameLocation":"810:3:12","nodeType":"EnumValue","src":"810:3:12"},{"id":2698,"name":"STAND","nameLocation":"823:5:12","nodeType":"EnumValue","src":"823:5:12"}],"name":"Decision","nameLocation":"791:8:12","nodeType":"EnumDefinition","src":"786:48:12"},{"canonicalName":"Blackjack.GameMetadata","id":2714,"members":[{"constant":false,"id":2701,"mutability":"mutable","name":"currentPlayer","nameLocation":"878:13:12","nodeType":"VariableDeclaration","scope":2714,"src":"870:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2700,"name":"address","nodeType":"ElementaryTypeName","src":"870:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"betCount","nameLocation":"909:8:12","nodeType":"VariableDeclaration","scope":2714,"src":"901:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"901:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2705,"mutability":"mutable","name":"moveCount","nameLocation":"935:9:12","nodeType":"VariableDeclaration","scope":2714,"src":"927:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"927:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2707,"mutability":"mutable","name":"numPlayers","nameLocation":"962:10:12","nodeType":"VariableDeclaration","scope":2714,"src":"954:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"954:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2710,"mutability":"mutable","name":"currentStage","nameLocation":"988:12:12","nodeType":"VariableDeclaration","scope":2714,"src":"982:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"},"typeName":{"id":2709,"nodeType":"UserDefinedTypeName","pathNode":{"id":2708,"name":"Stage","nodeType":"IdentifierPath","referencedDeclaration":2696,"src":"982:5:12"},"referencedDeclaration":2696,"src":"982:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"visibility":"internal"},{"constant":false,"id":2713,"mutability":"mutable","name":"playerAddresses","nameLocation":"1020:15:12","nodeType":"VariableDeclaration","scope":2714,"src":"1010:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2711,"name":"address","nodeType":"ElementaryTypeName","src":"1010:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2712,"nodeType":"ArrayTypeName","src":"1010:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"GameMetadata","nameLocation":"847:12:12","nodeType":"StructDefinition","scope":3801,"src":"840:202:12","visibility":"public"},{"constant":false,"functionSelector":"fc0c546a","id":2717,"mutability":"mutable","name":"token","nameLocation":"1065:5:12","nodeType":"VariableDeclaration","scope":3801,"src":"1048:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ChipToken_$4042","typeString":"contract ChipToken"},"typeName":{"id":2716,"nodeType":"UserDefinedTypeName","pathNode":{"id":2715,"name":"ChipToken","nodeType":"IdentifierPath","referencedDeclaration":4042,"src":"1048:9:12"},"referencedDeclaration":4042,"src":"1048:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_ChipToken_$4042","typeString":"contract ChipToken"}},"visibility":"public"},{"constant":false,"id":2720,"mutability":"mutable","name":"game","nameLocation":"1098:4:12","nodeType":"VariableDeclaration","scope":3801,"src":"1076:26:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata"},"typeName":{"id":2719,"nodeType":"UserDefinedTypeName","pathNode":{"id":2718,"name":"GameMetadata","nodeType":"IdentifierPath","referencedDeclaration":2714,"src":"1076:12:12"},"referencedDeclaration":2714,"src":"1076:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage_ptr","typeString":"struct Blackjack.GameMetadata"}},"visibility":"internal"},{"constant":false,"id":2723,"mutability":"mutable","name":"dealer","nameLocation":"1124:6:12","nodeType":"VariableDeclaration","scope":3801,"src":"1108:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer"},"typeName":{"id":2722,"nodeType":"UserDefinedTypeName","pathNode":{"id":2721,"name":"Dealer","nodeType":"IdentifierPath","referencedDeclaration":2690,"src":"1108:6:12"},"referencedDeclaration":2690,"src":"1108:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage_ptr","typeString":"struct Blackjack.Dealer"}},"visibility":"internal"},{"constant":false,"functionSelector":"e2eb41ff","id":2728,"mutability":"mutable","name":"players","nameLocation":"1170:7:12","nodeType":"VariableDeclaration","scope":3801,"src":"1136:41:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player)"},"typeName":{"id":2727,"keyType":{"id":2724,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1136:26:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player)"},"valueType":{"id":2726,"nodeType":"UserDefinedTypeName","pathNode":{"id":2725,"name":"Player","nodeType":"IdentifierPath","referencedDeclaration":2683,"src":"1155:6:12"},"referencedDeclaration":2683,"src":"1155:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player"}}},"visibility":"public"},{"id":2732,"libraryName":{"id":2729,"name":"CardDeckUtils","nodeType":"IdentifierPath","referencedDeclaration":3971,"src":"1190:13:12"},"nodeType":"UsingForDirective","src":"1184:33:12","typeName":{"id":2731,"nodeType":"UserDefinedTypeName","pathNode":{"id":2730,"name":"CardDeck","nodeType":"IdentifierPath","referencedDeclaration":3836,"src":"1208:8:12"},"referencedDeclaration":3836,"src":"1208:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck"}}},{"constant":false,"id":2735,"mutability":"mutable","name":"deck","nameLocation":"1240:4:12","nodeType":"VariableDeclaration","scope":3801,"src":"1222:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage","typeString":"struct CardDeck"},"typeName":{"id":2734,"nodeType":"UserDefinedTypeName","pathNode":{"id":2733,"name":"CardDeck","nodeType":"IdentifierPath","referencedDeclaration":3836,"src":"1222:8:12"},"referencedDeclaration":3836,"src":"1222:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck"}},"visibility":"internal"},{"anonymous":false,"id":2741,"name":"BetReceived","nameLocation":"1257:11:12","nodeType":"EventDefinition","parameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"indexed":false,"mutability":"mutable","name":"player","nameLocation":"1277:6:12","nodeType":"VariableDeclaration","scope":2741,"src":"1269:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2736,"name":"address","nodeType":"ElementaryTypeName","src":"1269:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2739,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1293:6:12","nodeType":"VariableDeclaration","scope":2741,"src":"1285:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1285:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1268:32:12"},"src":"1251:50:12"},{"anonymous":false,"id":2746,"name":"StageAdvanced","nameLocation":"1312:13:12","nodeType":"EventDefinition","parameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"indexed":false,"mutability":"mutable","name":"stage","nameLocation":"1332:5:12","nodeType":"VariableDeclaration","scope":2746,"src":"1326:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"},"typeName":{"id":2743,"nodeType":"UserDefinedTypeName","pathNode":{"id":2742,"name":"Stage","nodeType":"IdentifierPath","referencedDeclaration":2696,"src":"1326:5:12"},"referencedDeclaration":2696,"src":"1326:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"visibility":"internal"}],"src":"1325:13:12"},"src":"1306:33:12"},{"anonymous":false,"id":2750,"name":"PlayerMoved","nameLocation":"1350:11:12","nodeType":"EventDefinition","parameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"indexed":false,"mutability":"mutable","name":"player","nameLocation":"1370:6:12","nodeType":"VariableDeclaration","scope":2750,"src":"1362:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"1362:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1361:16:12"},"src":"1344:34:12"},{"anonymous":false,"id":2754,"name":"DealerMoved","nameLocation":"1389:11:12","nodeType":"EventDefinition","parameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2752,"indexed":false,"mutability":"mutable","name":"dealer","nameLocation":"1409:6:12","nodeType":"VariableDeclaration","scope":2754,"src":"1401:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2751,"name":"address","nodeType":"ElementaryTypeName","src":"1401:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1400:16:12"},"src":"1383:34:12"},{"anonymous":false,"id":2760,"name":"CollectedChips","nameLocation":"1428:14:12","nodeType":"EventDefinition","parameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"indexed":false,"mutability":"mutable","name":"player","nameLocation":"1451:6:12","nodeType":"VariableDeclaration","scope":2760,"src":"1443:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2755,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2758,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1467:6:12","nodeType":"VariableDeclaration","scope":2760,"src":"1459:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1442:32:12"},"src":"1422:53:12"},{"anonymous":false,"id":2766,"name":"PaidChips","nameLocation":"1486:9:12","nodeType":"EventDefinition","parameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"indexed":false,"mutability":"mutable","name":"player","nameLocation":"1504:6:12","nodeType":"VariableDeclaration","scope":2766,"src":"1496:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2761,"name":"address","nodeType":"ElementaryTypeName","src":"1496:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2764,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1520:6:12","nodeType":"VariableDeclaration","scope":2766,"src":"1512:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2763,"name":"uint256","nodeType":"ElementaryTypeName","src":"1512:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:32:12"},"src":"1480:48:12"},{"anonymous":false,"id":2776,"name":"CardDrawn","nameLocation":"1539:9:12","nodeType":"EventDefinition","parameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"indexed":false,"mutability":"mutable","name":"player","nameLocation":"1557:6:12","nodeType":"VariableDeclaration","scope":2776,"src":"1549:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2767,"name":"address","nodeType":"ElementaryTypeName","src":"1549:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2771,"indexed":false,"mutability":"mutable","name":"suit","nameLocation":"1570:4:12","nodeType":"VariableDeclaration","scope":2776,"src":"1565:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"},"typeName":{"id":2770,"nodeType":"UserDefinedTypeName","pathNode":{"id":2769,"name":"Suit","nodeType":"IdentifierPath","referencedDeclaration":3808,"src":"1565:4:12"},"referencedDeclaration":3808,"src":"1565:4:12","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"}},"visibility":"internal"},{"constant":false,"id":2774,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1582:5:12","nodeType":"VariableDeclaration","scope":2776,"src":"1576:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"},"typeName":{"id":2773,"nodeType":"UserDefinedTypeName","pathNode":{"id":2772,"name":"Value","nodeType":"IdentifierPath","referencedDeclaration":3822,"src":"1576:5:12"},"referencedDeclaration":3822,"src":"1576:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}},"visibility":"internal"}],"src":"1548:40:12"},"src":"1533:56:12"},{"body":{"id":2790,"nodeType":"Block","src":"1625:137:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2782,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"1656:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":2783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currentStage","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"1656:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2784,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"1677:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"src":"1656:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"66756e6374696f6e2063616e6e6f742062652063616c6c6564207269676874206e6f772e","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1696:38:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb424d949b90a0ecc5faf0b3504332a29e0aab59c576878f0bd384215021dd88","typeString":"literal_string \"function cannot be called right now.\""},"value":"function cannot be called right now."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb424d949b90a0ecc5faf0b3504332a29e0aab59c576878f0bd384215021dd88","typeString":"literal_string \"function cannot be called right now.\""}],"id":2781,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1635:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:109:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2788,"nodeType":"ExpressionStatement","src":"1635:109:12"},{"id":2789,"nodeType":"PlaceholderStatement","src":"1754:1:12"}]},"id":2791,"name":"isStage","nameLocation":"1604:7:12","nodeType":"ModifierDefinition","parameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"stage","nameLocation":"1618:5:12","nodeType":"VariableDeclaration","scope":2791,"src":"1612:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"},"typeName":{"id":2778,"nodeType":"UserDefinedTypeName","pathNode":{"id":2777,"name":"Stage","nodeType":"IdentifierPath","referencedDeclaration":2696,"src":"1612:5:12"},"referencedDeclaration":2696,"src":"1612:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"visibility":"internal"}],"src":"1611:13:12"},"src":"1595:167:12","virtual":false,"visibility":"internal"},{"body":{"id":2829,"nodeType":"Block","src":"1804:386:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2796,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"1835:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2797,"name":"MAX_BET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"1845:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1835:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2799,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"1856:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2800,"name":"MIN_BET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"1866:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1856:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1835:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"62657420616d6f756e74206d7573742062652076616c69642e","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1887:27:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_6669cbf05ac9a2bdbc39bd2c35d6190d0ab62096810aaf391c891b31657c165b","typeString":"literal_string \"bet amount must be valid.\""},"value":"bet amount must be valid."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6669cbf05ac9a2bdbc39bd2c35d6190d0ab62096810aaf391c891b31657c165b","typeString":"literal_string \"bet amount must be valid.\""}],"id":2795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1814:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1814:110:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2805,"nodeType":"ExpressionStatement","src":"1814:110:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2807,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"1955:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player storage ref)"}},"id":2810,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2808,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"1963:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1963:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1955:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"id":2811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"betMade","nodeType":"MemberAccess","referencedDeclaration":2676,"src":"1955:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1988:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1955:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"706c617965722068617320616c7265616479206265742e","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2007:25:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e63d888be4e1175799600edb323a027a3e52a00c90f6ebab550c279f67bcae2f","typeString":"literal_string \"player has already bet.\""},"value":"player has already bet."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e63d888be4e1175799600edb323a027a3e52a00c90f6ebab550c279f67bcae2f","typeString":"literal_string \"player has already bet.\""}],"id":2806,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1934:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1934:108:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2816,"nodeType":"ExpressionStatement","src":"1934:108:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2820,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"2089:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2089:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2818,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"2073:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ChipToken_$4042","typeString":"contract ChipToken"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":487,"src":"2073:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2073:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2823,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"2106:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2073:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"706c6179657220646f65736e2774206861766520656e6f75676820746f6b656e732e","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2126:36:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ebc4aafe537e8acf88f6368431f06bd2b0b97e24ae3cacf1f0bf4cfa0f983","typeString":"literal_string \"player doesn't have enough tokens.\""},"value":"player doesn't have enough tokens."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ebc4aafe537e8acf88f6368431f06bd2b0b97e24ae3cacf1f0bf4cfa0f983","typeString":"literal_string \"player doesn't have enough tokens.\""}],"id":2817,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2052:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2052:120:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2827,"nodeType":"ExpressionStatement","src":"2052:120:12"},{"id":2828,"nodeType":"PlaceholderStatement","src":"2182:1:12"}]},"id":2830,"name":"isValidBet","nameLocation":"1777:10:12","nodeType":"ModifierDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"amount","nameLocation":"1796:6:12","nodeType":"VariableDeclaration","scope":2830,"src":"1788:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1788:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1787:16:12"},"src":"1768:422:12","virtual":false,"visibility":"internal"},{"body":{"id":2842,"nodeType":"Block","src":"2218:143:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2833,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"2249:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2249:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2835,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"2265:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":2836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":2685,"src":"2265:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2249:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c7920746865206465616c65722063616e2063616c6c20746869732066756e6374696f6e2e","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2292:41:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e02d50271d73d7c8ce2a6e39a212f5f5f38fe7f65273b1e97d4785b3b1d016ba","typeString":"literal_string \"only the dealer can call this function.\""},"value":"only the dealer can call this function."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e02d50271d73d7c8ce2a6e39a212f5f5f38fe7f65273b1e97d4785b3b1d016ba","typeString":"literal_string \"only the dealer can call this function.\""}],"id":2832,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2228:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2228:115:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2840,"nodeType":"ExpressionStatement","src":"2228:115:12"},{"id":2841,"nodeType":"PlaceholderStatement","src":"2353:1:12"}]},"id":2843,"name":"onlyDealer","nameLocation":"2205:10:12","nodeType":"ModifierDefinition","parameters":{"id":2831,"nodeType":"ParameterList","parameters":[],"src":"2215:2:12"},"src":"2196:165:12","virtual":false,"visibility":"internal"},{"body":{"id":2868,"nodeType":"Block","src":"2389:219:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2846,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"2420:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player storage ref)"}},"id":2849,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2847,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"2428:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2428:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2420:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"id":2850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isPlayer","nodeType":"MemberAccess","referencedDeclaration":2674,"src":"2420:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2454:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2420:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f74206120706c6179657220696e20746869732067616d652e","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2472:28:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_4729582300210317519386e2c33d042f822628d35ffe4a24a1a3be85d7a90659","typeString":"literal_string \"not a player in this game.\""},"value":"not a player in this game."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4729582300210317519386e2c33d042f822628d35ffe4a24a1a3be85d7a90659","typeString":"literal_string \"not a player in this game.\""}],"id":2845,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2399:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2399:111:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2855,"nodeType":"ExpressionStatement","src":"2399:111:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2857,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"2528:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player storage ref)"}},"id":2860,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2858,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"2536:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2536:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2528:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"id":2861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"turnOver","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"2528:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2562:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2528:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"796f7572207475726e206973206f7665722e","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2569:20:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d6699e530e9dd524f183c4d5b175f788a143f6bc3aff7a00567e3449129ec2d","typeString":"literal_string \"your turn is over.\""},"value":"your turn is over."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d6699e530e9dd524f183c4d5b175f788a143f6bc3aff7a00567e3449129ec2d","typeString":"literal_string \"your turn is over.\""}],"id":2856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2520:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2520:70:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2866,"nodeType":"ExpressionStatement","src":"2520:70:12"},{"id":2867,"nodeType":"PlaceholderStatement","src":"2600:1:12"}]},"id":2869,"name":"onlyPlayer","nameLocation":"2376:10:12","nodeType":"ModifierDefinition","parameters":{"id":2844,"nodeType":"ParameterList","parameters":[],"src":"2386:2:12"},"src":"2367:241:12","virtual":false,"visibility":"internal"},{"body":{"id":2943,"nodeType":"Block","src":"2669:458:12","statements":[{"expression":{"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2877,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"2679:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ChipToken_$4042","typeString":"contract ChipToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2879,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"2697:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2878,"name":"ChipToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"2687:9:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ChipToken_$4042_$","typeString":"type(contract ChipToken)"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2687:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ChipToken_$4042","typeString":"contract ChipToken"}},"src":"2679:25:12","typeDescriptions":{"typeIdentifier":"t_contract$_ChipToken_$4042","typeString":"contract ChipToken"}},"id":2882,"nodeType":"ExpressionStatement","src":"2679:25:12"},{"expression":{"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2883,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"2714:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2885,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"2730:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2730:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2744:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2747:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2884,"name":"Dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"2723:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Dealer_$2690_storage_ptr_$","typeString":"type(struct Blackjack.Dealer storage pointer)"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2723:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_memory_ptr","typeString":"struct Blackjack.Dealer memory"}},"src":"2714:35:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":2891,"nodeType":"ExpressionStatement","src":"2714:35:12"},{"body":{"id":2921,"nodeType":"Block","src":"2805:117:12","statements":[{"assignments":[2904],"declarations":[{"constant":false,"id":2904,"mutability":"mutable","name":"player","nameLocation":"2827:6:12","nodeType":"VariableDeclaration","scope":2921,"src":"2819:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2903,"name":"address","nodeType":"ElementaryTypeName","src":"2819:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2908,"initialValue":{"baseExpression":{"id":2905,"name":"_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"2836:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2907,"indexExpression":{"id":2906,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2845:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2836:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2819:28:12"},{"expression":{"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2909,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"2861:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player storage ref)"}},"id":2911,"indexExpression":{"id":2910,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"2869:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2861:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"74727565","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2886:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2892:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2899:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2906:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2909:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2912,"name":"Player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"2879:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Player_$2683_storage_ptr_$","typeString":"type(struct Blackjack.Player storage pointer)"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2879:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_memory_ptr","typeString":"struct Blackjack.Player memory"}},"src":"2861:50:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"id":2920,"nodeType":"ExpressionStatement","src":"2861:50:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2896,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2779:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2897,"name":"_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"2783:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2783:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2779:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2922,"initializationExpression":{"assignments":[2893],"declarations":[{"constant":false,"id":2893,"mutability":"mutable","name":"i","nameLocation":"2772:1:12","nodeType":"VariableDeclaration","scope":2922,"src":"2764:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint256","nodeType":"ElementaryTypeName","src":"2764:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2895,"initialValue":{"hexValue":"30","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2776:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2764:13:12"},"loopExpression":{"expression":{"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2800:3:12","subExpression":{"id":2900,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2800:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2902,"nodeType":"ExpressionStatement","src":"2800:3:12"},"nodeType":"ForStatement","src":"2759:163:12"},{"expression":{"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2923,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"2931:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2925,"name":"_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"2964:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2927,"indexExpression":{"hexValue":"30","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2973:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2964:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2989:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3004:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":2930,"name":"_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"3019:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3019:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2932,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"3048:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BETTING","nodeType":"MemberAccess","referencedDeclaration":2691,"src":"3048:13:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},{"id":2934,"name":"_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"3075:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2924,"name":"GameMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"2938:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GameMetadata_$2714_storage_ptr_$","typeString":"type(struct Blackjack.GameMetadata storage pointer)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2938:155:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_memory_ptr","typeString":"struct Blackjack.GameMetadata memory"}},"src":"2931:162:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":2937,"nodeType":"ExpressionStatement","src":"2931:162:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2938,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"3103:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage","typeString":"struct CardDeck storage ref"}},"id":2940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"createDeck","nodeType":"MemberAccess","referencedDeclaration":3887,"src":"3103:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_CardDeck_$3836_storage_ptr_$returns$__$bound_to$_t_struct$_CardDeck_$3836_storage_ptr_$","typeString":"function (struct CardDeck storage pointer)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3103:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2942,"nodeType":"ExpressionStatement","src":"3103:17:12"}]},"id":2944,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"_players","nameLocation":"2643:8:12","nodeType":"VariableDeclaration","scope":2944,"src":"2626:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2870,"name":"address","nodeType":"ElementaryTypeName","src":"2626:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2871,"nodeType":"ArrayTypeName","src":"2626:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2874,"mutability":"mutable","name":"_token","nameLocation":"2661:6:12","nodeType":"VariableDeclaration","scope":2944,"src":"2653:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2873,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2625:43:12"},"returnParameters":{"id":2876,"nodeType":"ParameterList","parameters":[],"src":"2669:0:12"},"scope":3801,"src":"2614:513:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2999,"nodeType":"Block","src":"3260:310:12","statements":[{"assignments":[2959],"declarations":[{"constant":false,"id":2959,"mutability":"mutable","name":"player","nameLocation":"3278:6:12","nodeType":"VariableDeclaration","scope":2999,"src":"3270:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2958,"name":"address","nodeType":"ElementaryTypeName","src":"3270:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2962,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2960,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"3287:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3287:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3270:29:12"},{"expression":{"arguments":[{"id":2964,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"3324:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2965,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"3332:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2963,"name":"_collectChips","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"3310:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3310:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2967,"nodeType":"ExpressionStatement","src":"3310:29:12"},{"expression":{"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2968,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"3350:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player storage ref)"}},"id":2970,"indexExpression":{"id":2969,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"3358:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3350:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"id":2971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"betMade","nodeType":"MemberAccess","referencedDeclaration":2676,"src":"3350:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3376:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3350:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2974,"nodeType":"ExpressionStatement","src":"3350:30:12"},{"expression":{"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2975,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"3390:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player storage ref)"}},"id":2977,"indexExpression":{"id":2976,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"3398:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"id":2978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"betValue","nodeType":"MemberAccess","referencedDeclaration":2680,"src":"3390:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2979,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"3417:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3390:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2981,"nodeType":"ExpressionStatement","src":"3390:33:12"},{"expression":{"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3433:15:12","subExpression":{"expression":{"id":2982,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"3433:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":2984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"betCount","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"3433:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2986,"nodeType":"ExpressionStatement","src":"3433:15:12"},{"eventCall":{"arguments":[{"id":2988,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"3476:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2989,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"3484:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2987,"name":"BetReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"3464:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3464:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2991,"nodeType":"EmitStatement","src":"3459:32:12"},{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2992,"name":"_isBettingOver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"3506:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3506:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2998,"nodeType":"IfStatement","src":"3502:62:12","trueBody":{"id":2997,"nodeType":"Block","src":"3524:40:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2994,"name":"_advanceStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"3538:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3538:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2996,"nodeType":"ExpressionStatement","src":"3538:15:12"}]}}]},"functionSelector":"7365870b","id":3000,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":2949,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"3195:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BETTING","nodeType":"MemberAccess","referencedDeclaration":2691,"src":"3195:13:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}}],"id":2951,"kind":"modifierInvocation","modifierName":{"id":2948,"name":"isStage","nodeType":"IdentifierPath","referencedDeclaration":2791,"src":"3187:7:12"},"nodeType":"ModifierInvocation","src":"3187:22:12"},{"arguments":[{"id":2953,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"3229:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2954,"kind":"modifierInvocation","modifierName":{"id":2952,"name":"isValidBet","nodeType":"IdentifierPath","referencedDeclaration":2830,"src":"3218:10:12"},"nodeType":"ModifierInvocation","src":"3218:18:12"},{"id":2956,"kind":"modifierInvocation","modifierName":{"id":2955,"name":"onlyPlayer","nodeType":"IdentifierPath","referencedDeclaration":2869,"src":"3245:10:12"},"nodeType":"ModifierInvocation","src":"3245:10:12"}],"name":"bet","nameLocation":"3142:3:12","nodeType":"FunctionDefinition","parameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"amount","nameLocation":"3154:6:12","nodeType":"VariableDeclaration","scope":3000,"src":"3146:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3145:16:12"},"returnParameters":{"id":2957,"nodeType":"ParameterList","parameters":[],"src":"3260:0:12"},"scope":3801,"src":"3133:437:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3173,"nodeType":"Block","src":"3635:1434:12","statements":[{"body":{"id":3056,"nodeType":"Block","src":"3691:345:12","statements":[{"assignments":[3021],"declarations":[{"constant":false,"id":3021,"mutability":"mutable","name":"playerAddress","nameLocation":"3713:13:12","nodeType":"VariableDeclaration","scope":3056,"src":"3705:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3020,"name":"address","nodeType":"ElementaryTypeName","src":"3705:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3026,"initialValue":{"baseExpression":{"expression":{"id":3022,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"3729:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"playerAddresses","nodeType":"MemberAccess","referencedDeclaration":2713,"src":"3729:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3025,"indexExpression":{"id":3024,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"3750:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3729:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3705:47:12"},{"assignments":[3029],"declarations":[{"constant":false,"id":3029,"mutability":"mutable","name":"playersCard","nameLocation":"3779:11:12","nodeType":"VariableDeclaration","scope":3056,"src":"3767:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card"},"typeName":{"id":3028,"nodeType":"UserDefinedTypeName","pathNode":{"id":3027,"name":"Card","nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"3767:4:12"},"referencedDeclaration":3829,"src":"3767:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_storage_ptr","typeString":"struct Card"}},"visibility":"internal"}],"id":3033,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3030,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"3793:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage","typeString":"struct CardDeck storage ref"}},"id":3031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"drawCard","nodeType":"MemberAccess","referencedDeclaration":3950,"src":"3793:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_CardDeck_$3836_storage_ptr_$returns$_t_struct$_Card_$3829_memory_ptr_$bound_to$_t_struct$_CardDeck_$3836_storage_ptr_$","typeString":"function (struct CardDeck storage pointer) returns (struct Card memory)"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3793:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"nodeType":"VariableDeclarationStatement","src":"3767:41:12"},{"eventCall":{"arguments":[{"id":3035,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"3837:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3036,"name":"playersCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"3852:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"suit","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"3852:16:12","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"}},{"expression":{"id":3038,"name":"playersCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"3870:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"3870:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"},{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}],"id":3034,"name":"CardDrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"3827:9:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_Suit_$3808_$_t_enum$_Value_$3822_$returns$__$","typeString":"function (address,enum Suit,enum Value)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3827:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3041,"nodeType":"EmitStatement","src":"3822:66:12"},{"assignments":[3043],"declarations":[{"constant":false,"id":3043,"mutability":"mutable","name":"cardValue","nameLocation":"3910:9:12","nodeType":"VariableDeclaration","scope":3056,"src":"3902:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3042,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3048,"initialValue":{"arguments":[{"expression":{"id":3045,"name":"playersCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"3946:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"3946:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}],"id":3044,"name":"_convertCardValueToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"3922:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Value_$3822_$returns$_t_uint256_$","typeString":"function (enum Value) pure returns (uint256)"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3922:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3902:62:12"},{"expression":{"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3049,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"3979:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player storage ref)"}},"id":3051,"indexExpression":{"id":3050,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"3987:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3979:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"id":3052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stackValue","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"3979:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3053,"name":"cardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"4016:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3979:46:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3055,"nodeType":"ExpressionStatement","src":"3979:46:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"3665:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3014,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"3669:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numPlayers","nodeType":"MemberAccess","referencedDeclaration":2707,"src":"3669:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3665:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3057,"initializationExpression":{"assignments":[3010],"declarations":[{"constant":false,"id":3010,"mutability":"mutable","name":"i","nameLocation":"3658:1:12","nodeType":"VariableDeclaration","scope":3057,"src":"3650:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"3650:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3012,"initialValue":{"hexValue":"30","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3662:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3650:13:12"},"loopExpression":{"expression":{"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3686:3:12","subExpression":{"id":3017,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"3686:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3019,"nodeType":"ExpressionStatement","src":"3686:3:12"},"nodeType":"ForStatement","src":"3645:391:12"},{"assignments":[3060],"declarations":[{"constant":false,"id":3060,"mutability":"mutable","name":"dealersCard","nameLocation":"4058:11:12","nodeType":"VariableDeclaration","scope":3173,"src":"4046:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card"},"typeName":{"id":3059,"nodeType":"UserDefinedTypeName","pathNode":{"id":3058,"name":"Card","nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"4046:4:12"},"referencedDeclaration":3829,"src":"4046:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_storage_ptr","typeString":"struct Card"}},"visibility":"internal"}],"id":3064,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3061,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"4072:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage","typeString":"struct CardDeck storage ref"}},"id":3062,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"drawCard","nodeType":"MemberAccess","referencedDeclaration":3950,"src":"4072:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_CardDeck_$3836_storage_ptr_$returns$_t_struct$_Card_$3829_memory_ptr_$bound_to$_t_struct$_CardDeck_$3836_storage_ptr_$","typeString":"function (struct CardDeck storage pointer) returns (struct Card memory)"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4072:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"nodeType":"VariableDeclarationStatement","src":"4046:41:12"},{"assignments":[3066],"declarations":[{"constant":false,"id":3066,"mutability":"mutable","name":"dealersCardValue","nameLocation":"4105:16:12","nodeType":"VariableDeclaration","scope":3173,"src":"4097:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3065,"name":"uint256","nodeType":"ElementaryTypeName","src":"4097:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3071,"initialValue":{"arguments":[{"expression":{"id":3068,"name":"dealersCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"4148:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"4148:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}],"id":3067,"name":"_convertCardValueToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"4124:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Value_$3822_$returns$_t_uint256_$","typeString":"function (enum Value) pure returns (uint256)"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4124:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4097:69:12"},{"eventCall":{"arguments":[{"expression":{"id":3073,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"4191:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":3074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":2685,"src":"4191:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3075,"name":"dealersCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"4206:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3076,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"suit","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"4206:16:12","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"}},{"expression":{"id":3077,"name":"dealersCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"4224:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3078,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"4224:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"},{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}],"id":3072,"name":"CardDrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"4181:9:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_Suit_$3808_$_t_enum$_Value_$3822_$returns$__$","typeString":"function (address,enum Suit,enum Value)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4181:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3080,"nodeType":"EmitStatement","src":"4176:66:12"},{"expression":{"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3081,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"4252:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":3083,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"faceUpValue","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"4252:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3084,"name":"dealersCardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"4274:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4252:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3086,"nodeType":"ExpressionStatement","src":"4252:38:12"},{"expression":{"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3087,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"4300:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":3089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stackValue","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"4300:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3090,"name":"dealersCardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"4321:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4300:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3092,"nodeType":"ExpressionStatement","src":"4300:37:12"},{"body":{"id":3140,"nodeType":"Block","src":"4394:345:12","statements":[{"assignments":[3105],"declarations":[{"constant":false,"id":3105,"mutability":"mutable","name":"playerAddress","nameLocation":"4416:13:12","nodeType":"VariableDeclaration","scope":3140,"src":"4408:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3104,"name":"address","nodeType":"ElementaryTypeName","src":"4408:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3110,"initialValue":{"baseExpression":{"expression":{"id":3106,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"4432:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"playerAddresses","nodeType":"MemberAccess","referencedDeclaration":2713,"src":"4432:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3109,"indexExpression":{"id":3108,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"4453:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4432:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4408:47:12"},{"assignments":[3113],"declarations":[{"constant":false,"id":3113,"mutability":"mutable","name":"playersCard","nameLocation":"4482:11:12","nodeType":"VariableDeclaration","scope":3140,"src":"4470:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card"},"typeName":{"id":3112,"nodeType":"UserDefinedTypeName","pathNode":{"id":3111,"name":"Card","nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"4470:4:12"},"referencedDeclaration":3829,"src":"4470:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_storage_ptr","typeString":"struct Card"}},"visibility":"internal"}],"id":3117,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3114,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"4496:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage","typeString":"struct CardDeck storage ref"}},"id":3115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"drawCard","nodeType":"MemberAccess","referencedDeclaration":3950,"src":"4496:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_CardDeck_$3836_storage_ptr_$returns$_t_struct$_Card_$3829_memory_ptr_$bound_to$_t_struct$_CardDeck_$3836_storage_ptr_$","typeString":"function (struct CardDeck storage pointer) returns (struct Card memory)"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4496:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"nodeType":"VariableDeclarationStatement","src":"4470:41:12"},{"eventCall":{"arguments":[{"id":3119,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"4540:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3120,"name":"playersCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"4555:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"suit","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"4555:16:12","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"}},{"expression":{"id":3122,"name":"playersCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"4573:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"4573:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"},{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}],"id":3118,"name":"CardDrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"4530:9:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_Suit_$3808_$_t_enum$_Value_$3822_$returns$__$","typeString":"function (address,enum Suit,enum Value)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4530:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3125,"nodeType":"EmitStatement","src":"4525:66:12"},{"assignments":[3127],"declarations":[{"constant":false,"id":3127,"mutability":"mutable","name":"cardValue","nameLocation":"4613:9:12","nodeType":"VariableDeclaration","scope":3140,"src":"4605:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"4605:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3132,"initialValue":{"arguments":[{"expression":{"id":3129,"name":"playersCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"4649:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"4649:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}],"id":3128,"name":"_convertCardValueToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"4625:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Value_$3822_$returns$_t_uint256_$","typeString":"function (enum Value) pure returns (uint256)"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4625:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4605:62:12"},{"expression":{"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3133,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"4682:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player storage ref)"}},"id":3135,"indexExpression":{"id":3134,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"4690:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4682:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"id":3136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stackValue","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"4682:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3137,"name":"cardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"4719:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4682:46:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3139,"nodeType":"ExpressionStatement","src":"4682:46:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3097,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"4368:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3098,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"4372:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numPlayers","nodeType":"MemberAccess","referencedDeclaration":2707,"src":"4372:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4368:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3141,"initializationExpression":{"assignments":[3094],"declarations":[{"constant":false,"id":3094,"mutability":"mutable","name":"i","nameLocation":"4361:1:12","nodeType":"VariableDeclaration","scope":3141,"src":"4353:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3093,"name":"uint256","nodeType":"ElementaryTypeName","src":"4353:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3096,"initialValue":{"hexValue":"30","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4365:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4353:13:12"},"loopExpression":{"expression":{"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4389:3:12","subExpression":{"id":3101,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"4389:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3103,"nodeType":"ExpressionStatement","src":"4389:3:12"},"nodeType":"ForStatement","src":"4348:391:12"},{"assignments":[3144],"declarations":[{"constant":false,"id":3144,"mutability":"mutable","name":"dealersSecondCard","nameLocation":"4761:17:12","nodeType":"VariableDeclaration","scope":3173,"src":"4749:29:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card"},"typeName":{"id":3143,"nodeType":"UserDefinedTypeName","pathNode":{"id":3142,"name":"Card","nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"4749:4:12"},"referencedDeclaration":3829,"src":"4749:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_storage_ptr","typeString":"struct Card"}},"visibility":"internal"}],"id":3148,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3145,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"4781:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage","typeString":"struct CardDeck storage ref"}},"id":3146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"drawCard","nodeType":"MemberAccess","referencedDeclaration":3950,"src":"4781:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_CardDeck_$3836_storage_ptr_$returns$_t_struct$_Card_$3829_memory_ptr_$bound_to$_t_struct$_CardDeck_$3836_storage_ptr_$","typeString":"function (struct CardDeck storage pointer) returns (struct Card memory)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4781:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"nodeType":"VariableDeclarationStatement","src":"4749:47:12"},{"eventCall":{"arguments":[{"expression":{"id":3150,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"4834:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":3151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":2685,"src":"4834:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3152,"name":"dealersSecondCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"4861:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"suit","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"4861:22:12","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"}},{"expression":{"id":3154,"name":"dealersSecondCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"4897:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"4897:23:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"},{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}],"id":3149,"name":"CardDrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"4811:9:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_Suit_$3808_$_t_enum$_Value_$3822_$returns$__$","typeString":"function (address,enum Suit,enum Value)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4811:119:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3157,"nodeType":"EmitStatement","src":"4806:124:12"},{"expression":{"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3158,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"4940:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":3160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stackValue","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"4940:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"expression":{"id":3162,"name":"dealersSecondCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"4985:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"4985:23:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}],"id":3161,"name":"_convertCardValueToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"4961:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Value_$3822_$returns$_t_uint256_$","typeString":"function (enum Value) pure returns (uint256)"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4961:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4940:69:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3166,"nodeType":"ExpressionStatement","src":"4940:69:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3167,"name":"_checkNaturals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"5020:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5020:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3169,"nodeType":"ExpressionStatement","src":"5020:16:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3170,"name":"_advanceStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"5047:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5047:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3172,"nodeType":"ExpressionStatement","src":"5047:15:12"}]},"functionSelector":"553df021","id":3174,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3003,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"3609:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"DEALING","nodeType":"MemberAccess","referencedDeclaration":2692,"src":"3609:13:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}}],"id":3005,"kind":"modifierInvocation","modifierName":{"id":3002,"name":"isStage","nodeType":"IdentifierPath","referencedDeclaration":2791,"src":"3601:7:12"},"nodeType":"ModifierInvocation","src":"3601:22:12"},{"id":3007,"kind":"modifierInvocation","modifierName":{"id":3006,"name":"onlyDealer","nodeType":"IdentifierPath","referencedDeclaration":2843,"src":"3624:10:12"},"nodeType":"ModifierInvocation","src":"3624:10:12"}],"name":"deal","nameLocation":"3585:4:12","nodeType":"FunctionDefinition","parameters":{"id":3001,"nodeType":"ParameterList","parameters":[],"src":"3589:2:12"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[],"src":"3635:0:12"},"scope":3801,"src":"3576:1493:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3301,"nodeType":"Block","src":"5179:926:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3187,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"5197:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5197:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3189,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"5213:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currentPlayer","nodeType":"MemberAccess","referencedDeclaration":2701,"src":"5213:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5197:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f7420796f7572207475726e20746f20706c61792e","id":3192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5233:24:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3714162b69248b942e118568224bd8b2918be54473f7d7d5590bf84889f0c81","typeString":"literal_string \"not your turn to play.\""},"value":"not your turn to play."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a3714162b69248b942e118568224bd8b2918be54473f7d7d5590bf84889f0c81","typeString":"literal_string \"not your turn to play.\""}],"id":3186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5189:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5189:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3194,"nodeType":"ExpressionStatement","src":"5189:69:12"},{"assignments":[3196],"declarations":[{"constant":false,"id":3196,"mutability":"mutable","name":"playerAddress","nameLocation":"5277:13:12","nodeType":"VariableDeclaration","scope":3301,"src":"5269:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3195,"name":"address","nodeType":"ElementaryTypeName","src":"5269:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3199,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"5293:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5293:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5269:36:12"},{"assignments":[3202],"declarations":[{"constant":false,"id":3202,"mutability":"mutable","name":"player","nameLocation":"5330:6:12","nodeType":"VariableDeclaration","scope":3301,"src":"5315:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player"},"typeName":{"id":3201,"nodeType":"UserDefinedTypeName","pathNode":{"id":3200,"name":"Player","nodeType":"IdentifierPath","referencedDeclaration":2683,"src":"5315:6:12"},"referencedDeclaration":2683,"src":"5315:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player"}},"visibility":"internal"}],"id":3206,"initialValue":{"baseExpression":{"id":3203,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"5339:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player storage ref)"}},"id":3205,"indexExpression":{"id":3204,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"5347:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5339:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5315:46:12"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Decision_$2699","typeString":"enum Blackjack.Decision"},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3207,"name":"decision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"5376:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Decision_$2699","typeString":"enum Blackjack.Decision"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3208,"name":"Decision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"5388:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Decision_$2699_$","typeString":"type(enum Blackjack.Decision)"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"STAND","nodeType":"MemberAccess","referencedDeclaration":2698,"src":"5388:14:12","typeDescriptions":{"typeIdentifier":"t_enum$_Decision_$2699","typeString":"enum Blackjack.Decision"}},"src":"5376:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3264,"nodeType":"Block","src":"5487:326:12","statements":[{"assignments":[3225],"declarations":[{"constant":false,"id":3225,"mutability":"mutable","name":"card","nameLocation":"5513:4:12","nodeType":"VariableDeclaration","scope":3264,"src":"5501:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card"},"typeName":{"id":3224,"nodeType":"UserDefinedTypeName","pathNode":{"id":3223,"name":"Card","nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"5501:4:12"},"referencedDeclaration":3829,"src":"5501:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_storage_ptr","typeString":"struct Card"}},"visibility":"internal"}],"id":3229,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3226,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"5520:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage","typeString":"struct CardDeck storage ref"}},"id":3227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"drawCard","nodeType":"MemberAccess","referencedDeclaration":3950,"src":"5520:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_CardDeck_$3836_storage_ptr_$returns$_t_struct$_Card_$3829_memory_ptr_$bound_to$_t_struct$_CardDeck_$3836_storage_ptr_$","typeString":"function (struct CardDeck storage pointer) returns (struct Card memory)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5520:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"nodeType":"VariableDeclarationStatement","src":"5501:34:12"},{"eventCall":{"arguments":[{"id":3231,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"5564:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3232,"name":"card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"5579:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"suit","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"5579:9:12","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"}},{"expression":{"id":3234,"name":"card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"5590:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"5590:10:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"},{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}],"id":3230,"name":"CardDrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"5554:9:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_Suit_$3808_$_t_enum$_Value_$3822_$returns$__$","typeString":"function (address,enum Suit,enum Value)"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5554:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3237,"nodeType":"EmitStatement","src":"5549:52:12"},{"expression":{"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3238,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"5615:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":3240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stackValue","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"5615:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"expression":{"id":3242,"name":"card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"5660:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"5660:10:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}],"id":3241,"name":"_convertCardValueToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"5636:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Value_$3822_$returns$_t_uint256_$","typeString":"function (enum Value) pure returns (uint256)"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5636:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5615:56:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3246,"nodeType":"ExpressionStatement","src":"5615:56:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3247,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"5690:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":3248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stackValue","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"5690:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3231","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:2:12","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"5690:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3263,"nodeType":"IfStatement","src":"5686:117:12","trueBody":{"id":3262,"nodeType":"Block","src":"5714:89:12","statements":[{"expression":{"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3251,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"5732:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":3253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"turnOver","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"5732:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5750:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5732:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3256,"nodeType":"ExpressionStatement","src":"5732:22:12"},{"expression":{"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5772:16:12","subExpression":{"expression":{"id":3257,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"5772:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"moveCount","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"5772:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3261,"nodeType":"ExpressionStatement","src":"5772:16:12"}]}}]},"id":3265,"nodeType":"IfStatement","src":"5372:441:12","trueBody":{"id":3222,"nodeType":"Block","src":"5404:77:12","statements":[{"expression":{"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3211,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"5418:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":3213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"turnOver","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"5418:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5436:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5418:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3216,"nodeType":"ExpressionStatement","src":"5418:22:12"},{"expression":{"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5454:16:12","subExpression":{"expression":{"id":3217,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"5454:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"moveCount","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"5454:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3221,"nodeType":"ExpressionStatement","src":"5454:16:12"}]}},{"eventCall":{"arguments":[{"id":3267,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"5840:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3266,"name":"PlayerMoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"5828:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5828:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3269,"nodeType":"EmitStatement","src":"5823:31:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3270,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"5869:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":3271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"turnOver","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"5869:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5888:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5869:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3274,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"5896:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"moveCount","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"5896:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3276,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"5913:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numPlayers","nodeType":"MemberAccess","referencedDeclaration":2707,"src":"5913:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5896:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5869:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3290,"nodeType":"IfStatement","src":"5865:134:12","trueBody":{"expression":{"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3280,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"5942:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"currentPlayer","nodeType":"MemberAccess","referencedDeclaration":2701,"src":"5942:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":3283,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"5963:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"playerAddresses","nodeType":"MemberAccess","referencedDeclaration":2713,"src":"5963:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3287,"indexExpression":{"expression":{"id":3285,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"5984:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"moveCount","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"5984:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5963:36:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5942:57:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3289,"nodeType":"ExpressionStatement","src":"5942:57:12"}},{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":3291,"name":"_isPlayingOver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"6014:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6014:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3300,"nodeType":"IfStatement","src":"6010:89:12","trueBody":{"id":3299,"nodeType":"Block","src":"6032:67:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3293,"name":"_playDealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"6046:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6046:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3295,"nodeType":"ExpressionStatement","src":"6046:13:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3296,"name":"_advanceStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"6073:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6073:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3298,"nodeType":"ExpressionStatement","src":"6073:15:12"}]}}]},"functionSelector":"53a04b05","id":3302,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3180,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"5141:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PLAYING","nodeType":"MemberAccess","referencedDeclaration":2693,"src":"5141:13:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}}],"id":3182,"kind":"modifierInvocation","modifierName":{"id":3179,"name":"isStage","nodeType":"IdentifierPath","referencedDeclaration":2791,"src":"5133:7:12"},"nodeType":"ModifierInvocation","src":"5133:22:12"},{"id":3184,"kind":"modifierInvocation","modifierName":{"id":3183,"name":"onlyPlayer","nodeType":"IdentifierPath","referencedDeclaration":2869,"src":"5164:10:12"},"nodeType":"ModifierInvocation","src":"5164:10:12"}],"name":"play","nameLocation":"5084:4:12","nodeType":"FunctionDefinition","parameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"decision","nameLocation":"5098:8:12","nodeType":"VariableDeclaration","scope":3302,"src":"5089:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Decision_$2699","typeString":"enum Blackjack.Decision"},"typeName":{"id":3176,"nodeType":"UserDefinedTypeName","pathNode":{"id":3175,"name":"Decision","nodeType":"IdentifierPath","referencedDeclaration":2699,"src":"5089:8:12"},"referencedDeclaration":2699,"src":"5089:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Decision_$2699","typeString":"enum Blackjack.Decision"}},"visibility":"internal"}],"src":"5088:19:12"},"returnParameters":{"id":3185,"nodeType":"ParameterList","parameters":[],"src":"5179:0:12"},"scope":3801,"src":"5075:1030:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3388,"nodeType":"Block","src":"6171:607:12","statements":[{"assignments":[3312],"declarations":[{"constant":false,"id":3312,"mutability":"mutable","name":"dealerBusts","nameLocation":"6186:11:12","nodeType":"VariableDeclaration","scope":3388,"src":"6181:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3311,"name":"bool","nodeType":"ElementaryTypeName","src":"6181:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3318,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3313,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"6201:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":3314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stackValue","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"6201:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3231","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6221:2:12","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"6201:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6200:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"6181:43:12"},{"body":{"id":3383,"nodeType":"Block","src":"6281:465:12","statements":[{"assignments":[3331],"declarations":[{"constant":false,"id":3331,"mutability":"mutable","name":"playerAddress","nameLocation":"6303:13:12","nodeType":"VariableDeclaration","scope":3383,"src":"6295:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3330,"name":"address","nodeType":"ElementaryTypeName","src":"6295:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3336,"initialValue":{"baseExpression":{"expression":{"id":3332,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"6319:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"playerAddresses","nodeType":"MemberAccess","referencedDeclaration":2713,"src":"6319:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3335,"indexExpression":{"id":3334,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"6340:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6319:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6295:47:12"},{"assignments":[3339],"declarations":[{"constant":false,"id":3339,"mutability":"mutable","name":"player","nameLocation":"6370:6:12","nodeType":"VariableDeclaration","scope":3383,"src":"6356:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_memory_ptr","typeString":"struct Blackjack.Player"},"typeName":{"id":3338,"nodeType":"UserDefinedTypeName","pathNode":{"id":3337,"name":"Player","nodeType":"IdentifierPath","referencedDeclaration":2683,"src":"6356:6:12"},"referencedDeclaration":2683,"src":"6356:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player"}},"visibility":"internal"}],"id":3343,"initialValue":{"baseExpression":{"id":3340,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"6379:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player storage ref)"}},"id":3342,"indexExpression":{"id":3341,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"6387:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6379:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6356:45:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6420:16:12","subExpression":{"expression":{"id":3344,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"6421:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_memory_ptr","typeString":"struct Blackjack.Player memory"}},"id":3345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"turnOver","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"6421:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3347,"name":"dealerBusts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"6440:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6420:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6571:16:12","subExpression":{"expression":{"id":3360,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"6572:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_memory_ptr","typeString":"struct Blackjack.Player memory"}},"id":3361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"turnOver","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"6572:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3363,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"6592:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_memory_ptr","typeString":"struct Blackjack.Player memory"}},"id":3364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stackValue","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"6592:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3365,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"6612:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":3366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stackValue","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"6612:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6592:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6591:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6571:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3381,"nodeType":"IfStatement","src":"6550:186:12","trueBody":{"id":3380,"nodeType":"Block","src":"6645:91:12","statements":[{"expression":{"arguments":[{"id":3371,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"6673:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"32","id":3374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6701:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"expression":{"id":3375,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"6704:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_memory_ptr","typeString":"struct Blackjack.Player memory"}},"id":3376,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"betValue","nodeType":"MemberAccess","referencedDeclaration":2680,"src":"6704:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3372,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"6688:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2551_$","typeString":"type(library SafeMath)"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2445,"src":"6688:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6688:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3370,"name":"_payChips","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"6663:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6663:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3379,"nodeType":"ExpressionStatement","src":"6663:58:12"}]}},"id":3382,"nodeType":"IfStatement","src":"6416:320:12","trueBody":{"id":3359,"nodeType":"Block","src":"6453:91:12","statements":[{"expression":{"arguments":[{"id":3350,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"6481:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"32","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6509:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"expression":{"id":3354,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"6512:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_memory_ptr","typeString":"struct Blackjack.Player memory"}},"id":3355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"betValue","nodeType":"MemberAccess","referencedDeclaration":2680,"src":"6512:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3351,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"6496:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2551_$","typeString":"type(library SafeMath)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2445,"src":"6496:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6496:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3349,"name":"_payChips","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"6471:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6471:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3358,"nodeType":"ExpressionStatement","src":"6471:58:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3323,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"6255:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3324,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"6259:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numPlayers","nodeType":"MemberAccess","referencedDeclaration":2707,"src":"6259:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6255:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3384,"initializationExpression":{"assignments":[3320],"declarations":[{"constant":false,"id":3320,"mutability":"mutable","name":"i","nameLocation":"6248:1:12","nodeType":"VariableDeclaration","scope":3384,"src":"6240:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3319,"name":"uint256","nodeType":"ElementaryTypeName","src":"6240:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3322,"initialValue":{"hexValue":"30","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6252:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6240:13:12"},"loopExpression":{"expression":{"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6276:3:12","subExpression":{"id":3327,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"6276:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3329,"nodeType":"ExpressionStatement","src":"6276:3:12"},"nodeType":"ForStatement","src":"6235:511:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3385,"name":"_advanceStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"6756:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6756:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3387,"nodeType":"ExpressionStatement","src":"6756:15:12"}]},"functionSelector":"63bd1d4a","id":3389,"implemented":true,"kind":"function","modifiers":[{"id":3305,"kind":"modifierInvocation","modifierName":{"id":3304,"name":"onlyDealer","nodeType":"IdentifierPath","referencedDeclaration":2843,"src":"6138:10:12"},"nodeType":"ModifierInvocation","src":"6138:10:12"},{"arguments":[{"expression":{"id":3307,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"6157:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PAYOUT","nodeType":"MemberAccess","referencedDeclaration":2694,"src":"6157:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}}],"id":3309,"kind":"modifierInvocation","modifierName":{"id":3306,"name":"isStage","nodeType":"IdentifierPath","referencedDeclaration":2791,"src":"6149:7:12"},"nodeType":"ModifierInvocation","src":"6149:21:12"}],"name":"payout","nameLocation":"6120:6:12","nodeType":"FunctionDefinition","parameters":{"id":3303,"nodeType":"ParameterList","parameters":[],"src":"6126:2:12"},"returnParameters":{"id":3310,"nodeType":"ParameterList","parameters":[],"src":"6171:0:12"},"scope":3801,"src":"6111:667:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3420,"nodeType":"Block","src":"6962:187:12","statements":[{"expression":{"components":[{"expression":{"baseExpression":{"id":3402,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"6993:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player storage ref)"}},"id":3404,"indexExpression":{"id":3403,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"7001:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6993:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"id":3405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"betMade","nodeType":"MemberAccess","referencedDeclaration":2676,"src":"6993:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"baseExpression":{"id":3406,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"7030:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player storage ref)"}},"id":3408,"indexExpression":{"id":3407,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"7038:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7030:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"id":3409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"turnOver","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"7030:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"baseExpression":{"id":3410,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"7068:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player storage ref)"}},"id":3412,"indexExpression":{"id":3411,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"7076:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7068:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"id":3413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"betValue","nodeType":"MemberAccess","referencedDeclaration":2680,"src":"7068:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":3414,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"7106:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player storage ref)"}},"id":3416,"indexExpression":{"id":3415,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"7114:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7106:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"id":3417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stackValue","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"7106:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3418,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6979:163:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$","typeString":"tuple(bool,bool,uint256,uint256)"}},"functionReturnParameters":3401,"id":3419,"nodeType":"Return","src":"6972:170:12"}]},"functionSelector":"59328401","id":3421,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayerInfo","nameLocation":"6793:13:12","nodeType":"FunctionDefinition","parameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"player","nameLocation":"6815:6:12","nodeType":"VariableDeclaration","scope":3421,"src":"6807:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3390,"name":"address","nodeType":"ElementaryTypeName","src":"6807:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6806:16:12"},"returnParameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3421,"src":"6883:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3393,"name":"bool","nodeType":"ElementaryTypeName","src":"6883:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3421,"src":"6901:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3395,"name":"bool","nodeType":"ElementaryTypeName","src":"6901:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3421,"src":"6919:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"6919:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3421,"src":"6940:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3399,"name":"uint256","nodeType":"ElementaryTypeName","src":"6940:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6869:88:12"},"scope":3801,"src":"6784:365:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3452,"nodeType":"Block","src":"7383:215:12","statements":[{"expression":{"components":[{"expression":{"id":3438,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"7414:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currentPlayer","nodeType":"MemberAccess","referencedDeclaration":2701,"src":"7414:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3440,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"7446:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"betCount","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"7446:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3442,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"7473:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"moveCount","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"7473:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3444,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"7501:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numPlayers","nodeType":"MemberAccess","referencedDeclaration":2707,"src":"7501:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3446,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"7530:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currentStage","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"7530:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},{"expression":{"id":3448,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"7561:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"playerAddresses","nodeType":"MemberAccess","referencedDeclaration":2713,"src":"7561:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}}],"id":3450,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7400:191:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Stage_$2696_$_t_array$_t_address_$dyn_storage_$","typeString":"tuple(address,uint256,uint256,uint256,enum Blackjack.Stage,address[] storage ref)"}},"functionReturnParameters":3437,"id":3451,"nodeType":"Return","src":"7393:198:12"}]},"functionSelector":"1746bd1b","id":3453,"implemented":true,"kind":"function","modifiers":[],"name":"getGameInfo","nameLocation":"7164:11:12","nodeType":"FunctionDefinition","parameters":{"id":3422,"nodeType":"ParameterList","parameters":[],"src":"7175:2:12"},"returnParameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3453,"src":"7238:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3423,"name":"address","nodeType":"ElementaryTypeName","src":"7238:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3453,"src":"7259:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"7259:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3453,"src":"7280:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3427,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3430,"mutability":"mutable","name":"numPlayers","nameLocation":"7309:10:12","nodeType":"VariableDeclaration","scope":3453,"src":"7301:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3429,"name":"uint256","nodeType":"ElementaryTypeName","src":"7301:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3453,"src":"7333:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"},"typeName":{"id":3432,"nodeType":"UserDefinedTypeName","pathNode":{"id":3431,"name":"Stage","nodeType":"IdentifierPath","referencedDeclaration":2696,"src":"7333:5:12"},"referencedDeclaration":2696,"src":"7333:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"visibility":"internal"},{"constant":false,"id":3436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3453,"src":"7352:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3434,"name":"address","nodeType":"ElementaryTypeName","src":"7352:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3435,"nodeType":"ArrayTypeName","src":"7352:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7224:154:12"},"scope":3801,"src":"7155:443:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3465,"nodeType":"Block","src":"7732:42:12","statements":[{"expression":{"expression":{"id":3462,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"7749:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":3463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"faceUpValue","nodeType":"MemberAccess","referencedDeclaration":2687,"src":"7749:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3461,"id":3464,"nodeType":"Return","src":"7742:25:12"}]},"functionSelector":"248adb8f","id":3466,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3456,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"7687:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PLAYING","nodeType":"MemberAccess","referencedDeclaration":2693,"src":"7687:13:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}}],"id":3458,"kind":"modifierInvocation","modifierName":{"id":3455,"name":"isStage","nodeType":"IdentifierPath","referencedDeclaration":2791,"src":"7679:7:12"},"nodeType":"ModifierInvocation","src":"7679:22:12"}],"name":"getDealersFaceUpCardValue","nameLocation":"7613:25:12","nodeType":"FunctionDefinition","parameters":{"id":3454,"nodeType":"ParameterList","parameters":[],"src":"7638:2:12"},"returnParameters":{"id":3461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3466,"src":"7719:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3459,"name":"uint256","nodeType":"ElementaryTypeName","src":"7719:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7718:9:12"},"scope":3801,"src":"7604:170:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3475,"nodeType":"Block","src":"7837:41:12","statements":[{"expression":{"expression":{"id":3472,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"7854:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currentStage","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"7854:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"functionReturnParameters":3471,"id":3474,"nodeType":"Return","src":"7847:24:12"}]},"functionSelector":"eedbe31d","id":3476,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentStage","nameLocation":"7789:15:12","nodeType":"FunctionDefinition","parameters":{"id":3467,"nodeType":"ParameterList","parameters":[],"src":"7804:2:12"},"returnParameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3476,"src":"7830:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"},"typeName":{"id":3469,"nodeType":"UserDefinedTypeName","pathNode":{"id":3468,"name":"Stage","nodeType":"IdentifierPath","referencedDeclaration":2696,"src":"7830:5:12"},"referencedDeclaration":2696,"src":"7830:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"visibility":"internal"}],"src":"7829:7:12"},"scope":3801,"src":"7780:98:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3512,"nodeType":"Block","src":"7950:219:12","statements":[{"body":{"id":3505,"nodeType":"Block","src":"7991:130:12","statements":[{"assignments":[3491],"declarations":[{"constant":false,"id":3491,"mutability":"mutable","name":"card","nameLocation":"8017:4:12","nodeType":"VariableDeclaration","scope":3505,"src":"8005:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card"},"typeName":{"id":3490,"nodeType":"UserDefinedTypeName","pathNode":{"id":3489,"name":"Card","nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"8005:4:12"},"referencedDeclaration":3829,"src":"8005:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_storage_ptr","typeString":"struct Card"}},"visibility":"internal"}],"id":3495,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3492,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"8024:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage","typeString":"struct CardDeck storage ref"}},"id":3493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"drawCard","nodeType":"MemberAccess","referencedDeclaration":3950,"src":"8024:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_CardDeck_$3836_storage_ptr_$returns$_t_struct$_Card_$3829_memory_ptr_$bound_to$_t_struct$_CardDeck_$3836_storage_ptr_$","typeString":"function (struct CardDeck storage pointer) returns (struct Card memory)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8024:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"nodeType":"VariableDeclarationStatement","src":"8005:34:12"},{"expression":{"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3496,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"8054:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":3498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stackValue","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"8054:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"expression":{"id":3500,"name":"card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"8099:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"id":3501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"8099:10:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}],"id":3499,"name":"_convertCardValueToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"8075:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Value_$3822_$returns$_t_uint256_$","typeString":"function (enum Value) pure returns (uint256)"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8075:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8054:56:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3504,"nodeType":"ExpressionStatement","src":"8054:56:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3485,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"7967:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":3486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stackValue","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"7967:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3137","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7987:2:12","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"17"},"src":"7967:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3506,"nodeType":"WhileStatement","src":"7960:161:12"},{"eventCall":{"arguments":[{"expression":{"id":3508,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"8148:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":3509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":2685,"src":"8148:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3507,"name":"DealerMoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"8136:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8136:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3511,"nodeType":"EmitStatement","src":"8131:31:12"}]},"id":3513,"implemented":true,"kind":"function","modifiers":[{"id":3479,"kind":"modifierInvocation","modifierName":{"id":3478,"name":"onlyDealer","nodeType":"IdentifierPath","referencedDeclaration":2843,"src":"7916:10:12"},"nodeType":"ModifierInvocation","src":"7916:10:12"},{"arguments":[{"expression":{"id":3481,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"7935:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PLAYING","nodeType":"MemberAccess","referencedDeclaration":2693,"src":"7935:13:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}}],"id":3483,"kind":"modifierInvocation","modifierName":{"id":3480,"name":"isStage","nodeType":"IdentifierPath","referencedDeclaration":2791,"src":"7927:7:12"},"nodeType":"ModifierInvocation","src":"7927:22:12"}],"name":"_playDealer","nameLocation":"7893:11:12","nodeType":"FunctionDefinition","parameters":{"id":3477,"nodeType":"ParameterList","parameters":[],"src":"7904:2:12"},"returnParameters":{"id":3484,"nodeType":"ParameterList","parameters":[],"src":"7950:0:12"},"scope":3801,"src":"7884:285:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3627,"nodeType":"Block","src":"8233:883:12","statements":[{"assignments":[3521],"declarations":[{"constant":false,"id":3521,"mutability":"mutable","name":"dealerHasNatural","nameLocation":"8248:16:12","nodeType":"VariableDeclaration","scope":3627,"src":"8243:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3520,"name":"bool","nodeType":"ElementaryTypeName","src":"8243:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3527,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3522,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"8268:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":3523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stackValue","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"8268:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3231","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8289:2:12","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"8268:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8267:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8243:49:12"},{"body":{"id":3625,"nodeType":"Block","src":"8349:761:12","statements":[{"assignments":[3540],"declarations":[{"constant":false,"id":3540,"mutability":"mutable","name":"playerAddress","nameLocation":"8371:13:12","nodeType":"VariableDeclaration","scope":3625,"src":"8363:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3539,"name":"address","nodeType":"ElementaryTypeName","src":"8363:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3545,"initialValue":{"baseExpression":{"expression":{"id":3541,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"8387:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"playerAddresses","nodeType":"MemberAccess","referencedDeclaration":2713,"src":"8387:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3544,"indexExpression":{"id":3543,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"8408:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8387:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8363:47:12"},{"assignments":[3548],"declarations":[{"constant":false,"id":3548,"mutability":"mutable","name":"player","nameLocation":"8439:6:12","nodeType":"VariableDeclaration","scope":3625,"src":"8424:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player"},"typeName":{"id":3547,"nodeType":"UserDefinedTypeName","pathNode":{"id":3546,"name":"Player","nodeType":"IdentifierPath","referencedDeclaration":2683,"src":"8424:6:12"},"referencedDeclaration":2683,"src":"8424:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player"}},"visibility":"internal"}],"id":3552,"initialValue":{"baseExpression":{"id":3549,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"8448:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$2683_storage_$","typeString":"mapping(address => struct Blackjack.Player storage ref)"}},"id":3551,"indexExpression":{"id":3550,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"8456:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8448:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage","typeString":"struct Blackjack.Player storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8424:46:12"},{"assignments":[3554],"declarations":[{"constant":false,"id":3554,"mutability":"mutable","name":"playerHasNatural","nameLocation":"8489:16:12","nodeType":"VariableDeclaration","scope":3625,"src":"8484:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3553,"name":"bool","nodeType":"ElementaryTypeName","src":"8484:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3560,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3555,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"8509:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":3556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stackValue","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"8509:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3231","id":3557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8530:2:12","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"8509:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8508:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8484:49:12"},{"assignments":[3562],"declarations":[{"constant":false,"id":3562,"mutability":"mutable","name":"betValue","nameLocation":"8555:8:12","nodeType":"VariableDeclaration","scope":3625,"src":"8547:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3561,"name":"uint256","nodeType":"ElementaryTypeName","src":"8547:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3565,"initialValue":{"expression":{"id":3563,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"8566:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":3564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"betValue","nodeType":"MemberAccess","referencedDeclaration":2680,"src":"8566:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8547:34:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8600:17:12","subExpression":{"id":3566,"name":"dealerHasNatural","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"8601:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3568,"name":"playerHasNatural","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"8621:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8600:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3596,"name":"dealerHasNatural","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"8851:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3597,"name":"playerHasNatural","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"8871:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8851:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3611,"name":"dealerHasNatural","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"9006:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9026:17:12","subExpression":{"id":3612,"name":"playerHasNatural","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"9027:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9006:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3622,"nodeType":"IfStatement","src":"9002:98:12","trueBody":{"id":3621,"nodeType":"Block","src":"9045:55:12","statements":[{"expression":{"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3615,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"9063:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":3617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"turnOver","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"9063:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9081:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9063:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3620,"nodeType":"ExpressionStatement","src":"9063:22:12"}]}},"id":3623,"nodeType":"IfStatement","src":"8847:253:12","trueBody":{"id":3610,"nodeType":"Block","src":"8889:107:12","statements":[{"expression":{"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3599,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"8907:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":3601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"turnOver","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"8907:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8925:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8907:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3604,"nodeType":"ExpressionStatement","src":"8907:22:12"},{"expression":{"arguments":[{"id":3606,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"8957:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3607,"name":"betValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"8972:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3605,"name":"_payChips","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"8947:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8947:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3609,"nodeType":"ExpressionStatement","src":"8947:34:12"}]}},"id":3624,"nodeType":"IfStatement","src":"8596:504:12","trueBody":{"id":3595,"nodeType":"Block","src":"8639:202:12","statements":[{"expression":{"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3570,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"8657:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$2683_storage_ptr","typeString":"struct Blackjack.Player storage pointer"}},"id":3572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"turnOver","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"8657:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8675:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8657:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3575,"nodeType":"ExpressionStatement","src":"8657:22:12"},{"assignments":[3577],"declarations":[{"constant":false,"id":3577,"mutability":"mutable","name":"betValueDivBy2","nameLocation":"8705:14:12","nodeType":"VariableDeclaration","scope":3595,"src":"8697:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"8697:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3585,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3580,"name":"betValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"8735:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":3578,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"8722:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2551_$","typeString":"type(library SafeMath)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2415,"src":"8722:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8722:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8750:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8722:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8697:54:12"},{"expression":{"arguments":[{"id":3587,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"8779:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"35","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8807:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},{"id":3591,"name":"betValueDivBy2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"8810:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3588,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"8794:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeMath_$2551_$","typeString":"type(library SafeMath)"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":2445,"src":"8794:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8794:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3586,"name":"_payChips","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"8769:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8769:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3594,"nodeType":"ExpressionStatement","src":"8769:57:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3532,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"8323:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3533,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"8327:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numPlayers","nodeType":"MemberAccess","referencedDeclaration":2707,"src":"8327:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3626,"initializationExpression":{"assignments":[3529],"declarations":[{"constant":false,"id":3529,"mutability":"mutable","name":"i","nameLocation":"8316:1:12","nodeType":"VariableDeclaration","scope":3626,"src":"8308:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"8308:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3531,"initialValue":{"hexValue":"30","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8320:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8308:13:12"},"loopExpression":{"expression":{"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8344:3:12","subExpression":{"id":3536,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"8344:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3538,"nodeType":"ExpressionStatement","src":"8344:3:12"},"nodeType":"ForStatement","src":"8303:807:12"}]},"id":3628,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":3516,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"8218:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"DEALING","nodeType":"MemberAccess","referencedDeclaration":2692,"src":"8218:13:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}}],"id":3518,"kind":"modifierInvocation","modifierName":{"id":3515,"name":"isStage","nodeType":"IdentifierPath","referencedDeclaration":2791,"src":"8210:7:12"},"nodeType":"ModifierInvocation","src":"8210:22:12"}],"name":"_checkNaturals","nameLocation":"8184:14:12","nodeType":"FunctionDefinition","parameters":{"id":3514,"nodeType":"ParameterList","parameters":[],"src":"8198:2:12"},"returnParameters":{"id":3519,"nodeType":"ParameterList","parameters":[],"src":"8233:0:12"},"scope":3801,"src":"8175:941:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3644,"nodeType":"Block","src":"9186:66:12","statements":[{"expression":{"arguments":[{"id":3638,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"9215:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3639,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"9223:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":3640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":2685,"src":"9223:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3641,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"9238:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3635,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"9196:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ChipToken_$4042","typeString":"contract ChipToken"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":588,"src":"9196:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9196:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3643,"nodeType":"ExpressionStatement","src":"9196:49:12"}]},"id":3645,"implemented":true,"kind":"function","modifiers":[],"name":"_collectChips","nameLocation":"9131:13:12","nodeType":"FunctionDefinition","parameters":{"id":3633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"player","nameLocation":"9153:6:12","nodeType":"VariableDeclaration","scope":3645,"src":"9145:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3629,"name":"address","nodeType":"ElementaryTypeName","src":"9145:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"amount","nameLocation":"9169:6:12","nodeType":"VariableDeclaration","scope":3645,"src":"9161:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3631,"name":"uint256","nodeType":"ElementaryTypeName","src":"9161:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9144:32:12"},"returnParameters":{"id":3634,"nodeType":"ParameterList","parameters":[],"src":"9186:0:12"},"scope":3801,"src":"9122:130:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3661,"nodeType":"Block","src":"9318:66:12","statements":[{"expression":{"arguments":[{"expression":{"id":3655,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"9347:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Dealer_$2690_storage","typeString":"struct Blackjack.Dealer storage ref"}},"id":3656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dealer","nodeType":"MemberAccess","referencedDeclaration":2685,"src":"9347:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3657,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"9362:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3658,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"9370:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3652,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"9328:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ChipToken_$4042","typeString":"contract ChipToken"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":588,"src":"9328:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9328:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3660,"nodeType":"ExpressionStatement","src":"9328:49:12"}]},"id":3662,"implemented":true,"kind":"function","modifiers":[],"name":"_payChips","nameLocation":"9267:9:12","nodeType":"FunctionDefinition","parameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"player","nameLocation":"9285:6:12","nodeType":"VariableDeclaration","scope":3662,"src":"9277:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3646,"name":"address","nodeType":"ElementaryTypeName","src":"9277:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"amount","nameLocation":"9301:6:12","nodeType":"VariableDeclaration","scope":3662,"src":"9293:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3648,"name":"uint256","nodeType":"ElementaryTypeName","src":"9293:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9276:32:12"},"returnParameters":{"id":3651,"nodeType":"ParameterList","parameters":[],"src":"9318:0:12"},"scope":3801,"src":"9258:126:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3742,"nodeType":"Block","src":"9424:638:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3665,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"9438:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currentStage","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"9438:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3667,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"9459:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BETTING","nodeType":"MemberAccess","referencedDeclaration":2691,"src":"9459:13:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"src":"9438:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3683,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"9593:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currentStage","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"9593:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3685,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"9614:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"DEALING","nodeType":"MemberAccess","referencedDeclaration":2692,"src":"9614:13:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"src":"9593:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3701,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"9748:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currentStage","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"9748:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3703,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"9769:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PLAYING","nodeType":"MemberAccess","referencedDeclaration":2693,"src":"9769:13:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"src":"9748:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3719,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"9902:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currentStage","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"9902:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3721,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"9923:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PAYOUT","nodeType":"MemberAccess","referencedDeclaration":2694,"src":"9923:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"src":"9902:33:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3737,"nodeType":"Block","src":"10054:2:12","statements":[]},"id":3738,"nodeType":"IfStatement","src":"9898:158:12","trueBody":{"id":3736,"nodeType":"Block","src":"9937:111:12","statements":[{"expression":{"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3724,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"9951:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"currentStage","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"9951:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3727,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"9971:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"GAME_OVER","nodeType":"MemberAccess","referencedDeclaration":2695,"src":"9971:15:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"src":"9951:35:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"id":3730,"nodeType":"ExpressionStatement","src":"9951:35:12"},{"eventCall":{"arguments":[{"expression":{"id":3732,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"10019:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currentStage","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"10019:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}],"id":3731,"name":"StageAdvanced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"10005:13:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Stage_$2696_$returns$__$","typeString":"function (enum Blackjack.Stage)"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10005:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3735,"nodeType":"EmitStatement","src":"10000:37:12"}]}},"id":3739,"nodeType":"IfStatement","src":"9744:312:12","trueBody":{"id":3718,"nodeType":"Block","src":"9784:108:12","statements":[{"expression":{"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3706,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"9798:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"currentStage","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"9798:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3709,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"9818:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PAYOUT","nodeType":"MemberAccess","referencedDeclaration":2694,"src":"9818:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"src":"9798:32:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"id":3712,"nodeType":"ExpressionStatement","src":"9798:32:12"},{"eventCall":{"arguments":[{"expression":{"id":3714,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"9863:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currentStage","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"9863:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}],"id":3713,"name":"StageAdvanced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"9849:13:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Stage_$2696_$returns$__$","typeString":"function (enum Blackjack.Stage)"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9849:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3717,"nodeType":"EmitStatement","src":"9844:37:12"}]}},"id":3740,"nodeType":"IfStatement","src":"9589:467:12","trueBody":{"id":3700,"nodeType":"Block","src":"9629:109:12","statements":[{"expression":{"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3688,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"9643:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"currentStage","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"9643:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3691,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"9663:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PLAYING","nodeType":"MemberAccess","referencedDeclaration":2693,"src":"9663:13:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"src":"9643:33:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"id":3694,"nodeType":"ExpressionStatement","src":"9643:33:12"},{"eventCall":{"arguments":[{"expression":{"id":3696,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"9709:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currentStage","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"9709:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}],"id":3695,"name":"StageAdvanced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"9695:13:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Stage_$2696_$returns$__$","typeString":"function (enum Blackjack.Stage)"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9695:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3699,"nodeType":"EmitStatement","src":"9690:37:12"}]}},"id":3741,"nodeType":"IfStatement","src":"9434:622:12","trueBody":{"id":3682,"nodeType":"Block","src":"9474:109:12","statements":[{"expression":{"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3670,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"9488:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"currentStage","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"9488:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3673,"name":"Stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"9508:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stage_$2696_$","typeString":"type(enum Blackjack.Stage)"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"DEALING","nodeType":"MemberAccess","referencedDeclaration":2692,"src":"9508:13:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"src":"9488:33:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}},"id":3676,"nodeType":"ExpressionStatement","src":"9488:33:12"},{"eventCall":{"arguments":[{"expression":{"id":3678,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"9554:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currentStage","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"9554:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stage_$2696","typeString":"enum Blackjack.Stage"}],"id":3677,"name":"StageAdvanced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"9540:13:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Stage_$2696_$returns$__$","typeString":"function (enum Blackjack.Stage)"}},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9540:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3681,"nodeType":"EmitStatement","src":"9535:37:12"}]}}]},"id":3743,"implemented":true,"kind":"function","modifiers":[],"name":"_advanceStage","nameLocation":"9399:13:12","nodeType":"FunctionDefinition","parameters":{"id":3663,"nodeType":"ParameterList","parameters":[],"src":"9412:2:12"},"returnParameters":{"id":3664,"nodeType":"ParameterList","parameters":[],"src":"9424:0:12"},"scope":3801,"src":"9390:672:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3754,"nodeType":"Block","src":"10123:56:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3748,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"10140:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"betCount","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"10140:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3750,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"10157:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3751,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numPlayers","nodeType":"MemberAccess","referencedDeclaration":2707,"src":"10157:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10140:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3747,"id":3753,"nodeType":"Return","src":"10133:39:12"}]},"id":3755,"implemented":true,"kind":"function","modifiers":[],"name":"_isBettingOver","nameLocation":"10077:14:12","nodeType":"FunctionDefinition","parameters":{"id":3744,"nodeType":"ParameterList","parameters":[],"src":"10091:2:12"},"returnParameters":{"id":3747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3755,"src":"10117:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3745,"name":"bool","nodeType":"ElementaryTypeName","src":"10117:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10116:6:12"},"scope":3801,"src":"10068:111:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3766,"nodeType":"Block","src":"10240:57:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3760,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"10257:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"moveCount","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"10257:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3762,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"10275:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_GameMetadata_$2714_storage","typeString":"struct Blackjack.GameMetadata storage ref"}},"id":3763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numPlayers","nodeType":"MemberAccess","referencedDeclaration":2707,"src":"10275:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10257:33:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3759,"id":3765,"nodeType":"Return","src":"10250:40:12"}]},"id":3767,"implemented":true,"kind":"function","modifiers":[],"name":"_isPlayingOver","nameLocation":"10194:14:12","nodeType":"FunctionDefinition","parameters":{"id":3756,"nodeType":"ParameterList","parameters":[],"src":"10208:2:12"},"returnParameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3767,"src":"10234:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3757,"name":"bool","nodeType":"ElementaryTypeName","src":"10234:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10233:6:12"},"scope":3801,"src":"10185:112:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3799,"nodeType":"Block","src":"10409:196:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"10436:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3776,"name":"Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"10445:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Value_$3822_$","typeString":"type(enum Value)"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Jack","nodeType":"MemberAccess","referencedDeclaration":3818,"src":"10445:10:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}},"src":"10436:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"10459:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3780,"name":"Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"10468:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Value_$3822_$","typeString":"type(enum Value)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"King","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"10468:10:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}},"src":"10459:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10436:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"10482:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3785,"name":"Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"10491:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Value_$3822_$","typeString":"type(enum Value)"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Queen","nodeType":"MemberAccess","referencedDeclaration":3820,"src":"10491:11:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}},"src":"10482:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10436:66:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3797,"nodeType":"Block","src":"10553:46:12","statements":[{"expression":{"arguments":[{"id":3794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"10582:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}],"id":3793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10574:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"10574:7:12","typeDescriptions":{}}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10574:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3774,"id":3796,"nodeType":"Return","src":"10567:21:12"}]},"id":3798,"nodeType":"IfStatement","src":"10419:180:12","trueBody":{"id":3791,"nodeType":"Block","src":"10513:34:12","statements":[{"expression":{"hexValue":"3130","id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10534:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"functionReturnParameters":3774,"id":3790,"nodeType":"Return","src":"10527:9:12"}]}}]},"id":3800,"implemented":true,"kind":"function","modifiers":[],"name":"_convertCardValueToUint","nameLocation":"10312:23:12","nodeType":"FunctionDefinition","parameters":{"id":3771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3770,"mutability":"mutable","name":"value","nameLocation":"10342:5:12","nodeType":"VariableDeclaration","scope":3800,"src":"10336:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"},"typeName":{"id":3769,"nodeType":"UserDefinedTypeName","pathNode":{"id":3768,"name":"Value","nodeType":"IdentifierPath","referencedDeclaration":3822,"src":"10336:5:12"},"referencedDeclaration":3822,"src":"10336:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}},"visibility":"internal"}],"src":"10335:13:12"},"returnParameters":{"id":3774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3800,"src":"10396:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3772,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:12"},"scope":3801,"src":"10303:302:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3802,"src":"280:10327:12","usedErrors":[]}],"src":"46:10561:12"},"id":12},"contracts/CardDeck.sol":{"ast":{"absolutePath":"contracts/CardDeck.sol","exportedSymbols":{"Card":[3829],"CardDeck":[3836],"CardDeckUtils":[3971],"Suit":[3808],"Value":[3822]},"id":3972,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3803,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"45:23:13"},{"canonicalName":"Suit","id":3808,"members":[{"id":3804,"name":"Spades","nameLocation":"86:6:13","nodeType":"EnumValue","src":"86:6:13"},{"id":3805,"name":"Clubs","nameLocation":"98:5:13","nodeType":"EnumValue","src":"98:5:13"},{"id":3806,"name":"Diamonds","nameLocation":"109:8:13","nodeType":"EnumValue","src":"109:8:13"},{"id":3807,"name":"Hearts","nameLocation":"123:6:13","nodeType":"EnumValue","src":"123:6:13"}],"name":"Suit","nameLocation":"75:4:13","nodeType":"EnumDefinition","src":"70:61:13"},{"canonicalName":"Value","id":3822,"members":[{"id":3809,"name":"Two","nameLocation":"150:3:13","nodeType":"EnumValue","src":"150:3:13"},{"id":3810,"name":"Three","nameLocation":"159:5:13","nodeType":"EnumValue","src":"159:5:13"},{"id":3811,"name":"Four","nameLocation":"170:4:13","nodeType":"EnumValue","src":"170:4:13"},{"id":3812,"name":"Five","nameLocation":"180:4:13","nodeType":"EnumValue","src":"180:4:13"},{"id":3813,"name":"Six","nameLocation":"190:3:13","nodeType":"EnumValue","src":"190:3:13"},{"id":3814,"name":"Seven","nameLocation":"199:5:13","nodeType":"EnumValue","src":"199:5:13"},{"id":3815,"name":"Eight","nameLocation":"210:5:13","nodeType":"EnumValue","src":"210:5:13"},{"id":3816,"name":"Nine","nameLocation":"221:4:13","nodeType":"EnumValue","src":"221:4:13"},{"id":3817,"name":"Ten","nameLocation":"231:3:13","nodeType":"EnumValue","src":"231:3:13"},{"id":3818,"name":"Jack","nameLocation":"240:4:13","nodeType":"EnumValue","src":"240:4:13"},{"id":3819,"name":"King","nameLocation":"250:4:13","nodeType":"EnumValue","src":"250:4:13"},{"id":3820,"name":"Queen","nameLocation":"260:5:13","nodeType":"EnumValue","src":"260:5:13"},{"id":3821,"name":"Ace","nameLocation":"271:3:13","nodeType":"EnumValue","src":"271:3:13"}],"name":"Value","nameLocation":"138:5:13","nodeType":"EnumDefinition","src":"133:143:13"},{"canonicalName":"Card","id":3829,"members":[{"constant":false,"id":3825,"mutability":"mutable","name":"suit","nameLocation":"301:4:13","nodeType":"VariableDeclaration","scope":3829,"src":"296:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"},"typeName":{"id":3824,"nodeType":"UserDefinedTypeName","pathNode":{"id":3823,"name":"Suit","nodeType":"IdentifierPath","referencedDeclaration":3808,"src":"296:4:13"},"referencedDeclaration":3808,"src":"296:4:13","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"}},"visibility":"internal"},{"constant":false,"id":3828,"mutability":"mutable","name":"value","nameLocation":"317:5:13","nodeType":"VariableDeclaration","scope":3829,"src":"311:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"},"typeName":{"id":3827,"nodeType":"UserDefinedTypeName","pathNode":{"id":3826,"name":"Value","nodeType":"IdentifierPath","referencedDeclaration":3822,"src":"311:5:13"},"referencedDeclaration":3822,"src":"311:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}},"visibility":"internal"}],"name":"Card","nameLocation":"285:4:13","nodeType":"StructDefinition","scope":3972,"src":"278:47:13","visibility":"public"},{"canonicalName":"CardDeck","id":3836,"members":[{"constant":false,"id":3833,"mutability":"mutable","name":"cards","nameLocation":"356:5:13","nodeType":"VariableDeclaration","scope":3836,"src":"349:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Card_$3829_storage_$dyn_storage_ptr","typeString":"struct Card[]"},"typeName":{"baseType":{"id":3831,"nodeType":"UserDefinedTypeName","pathNode":{"id":3830,"name":"Card","nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"349:4:13"},"referencedDeclaration":3829,"src":"349:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_storage_ptr","typeString":"struct Card"}},"id":3832,"nodeType":"ArrayTypeName","src":"349:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Card_$3829_storage_$dyn_storage_ptr","typeString":"struct Card[]"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"numCards","nameLocation":"375:8:13","nodeType":"VariableDeclaration","scope":3836,"src":"367:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"367:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"CardDeck","nameLocation":"334:8:13","nodeType":"StructDefinition","scope":3972,"src":"327:59:13","visibility":"public"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3971,"linearizedBaseContracts":[3971],"name":"CardDeckUtils","nameLocation":"396:13:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":3886,"nodeType":"Block","src":"468:211:13","statements":[{"body":{"id":3884,"nodeType":"Block","src":"510:163:13","statements":[{"body":{"id":3882,"nodeType":"Block","src":"557:106:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3869,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"601:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3868,"name":"Suit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"596:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Suit_$3808_$","typeString":"type(enum Suit)"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"596:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"}},{"arguments":[{"id":3872,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"611:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3871,"name":"Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"605:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Value_$3822_$","typeString":"type(enum Value)"}},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"605:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Suit_$3808","typeString":"enum Suit"},{"typeIdentifier":"t_enum$_Value_$3822","typeString":"enum Value"}],"id":3867,"name":"Card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"591:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Card_$3829_storage_ptr_$","typeString":"type(struct Card storage pointer)"}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"591:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}],"expression":{"expression":{"id":3862,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"575:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck storage pointer"}},"id":3865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"cards","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"575:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Card_$3829_storage_$dyn_storage","typeString":"struct Card storage ref[] storage ref"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"575:15:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Card_$3829_storage_$dyn_storage_ptr_$_t_struct$_Card_$3829_storage_$returns$__$bound_to$_t_array$_t_struct$_Card_$3829_storage_$dyn_storage_ptr_$","typeString":"function (struct Card storage ref[] storage pointer,struct Card storage ref)"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"575:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3876,"nodeType":"ExpressionStatement","src":"575:40:13"},{"expression":{"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"633:15:13","subExpression":{"expression":{"id":3877,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"633:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck storage pointer"}},"id":3879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"numCards","nodeType":"MemberAccess","referencedDeclaration":3835,"src":"633:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3881,"nodeType":"ExpressionStatement","src":"633:15:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3856,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"544:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3133","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"548:2:13","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"13"},"src":"544:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3883,"initializationExpression":{"assignments":[3853],"declarations":[{"constant":false,"id":3853,"mutability":"mutable","name":"j","nameLocation":"537:1:13","nodeType":"VariableDeclaration","scope":3883,"src":"529:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3855,"initialValue":{"hexValue":"30","id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"541:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"529:13:13"},"loopExpression":{"expression":{"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"552:3:13","subExpression":{"id":3859,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"552:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3861,"nodeType":"ExpressionStatement","src":"552:3:13"},"nodeType":"ForStatement","src":"524:139:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3846,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"498:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"34","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"502:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"498:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3885,"initializationExpression":{"assignments":[3843],"declarations":[{"constant":false,"id":3843,"mutability":"mutable","name":"i","nameLocation":"491:1:13","nodeType":"VariableDeclaration","scope":3885,"src":"483:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"483:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3845,"initialValue":{"hexValue":"30","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"495:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"483:13:13"},"loopExpression":{"expression":{"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"505:3:13","subExpression":{"id":3849,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"505:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3851,"nodeType":"ExpressionStatement","src":"505:3:13"},"nodeType":"ForStatement","src":"478:195:13"}]},"id":3887,"implemented":true,"kind":"function","modifiers":[],"name":"createDeck","nameLocation":"425:10:13","nodeType":"FunctionDefinition","parameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3839,"mutability":"mutable","name":"deck","nameLocation":"453:4:13","nodeType":"VariableDeclaration","scope":3887,"src":"436:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck"},"typeName":{"id":3838,"nodeType":"UserDefinedTypeName","pathNode":{"id":3837,"name":"CardDeck","nodeType":"IdentifierPath","referencedDeclaration":3836,"src":"436:8:13"},"referencedDeclaration":3836,"src":"436:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck"}},"visibility":"internal"}],"src":"435:23:13"},"returnParameters":{"id":3841,"nodeType":"ParameterList","parameters":[],"src":"468:0:13"},"scope":3971,"src":"416:263:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3949,"nodeType":"Block","src":"757:309:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3897,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"775:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck storage pointer"}},"id":3898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numCards","nodeType":"MemberAccess","referencedDeclaration":3835,"src":"775:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"791:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"775:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f206d6f7265206361726473206c65667420696e20746865206465636b","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"794:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c112c2c291568ca6f3d9c3c61df5a6f2303477385bfcf06fd59e47a00d5aabe","typeString":"literal_string \"no more cards left in the deck\""},"value":"no more cards left in the deck"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8c112c2c291568ca6f3d9c3c61df5a6f2303477385bfcf06fd59e47a00d5aabe","typeString":"literal_string \"no more cards left in the deck\""}],"id":3896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"767:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"767:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3903,"nodeType":"ExpressionStatement","src":"767:60:13"},{"assignments":[3905],"declarations":[{"constant":false,"id":3905,"mutability":"mutable","name":"index","nameLocation":"845:5:13","nodeType":"VariableDeclaration","scope":3949,"src":"837:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"837:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3911,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3906,"name":"_random","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"853:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"853:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":3908,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"865:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck storage pointer"}},"id":3909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numCards","nodeType":"MemberAccess","referencedDeclaration":3835,"src":"865:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"853:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"837:41:13"},{"assignments":[3914],"declarations":[{"constant":false,"id":3914,"mutability":"mutable","name":"card","nameLocation":"900:4:13","nodeType":"VariableDeclaration","scope":3949,"src":"888:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card"},"typeName":{"id":3913,"nodeType":"UserDefinedTypeName","pathNode":{"id":3912,"name":"Card","nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"888:4:13"},"referencedDeclaration":3829,"src":"888:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_storage_ptr","typeString":"struct Card"}},"visibility":"internal"}],"id":3919,"initialValue":{"baseExpression":{"expression":{"id":3915,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"907:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck storage pointer"}},"id":3916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"cards","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"907:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Card_$3829_storage_$dyn_storage","typeString":"struct Card storage ref[] storage ref"}},"id":3918,"indexExpression":{"id":3917,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"918:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"907:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_storage","typeString":"struct Card storage ref"}},"nodeType":"VariableDeclarationStatement","src":"888:36:13"},{"expression":{"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3920,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"934:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck storage pointer"}},"id":3923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"cards","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"934:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Card_$3829_storage_$dyn_storage","typeString":"struct Card storage ref[] storage ref"}},"id":3924,"indexExpression":{"id":3922,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"945:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"934:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_storage","typeString":"struct Card storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":3925,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"954:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck storage pointer"}},"id":3926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"cards","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"954:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Card_$3829_storage_$dyn_storage","typeString":"struct Card storage ref[] storage ref"}},"id":3932,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3927,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"965:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck storage pointer"}},"id":3928,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"cards","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"965:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Card_$3829_storage_$dyn_storage","typeString":"struct Card storage ref[] storage ref"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"965:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"985:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"965:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"954:33:13","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_storage","typeString":"struct Card storage ref"}},"src":"934:53:13","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_storage","typeString":"struct Card storage ref"}},"id":3934,"nodeType":"ExpressionStatement","src":"934:53:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3935,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"997:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck storage pointer"}},"id":3938,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"cards","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"997:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Card_$3829_storage_$dyn_storage","typeString":"struct Card storage ref[] storage ref"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"997:14:13","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$_Card_$3829_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$_Card_$3829_storage_$dyn_storage_ptr_$","typeString":"function (struct Card storage ref[] storage pointer)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"997:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3941,"nodeType":"ExpressionStatement","src":"997:16:13"},{"expression":{"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1023:15:13","subExpression":{"expression":{"id":3942,"name":"deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"1023:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck storage pointer"}},"id":3944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"numCards","nodeType":"MemberAccess","referencedDeclaration":3835,"src":"1023:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3946,"nodeType":"ExpressionStatement","src":"1023:15:13"},{"expression":{"id":3947,"name":"card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"1055:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card memory"}},"functionReturnParameters":3895,"id":3948,"nodeType":"Return","src":"1048:11:13"}]},"id":3950,"implemented":true,"kind":"function","modifiers":[],"name":"drawCard","nameLocation":"694:8:13","nodeType":"FunctionDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"deck","nameLocation":"720:4:13","nodeType":"VariableDeclaration","scope":3950,"src":"703:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck"},"typeName":{"id":3889,"nodeType":"UserDefinedTypeName","pathNode":{"id":3888,"name":"CardDeck","nodeType":"IdentifierPath","referencedDeclaration":3836,"src":"703:8:13"},"referencedDeclaration":3836,"src":"703:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_CardDeck_$3836_storage_ptr","typeString":"struct CardDeck"}},"visibility":"internal"}],"src":"702:23:13"},"returnParameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3950,"src":"744:11:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_memory_ptr","typeString":"struct Card"},"typeName":{"id":3893,"nodeType":"UserDefinedTypeName","pathNode":{"id":3892,"name":"Card","nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"744:4:13"},"referencedDeclaration":3829,"src":"744:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$3829_storage_ptr","typeString":"struct Card"}},"visibility":"internal"}],"src":"743:13:13"},"scope":3971,"src":"685:381:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3969,"nodeType":"Block","src":"1302:137:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3961,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1383:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"difficulty","nodeType":"MemberAccess","src":"1383:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3963,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1401:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1401:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3959,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1366:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1366:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1366:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3958,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1356:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1356:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1331:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3956,"name":"uint256","nodeType":"ElementaryTypeName","src":"1331:7:13","typeDescriptions":{}}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:101:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3955,"id":3968,"nodeType":"Return","src":"1312:120:13"}]},"documentation":{"id":3951,"nodeType":"StructuredDocumentation","src":"1072:175:13","text":"@dev generates a pseudo random number - randomness would require an oracle\n https://stackoverflow.com/questions/48848948/how-to-generate-a-random-number-in-solidity"},"id":3970,"implemented":true,"kind":"function","modifiers":[],"name":"_random","nameLocation":"1261:7:13","nodeType":"FunctionDefinition","parameters":{"id":3952,"nodeType":"ParameterList","parameters":[],"src":"1268:2:13"},"returnParameters":{"id":3955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3970,"src":"1293:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1293:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1292:9:13"},"scope":3971,"src":"1252:187:13","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":3972,"src":"388:1053:13","usedErrors":[]}],"src":"45:1396:13"},"id":13},"contracts/ChipToken.sol":{"ast":{"absolutePath":"contracts/ChipToken.sol","exportedSymbols":{"AccessControl":[315],"ChipToken":[4042],"Context":[1108],"ERC165":[1361],"ERC20":[975],"IAccessControl":[388],"IERC165":[1373],"IERC20":[1053],"IERC20Metadata":[1078],"Math":[2239],"SignedMath":[2656],"Strings":[1337]},"id":4043,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3973,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":3974,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4043,"sourceUnit":976,"src":"57:55:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":3975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4043,"sourceUnit":316,"src":"113:58:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":3976,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4043,"sourceUnit":1109,"src":"172:51:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3978,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1108,"src":"324:7:14"},"id":3979,"nodeType":"InheritanceSpecifier","src":"324:7:14"},{"baseName":{"id":3980,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":315,"src":"333:13:14"},"id":3981,"nodeType":"InheritanceSpecifier","src":"333:13:14"},{"baseName":{"id":3982,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":975,"src":"348:5:14"},"id":3983,"nodeType":"InheritanceSpecifier","src":"348:5:14"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3977,"nodeType":"StructuredDocumentation","src":"225:77:14","text":"@title A ChipToken contract for use as in game currency in casino games."},"fullyImplemented":true,"id":4042,"linearizedBaseContracts":[4042,975,1078,1053,315,1361,1373,388,1108],"name":"ChipToken","nameLocation":"311:9:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":3988,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"384:11:14","nodeType":"VariableDeclaration","scope":4042,"src":"360:62:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"360:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"408:13:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":3985,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"398:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"398:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"206b60f9","id":3993,"mutability":"constant","name":"TRANSFER_ROLE","nameLocation":"452:13:14","nodeType":"VariableDeclaration","scope":4042,"src":"428:66:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"428:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5452414e534645525f524f4c45","id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"478:15:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c","typeString":"literal_string \"TRANSFER_ROLE\""},"value":"TRANSFER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c","typeString":"literal_string \"TRANSFER_ROLE\""}],"id":3990,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"468:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"468:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":4018,"nodeType":"Block","src":"537:157:14","statements":[{"expression":{"arguments":[{"id":4001,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"558:18:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4002,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"578:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"578:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4000,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"547:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"547:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4005,"nodeType":"ExpressionStatement","src":"547:44:14"},{"expression":{"arguments":[{"id":4007,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"612:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4008,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"625:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"625:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4006,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"601:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"601:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4011,"nodeType":"ExpressionStatement","src":"601:37:14"},{"expression":{"arguments":[{"id":4013,"name":"TRANSFER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"659:13:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4014,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"674:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"674:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4012,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"648:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"648:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4017,"nodeType":"ExpressionStatement","src":"648:39:14"}]},"id":4019,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"43686970","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"521:6:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_fddf3f64158106ef92615cb1c0d5c283f94a666029431f5a75bab039d4a65960","typeString":"literal_string \"Chip\""},"value":"Chip"},{"hexValue":"43484950","id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"529:6:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_38db9449fee8d050f353925ca203855b3283a78535c8c32468477bf240e5d69a","typeString":"literal_string \"CHIP\""},"value":"CHIP"}],"id":3998,"kind":"baseConstructorSpecifier","modifierName":{"id":3995,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":975,"src":"515:5:14"},"nodeType":"ModifierInvocation","src":"515:21:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3994,"nodeType":"ParameterList","parameters":[],"src":"512:2:14"},"returnParameters":{"id":3999,"nodeType":"ParameterList","parameters":[],"src":"537:0:14"},"scope":4042,"src":"501:193:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4040,"nodeType":"Block","src":"749:176:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":4028,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"788:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4029,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"801:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"801:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4027,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"780:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"780:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43686970546f6b656e3a206d7573742068617665206d696e74657220726f6c6520746f206d696e74206e65772063686970732e","id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"828:53:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_07ff70fd275540cbaf6ad370d0f20b4daf36515887b69565327b0f80c784907a","typeString":"literal_string \"ChipToken: must have minter role to mint new chips.\""},"value":"ChipToken: must have minter role to mint new chips."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_07ff70fd275540cbaf6ad370d0f20b4daf36515887b69565327b0f80c784907a","typeString":"literal_string \"ChipToken: must have minter role to mint new chips.\""}],"id":4026,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"759:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"759:132:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4034,"nodeType":"ExpressionStatement","src":"759:132:14"},{"expression":{"arguments":[{"id":4036,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"907:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4037,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"911:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4035,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"901:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"901:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4039,"nodeType":"ExpressionStatement","src":"901:17:14"}]},"functionSelector":"40c10f19","id":4041,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"709:4:14","nodeType":"FunctionDefinition","parameters":{"id":4024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4021,"mutability":"mutable","name":"to","nameLocation":"722:2:14","nodeType":"VariableDeclaration","scope":4041,"src":"714:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4020,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4023,"mutability":"mutable","name":"amount","nameLocation":"734:6:14","nodeType":"VariableDeclaration","scope":4041,"src":"726:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4022,"name":"uint256","nodeType":"ElementaryTypeName","src":"726:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"713:28:14"},"returnParameters":{"id":4025,"nodeType":"ParameterList","parameters":[],"src":"749:0:14"},"scope":4042,"src":"700:225:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":4043,"src":"302:625:14","usedErrors":[]}],"src":"32:895:14"},"id":14}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_433":{"entryPoint":null,"id":433,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":289,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":415,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":548,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":579,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":589,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":643,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":697,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":751,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":805,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":852,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":899,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":904,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":909,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":914,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":919,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:15","statements":[{"body":{"nodeType":"YulBlock","src":"102:326:15","statements":[{"nodeType":"YulAssignment","src":"112:75:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:15"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:15"},"nodeType":"YulFunctionCall","src":"137:49:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:15"},"nodeType":"YulFunctionCall","src":"121:66:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:15"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:15"},"nodeType":"YulFunctionCall","src":"196:21:15"},"nodeType":"YulExpressionStatement","src":"196:21:15"},{"nodeType":"YulVariableDeclaration","src":"226:27:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:15"},"nodeType":"YulFunctionCall","src":"237:16:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"293:77:15"},"nodeType":"YulFunctionCall","src":"293:79:15"},"nodeType":"YulExpressionStatement","src":"293:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:15"},"nodeType":"YulFunctionCall","src":"268:16:15"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:15"},"nodeType":"YulFunctionCall","src":"265:25:15"},"nodeType":"YulIf","src":"262:2:15"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"405:3:15"},{"name":"dst","nodeType":"YulIdentifier","src":"410:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"415:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"383:21:15"},"nodeType":"YulFunctionCall","src":"383:39:15"},"nodeType":"YulExpressionStatement","src":"383:39:15"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:15","type":""}],"src":"7:421:15"},{"body":{"nodeType":"YulBlock","src":"521:282:15","statements":[{"body":{"nodeType":"YulBlock","src":"570:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"572:77:15"},"nodeType":"YulFunctionCall","src":"572:79:15"},"nodeType":"YulExpressionStatement","src":"572:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"549:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"557:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"545:3:15"},"nodeType":"YulFunctionCall","src":"545:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"564:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"541:3:15"},"nodeType":"YulFunctionCall","src":"541:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"534:6:15"},"nodeType":"YulFunctionCall","src":"534:35:15"},"nodeType":"YulIf","src":"531:2:15"},{"nodeType":"YulVariableDeclaration","src":"662:27:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"682:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"676:5:15"},"nodeType":"YulFunctionCall","src":"676:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"666:6:15","type":""}]},{"nodeType":"YulAssignment","src":"698:99:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"770:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"778:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"766:3:15"},"nodeType":"YulFunctionCall","src":"766:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"793:3:15"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"707:58:15"},"nodeType":"YulFunctionCall","src":"707:90:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"698:5:15"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"499:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"507:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"515:5:15","type":""}],"src":"448:355:15"},{"body":{"nodeType":"YulBlock","src":"923:739:15","statements":[{"body":{"nodeType":"YulBlock","src":"969:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"971:77:15"},"nodeType":"YulFunctionCall","src":"971:79:15"},"nodeType":"YulExpressionStatement","src":"971:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"944:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"953:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"940:3:15"},"nodeType":"YulFunctionCall","src":"940:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"965:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"936:3:15"},"nodeType":"YulFunctionCall","src":"936:32:15"},"nodeType":"YulIf","src":"933:2:15"},{"nodeType":"YulBlock","src":"1062:291:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1077:38:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1101:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1112:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1097:3:15"},"nodeType":"YulFunctionCall","src":"1097:17:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1091:5:15"},"nodeType":"YulFunctionCall","src":"1091:24:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1081:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1162:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1164:77:15"},"nodeType":"YulFunctionCall","src":"1164:79:15"},"nodeType":"YulExpressionStatement","src":"1164:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1134:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1142:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1131:2:15"},"nodeType":"YulFunctionCall","src":"1131:30:15"},"nodeType":"YulIf","src":"1128:2:15"},{"nodeType":"YulAssignment","src":"1259:84:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1315:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1326:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:15"},"nodeType":"YulFunctionCall","src":"1311:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1335:7:15"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1269:41:15"},"nodeType":"YulFunctionCall","src":"1269:74:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1259:6:15"}]}]},{"nodeType":"YulBlock","src":"1363:292:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1378:39:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1402:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1413:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1398:3:15"},"nodeType":"YulFunctionCall","src":"1398:18:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1392:5:15"},"nodeType":"YulFunctionCall","src":"1392:25:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1382:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1464:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1466:77:15"},"nodeType":"YulFunctionCall","src":"1466:79:15"},"nodeType":"YulExpressionStatement","src":"1466:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1436:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1444:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1433:2:15"},"nodeType":"YulFunctionCall","src":"1433:30:15"},"nodeType":"YulIf","src":"1430:2:15"},{"nodeType":"YulAssignment","src":"1561:84:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1617:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1628:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1613:3:15"},"nodeType":"YulFunctionCall","src":"1613:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1637:7:15"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1571:41:15"},"nodeType":"YulFunctionCall","src":"1571:74:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1561:6:15"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"885:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"896:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"908:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"916:6:15","type":""}],"src":"809:853:15"},{"body":{"nodeType":"YulBlock","src":"1709:88:15","statements":[{"nodeType":"YulAssignment","src":"1719:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1729:18:15"},"nodeType":"YulFunctionCall","src":"1729:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1719:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1778:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"1786:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1758:19:15"},"nodeType":"YulFunctionCall","src":"1758:33:15"},"nodeType":"YulExpressionStatement","src":"1758:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1693:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1702:6:15","type":""}],"src":"1668:129:15"},{"body":{"nodeType":"YulBlock","src":"1843:35:15","statements":[{"nodeType":"YulAssignment","src":"1853:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1869:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1863:5:15"},"nodeType":"YulFunctionCall","src":"1863:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1853:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1836:6:15","type":""}],"src":"1803:75:15"},{"body":{"nodeType":"YulBlock","src":"1951:241:15","statements":[{"body":{"nodeType":"YulBlock","src":"2056:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2058:16:15"},"nodeType":"YulFunctionCall","src":"2058:18:15"},"nodeType":"YulExpressionStatement","src":"2058:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2028:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2036:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2025:2:15"},"nodeType":"YulFunctionCall","src":"2025:30:15"},"nodeType":"YulIf","src":"2022:2:15"},{"nodeType":"YulAssignment","src":"2088:37:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2118:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2096:21:15"},"nodeType":"YulFunctionCall","src":"2096:29:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2088:4:15"}]},{"nodeType":"YulAssignment","src":"2162:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2174:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"2180:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2170:3:15"},"nodeType":"YulFunctionCall","src":"2170:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2162:4:15"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1935:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1946:4:15","type":""}],"src":"1884:308:15"},{"body":{"nodeType":"YulBlock","src":"2247:258:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2257:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2266:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2261:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2326:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2351:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"2356:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:15"},"nodeType":"YulFunctionCall","src":"2347:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2370:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"2375:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2366:3:15"},"nodeType":"YulFunctionCall","src":"2366:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2360:5:15"},"nodeType":"YulFunctionCall","src":"2360:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2340:6:15"},"nodeType":"YulFunctionCall","src":"2340:39:15"},"nodeType":"YulExpressionStatement","src":"2340:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2287:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"2290:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2284:2:15"},"nodeType":"YulFunctionCall","src":"2284:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2298:19:15","statements":[{"nodeType":"YulAssignment","src":"2300:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2309:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"2312:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2305:3:15"},"nodeType":"YulFunctionCall","src":"2305:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2300:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"2280:3:15","statements":[]},"src":"2276:113:15"},{"body":{"nodeType":"YulBlock","src":"2423:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2473:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2478:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2469:3:15"},"nodeType":"YulFunctionCall","src":"2469:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"2487:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2462:6:15"},"nodeType":"YulFunctionCall","src":"2462:27:15"},"nodeType":"YulExpressionStatement","src":"2462:27:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2404:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"2407:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2401:2:15"},"nodeType":"YulFunctionCall","src":"2401:13:15"},"nodeType":"YulIf","src":"2398:2:15"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2229:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2234:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"2239:6:15","type":""}],"src":"2198:307:15"},{"body":{"nodeType":"YulBlock","src":"2562:269:15","statements":[{"nodeType":"YulAssignment","src":"2572:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2586:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"2592:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2582:3:15"},"nodeType":"YulFunctionCall","src":"2582:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2572:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"2603:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2633:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2629:3:15"},"nodeType":"YulFunctionCall","src":"2629:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2607:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"2680:51:15","statements":[{"nodeType":"YulAssignment","src":"2694:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2708:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2716:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2704:3:15"},"nodeType":"YulFunctionCall","src":"2704:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2694:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2660:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2653:6:15"},"nodeType":"YulFunctionCall","src":"2653:26:15"},"nodeType":"YulIf","src":"2650:2:15"},{"body":{"nodeType":"YulBlock","src":"2783:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2797:16:15"},"nodeType":"YulFunctionCall","src":"2797:18:15"},"nodeType":"YulExpressionStatement","src":"2797:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2747:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2770:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2778:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2767:2:15"},"nodeType":"YulFunctionCall","src":"2767:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2744:2:15"},"nodeType":"YulFunctionCall","src":"2744:38:15"},"nodeType":"YulIf","src":"2741:2:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2546:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2555:6:15","type":""}],"src":"2511:320:15"},{"body":{"nodeType":"YulBlock","src":"2880:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2890:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2912:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2942:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2920:21:15"},"nodeType":"YulFunctionCall","src":"2920:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2908:3:15"},"nodeType":"YulFunctionCall","src":"2908:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2894:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3059:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3061:16:15"},"nodeType":"YulFunctionCall","src":"3061:18:15"},"nodeType":"YulExpressionStatement","src":"3061:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3002:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"3014:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:15"},"nodeType":"YulFunctionCall","src":"2999:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3038:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3050:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3035:2:15"},"nodeType":"YulFunctionCall","src":"3035:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2996:2:15"},"nodeType":"YulFunctionCall","src":"2996:62:15"},"nodeType":"YulIf","src":"2993:2:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3097:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3101:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3090:6:15"},"nodeType":"YulFunctionCall","src":"3090:22:15"},"nodeType":"YulExpressionStatement","src":"3090:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2866:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"2874:4:15","type":""}],"src":"2837:281:15"},{"body":{"nodeType":"YulBlock","src":"3152:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3169:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3172:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3162:6:15"},"nodeType":"YulFunctionCall","src":"3162:88:15"},"nodeType":"YulExpressionStatement","src":"3162:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3266:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3269:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3259:6:15"},"nodeType":"YulFunctionCall","src":"3259:15:15"},"nodeType":"YulExpressionStatement","src":"3259:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3290:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3293:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3283:6:15"},"nodeType":"YulFunctionCall","src":"3283:15:15"},"nodeType":"YulExpressionStatement","src":"3283:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3124:180:15"},{"body":{"nodeType":"YulBlock","src":"3338:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3355:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3358:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3348:6:15"},"nodeType":"YulFunctionCall","src":"3348:88:15"},"nodeType":"YulExpressionStatement","src":"3348:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3452:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3455:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:15"},"nodeType":"YulFunctionCall","src":"3445:15:15"},"nodeType":"YulExpressionStatement","src":"3445:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3476:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3479:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3469:6:15"},"nodeType":"YulFunctionCall","src":"3469:15:15"},"nodeType":"YulExpressionStatement","src":"3469:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3310:180:15"},{"body":{"nodeType":"YulBlock","src":"3585:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3605:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3595:6:15"},"nodeType":"YulFunctionCall","src":"3595:12:15"},"nodeType":"YulExpressionStatement","src":"3595:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3496:117:15"},{"body":{"nodeType":"YulBlock","src":"3708:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3725:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3728:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3718:6:15"},"nodeType":"YulFunctionCall","src":"3718:12:15"},"nodeType":"YulExpressionStatement","src":"3718:12:15"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3619:117:15"},{"body":{"nodeType":"YulBlock","src":"3831:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3848:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3841:6:15"},"nodeType":"YulFunctionCall","src":"3841:12:15"},"nodeType":"YulExpressionStatement","src":"3841:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3742:117:15"},{"body":{"nodeType":"YulBlock","src":"3954:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3971:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3974:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3964:6:15"},"nodeType":"YulFunctionCall","src":"3964:12:15"},"nodeType":"YulExpressionStatement","src":"3964:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3865:117:15"},{"body":{"nodeType":"YulBlock","src":"4036:54:15","statements":[{"nodeType":"YulAssignment","src":"4046:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4064:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4071:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4060:3:15"},"nodeType":"YulFunctionCall","src":"4060:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4080:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4076:3:15"},"nodeType":"YulFunctionCall","src":"4076:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4056:3:15"},"nodeType":"YulFunctionCall","src":"4056:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4046:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4019:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4029:6:15","type":""}],"src":"3988:102:15"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620016173803806200161783398181016040528101906200003791906200019f565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a8565b8280546200007f90620002b9565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200024d565b62000224565b90508281526020810184848401111562000157576200015662000388565b5b6200016484828562000283565b509392505050565b600082601f83011262000184576200018362000383565b5b81516200019684826020860162000121565b91505092915050565b60008060408385031215620001b957620001b862000392565b5b600083015167ffffffffffffffff811115620001da57620001d96200038d565b5b620001e8858286016200016c565b925050602083015167ffffffffffffffff8111156200020c576200020b6200038d565b5b6200021a858286016200016c565b9150509250929050565b60006200023062000243565b90506200023e8282620002ef565b919050565b6000604051905090565b600067ffffffffffffffff8211156200026b576200026a62000354565b5b620002768262000397565b9050602081019050919050565b60005b83811015620002a357808201518184015260208101905062000286565b83811115620002b3576000848401525b50505050565b60006002820490506001821680620002d257607f821691505b60208210811415620002e957620002e862000325565b5b50919050565b620002fa8262000397565b810181811067ffffffffffffffff821117156200031c576200031b62000354565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61125f80620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d20565b60405180910390f35b6100e660048036038101906100e19190610b6a565b610308565b6040516100f39190610d05565b60405180910390f35b61010461032b565b6040516101119190610e22565b60405180910390f35b610134600480360381019061012f9190610b17565b610335565b6040516101419190610d05565b60405180910390f35b610152610364565b60405161015f9190610e3d565b60405180910390f35b610182600480360381019061017d9190610b6a565b61036d565b60405161018f9190610d05565b60405180910390f35b6101b260048036038101906101ad9190610aaa565b6103a4565b6040516101bf9190610e22565b60405180910390f35b6101d06103ec565b6040516101dd9190610d20565b60405180910390f35b61020060048036038101906101fb9190610b6a565b61047e565b60405161020d9190610d05565b60405180910390f35b610230600480360381019061022b9190610b6a565b6104f5565b60405161023d9190610d05565b60405180910390f35b610260600480360381019061025b9190610ad7565b610518565b60405161026d9190610e22565b60405180910390f35b60606003805461028590610f52565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f52565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610e74565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610f52565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610f52565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e02565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610de2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610d62565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610e22565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610d82565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610dc2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610d42565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610da2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610e22565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081359050610a8f816111fb565b92915050565b600081359050610aa481611212565b92915050565b600060208284031215610ac057610abf610fe2565b5b6000610ace84828501610a80565b91505092915050565b60008060408385031215610aee57610aed610fe2565b5b6000610afc85828601610a80565b9250506020610b0d85828601610a80565b9150509250929050565b600080600060608486031215610b3057610b2f610fe2565b5b6000610b3e86828701610a80565b9350506020610b4f86828701610a80565b9250506040610b6086828701610a95565b9150509250925092565b60008060408385031215610b8157610b80610fe2565b5b6000610b8f85828601610a80565b9250506020610ba085828601610a95565b9150509250929050565b610bb381610edc565b82525050565b6000610bc482610e58565b610bce8185610e63565b9350610bde818560208601610f1f565b610be781610fe7565b840191505092915050565b6000610bff602383610e63565b9150610c0a82610ff8565b604082019050919050565b6000610c22602283610e63565b9150610c2d82611047565b604082019050919050565b6000610c45601d83610e63565b9150610c5082611096565b602082019050919050565b6000610c68602683610e63565b9150610c73826110bf565b604082019050919050565b6000610c8b602583610e63565b9150610c968261110e565b604082019050919050565b6000610cae602483610e63565b9150610cb98261115d565b604082019050919050565b6000610cd1602583610e63565b9150610cdc826111ac565b604082019050919050565b610cf081610f08565b82525050565b610cff81610f12565b82525050565b6000602082019050610d1a6000830184610baa565b92915050565b60006020820190508181036000830152610d3a8184610bb9565b905092915050565b60006020820190508181036000830152610d5b81610bf2565b9050919050565b60006020820190508181036000830152610d7b81610c15565b9050919050565b60006020820190508181036000830152610d9b81610c38565b9050919050565b60006020820190508181036000830152610dbb81610c5b565b9050919050565b60006020820190508181036000830152610ddb81610c7e565b9050919050565b60006020820190508181036000830152610dfb81610ca1565b9050919050565b60006020820190508181036000830152610e1b81610cc4565b9050919050565b6000602082019050610e376000830184610ce7565b92915050565b6000602082019050610e526000830184610cf6565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7f82610f08565b9150610e8a83610f08565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ebf57610ebe610f84565b5b828201905092915050565b6000610ed582610ee8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f3d578082015181840152602081019050610f22565b83811115610f4c576000848401525b50505050565b60006002820490506001821680610f6a57607f821691505b60208210811415610f7e57610f7d610fb3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61120481610eca565b811461120f57600080fd5b50565b61121b81610f08565b811461122657600080fd5b5056fea2646970667358221220dc5dc02231b79c2a3415e2e5e626ef22321b9029b515b9226dfa5a05fd2eab3164736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1617 CODESIZE SUB DUP1 PUSH3 0x1617 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x2B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x24D JUMP JUMPDEST PUSH3 0x224 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x156 PUSH3 0x388 JUMP JUMPDEST JUMPDEST PUSH3 0x164 DUP5 DUP3 DUP6 PUSH3 0x283 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x184 JUMPI PUSH3 0x183 PUSH3 0x383 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x1E8 DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x21A DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x230 PUSH3 0x243 JUMP JUMPDEST SWAP1 POP PUSH3 0x23E DUP3 DUP3 PUSH3 0x2EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x354 JUMP JUMPDEST JUMPDEST PUSH3 0x276 DUP3 PUSH3 0x397 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x286 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E8 PUSH3 0x325 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x31C JUMPI PUSH3 0x31B PUSH3 0x354 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125F DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA8F DUP2 PUSH2 0x11FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAA4 DUP2 PUSH2 0x1212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xABF PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP5 DUP3 DUP6 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0D DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB2F PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB3E DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4F DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB60 DUP7 DUP3 DUP8 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8F DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA0 DUP6 DUP3 DUP7 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB3 DUP2 PUSH2 0xEDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC4 DUP3 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0xBCE DUP2 DUP6 PUSH2 0xE63 JUMP JUMPDEST SWAP4 POP PUSH2 0xBDE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF1F JUMP JUMPDEST PUSH2 0xBE7 DUP2 PUSH2 0xFE7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFF PUSH1 0x23 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC0A DUP3 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC22 PUSH1 0x22 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2D DUP3 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 PUSH1 0x1D DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC50 DUP3 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC68 PUSH1 0x26 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC73 DUP3 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC96 DUP3 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAE PUSH1 0x24 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB9 DUP3 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD1 PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCDC DUP3 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCFF DUP2 PUSH2 0xF12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3A DUP2 DUP5 PUSH2 0xBB9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD5B DUP2 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD7B DUP2 PUSH2 0xC15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD9B DUP2 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDBB DUP2 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDDB DUP2 PUSH2 0xC7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDFB DUP2 PUSH2 0xCA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1B DUP2 PUSH2 0xCC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7F DUP3 PUSH2 0xF08 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8A DUP4 PUSH2 0xF08 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xF84 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED5 DUP3 PUSH2 0xEE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF3D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF22 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF6A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0xFB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0xECA JUMP JUMPDEST DUP2 EQ PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x121B DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP2 EQ PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0x5D 0xC0 0x22 BALANCE 0xB7 SWAP13 0x2A CALLVALUE ISZERO 0xE2 0xE5 0xE6 0x26 0xEF 0x22 ORIGIN SHL SWAP1 0x29 0xB5 ISZERO 0xB9 0x22 PUSH14 0xFA5A05FD2EAB3164736F6C634300 ADDMOD MOD STOP CALLER ","sourceMap":"1532:11312:2:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:5;2046;:13;;;;;;;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;;;;;;;:::i;:::-;;1980:113;;1532:11312;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:15:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;293:79;;:::i;:::-;262:2;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:2;;572:79;;:::i;:::-;531:2;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:2;;;971:79;;:::i;:::-;933:2;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:2;;;1164:79;;:::i;:::-;1128:2;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:2;;;1466:79;;:::i;:::-;1430:2;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;923:739;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1709:88;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1843:35;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:2;;;2058:18;;:::i;:::-;2022:2;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1951:241;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:2;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:2;2247:258;;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:2;;2716:4;2708:6;2704:17;2694:27;;2650:2;2778;2770:6;2767:14;2747:18;2744:38;2741:2;;;2797:18;;:::i;:::-;2741:2;2562:269;;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:2;;;3061:18;;:::i;:::-;2993:2;3101:10;3097:2;3090:22;2880:238;;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;4036:54;;;:::o;1532:11312:2:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_974":{"entryPoint":2683,"id":974,"parameterSlots":3,"returnSlots":0},"@_approve_909":{"entryPoint":1447,"id":909,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_963":{"entryPoint":2678,"id":963,"parameterSlots":3,"returnSlots":0},"@_msgSender_1090":{"entryPoint":1439,"id":1090,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_952":{"entryPoint":1906,"id":952,"parameterSlots":3,"returnSlots":0},"@_transfer_735":{"entryPoint":2046,"id":735,"parameterSlots":3,"returnSlots":0},"@allowance_530":{"entryPoint":1304,"id":530,"parameterSlots":2,"returnSlots":1},"@approve_555":{"entryPoint":776,"id":555,"parameterSlots":2,"returnSlots":1},"@balanceOf_487":{"entryPoint":932,"id":487,"parameterSlots":1,"returnSlots":1},"@decimals_463":{"entryPoint":868,"id":463,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_658":{"entryPoint":1150,"id":658,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_617":{"entryPoint":877,"id":617,"parameterSlots":2,"returnSlots":1},"@name_443":{"entryPoint":630,"id":443,"parameterSlots":0,"returnSlots":1},"@symbol_453":{"entryPoint":1004,"id":453,"parameterSlots":0,"returnSlots":1},"@totalSupply_473":{"entryPoint":811,"id":473,"parameterSlots":0,"returnSlots":1},"@transferFrom_588":{"entryPoint":821,"id":588,"parameterSlots":3,"returnSlots":1},"@transfer_512":{"entryPoint":1269,"id":512,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2688,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2709,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2775,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2839,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2922,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2986,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3001,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":3058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3093,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":3128,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":3163,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":3198,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3233,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3268,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3303,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3318,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3394,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3426,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3458,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3490,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3522,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3554,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3586,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3618,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3645,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3672,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3683,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3700,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3786,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3804,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3816,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3848,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3858,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":3871,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3922,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3972,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4019,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4066,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4071,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4088,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":4167,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4246,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4287,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4366,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":4445,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":4524,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4603,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4626,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13861:15","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:15","statements":[{"nodeType":"YulAssignment","src":"69:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:15"},"nodeType":"YulFunctionCall","src":"78:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:15"},"nodeType":"YulFunctionCall","src":"107:33:15"},"nodeType":"YulExpressionStatement","src":"107:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:15","type":""}],"src":"7:139:15"},{"body":{"nodeType":"YulBlock","src":"204:87:15","statements":[{"nodeType":"YulAssignment","src":"214:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:15"},"nodeType":"YulFunctionCall","src":"223:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"252:26:15"},"nodeType":"YulFunctionCall","src":"252:33:15"},"nodeType":"YulExpressionStatement","src":"252:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:15","type":""}],"src":"152:139:15"},{"body":{"nodeType":"YulBlock","src":"363:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"409:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"411:77:15"},"nodeType":"YulFunctionCall","src":"411:79:15"},"nodeType":"YulExpressionStatement","src":"411:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"384:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"393:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"380:3:15"},"nodeType":"YulFunctionCall","src":"380:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"405:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"376:3:15"},"nodeType":"YulFunctionCall","src":"376:32:15"},"nodeType":"YulIf","src":"373:2:15"},{"nodeType":"YulBlock","src":"502:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"517:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"531:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"521:6:15","type":""}]},{"nodeType":"YulAssignment","src":"546:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"581:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"592:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"577:3:15"},"nodeType":"YulFunctionCall","src":"577:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"601:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"556:20:15"},"nodeType":"YulFunctionCall","src":"556:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"546:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"333:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"344:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"356:6:15","type":""}],"src":"297:329:15"},{"body":{"nodeType":"YulBlock","src":"715:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"761:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"763:77:15"},"nodeType":"YulFunctionCall","src":"763:79:15"},"nodeType":"YulExpressionStatement","src":"763:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"736:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"745:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"732:3:15"},"nodeType":"YulFunctionCall","src":"732:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"757:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"728:3:15"},"nodeType":"YulFunctionCall","src":"728:32:15"},"nodeType":"YulIf","src":"725:2:15"},{"nodeType":"YulBlock","src":"854:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"869:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"883:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"873:6:15","type":""}]},{"nodeType":"YulAssignment","src":"898:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"933:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"944:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"929:3:15"},"nodeType":"YulFunctionCall","src":"929:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"953:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"908:20:15"},"nodeType":"YulFunctionCall","src":"908:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"898:6:15"}]}]},{"nodeType":"YulBlock","src":"981:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"996:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1010:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1000:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1026:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1061:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1072:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1057:3:15"},"nodeType":"YulFunctionCall","src":"1057:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1081:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1036:20:15"},"nodeType":"YulFunctionCall","src":"1036:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1026:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"677:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"688:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"700:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"708:6:15","type":""}],"src":"632:474:15"},{"body":{"nodeType":"YulBlock","src":"1212:519:15","statements":[{"body":{"nodeType":"YulBlock","src":"1258:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1260:77:15"},"nodeType":"YulFunctionCall","src":"1260:79:15"},"nodeType":"YulExpressionStatement","src":"1260:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1233:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1242:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:15"},"nodeType":"YulFunctionCall","src":"1229:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1254:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1225:3:15"},"nodeType":"YulFunctionCall","src":"1225:32:15"},"nodeType":"YulIf","src":"1222:2:15"},{"nodeType":"YulBlock","src":"1351:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1366:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1380:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1370:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1395:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1430:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1441:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1426:3:15"},"nodeType":"YulFunctionCall","src":"1426:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1450:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1405:20:15"},"nodeType":"YulFunctionCall","src":"1405:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1395:6:15"}]}]},{"nodeType":"YulBlock","src":"1478:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1493:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1507:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1497:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1523:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1558:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1569:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1554:3:15"},"nodeType":"YulFunctionCall","src":"1554:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1578:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1533:20:15"},"nodeType":"YulFunctionCall","src":"1533:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1523:6:15"}]}]},{"nodeType":"YulBlock","src":"1606:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1621:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1635:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1625:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1651:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1697:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1682:3:15"},"nodeType":"YulFunctionCall","src":"1682:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1706:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1661:20:15"},"nodeType":"YulFunctionCall","src":"1661:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1651:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1166:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1177:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1189:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1197:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1205:6:15","type":""}],"src":"1112:619:15"},{"body":{"nodeType":"YulBlock","src":"1820:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"1866:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1868:77:15"},"nodeType":"YulFunctionCall","src":"1868:79:15"},"nodeType":"YulExpressionStatement","src":"1868:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1841:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1850:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1837:3:15"},"nodeType":"YulFunctionCall","src":"1837:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1862:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1833:3:15"},"nodeType":"YulFunctionCall","src":"1833:32:15"},"nodeType":"YulIf","src":"1830:2:15"},{"nodeType":"YulBlock","src":"1959:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1974:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1988:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1978:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2003:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2038:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2049:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2034:3:15"},"nodeType":"YulFunctionCall","src":"2034:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2058:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2013:20:15"},"nodeType":"YulFunctionCall","src":"2013:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2003:6:15"}]}]},{"nodeType":"YulBlock","src":"2086:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2101:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2115:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2105:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2131:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2166:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2177:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2162:3:15"},"nodeType":"YulFunctionCall","src":"2162:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2186:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2141:20:15"},"nodeType":"YulFunctionCall","src":"2141:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2131:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1782:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1793:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1805:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1813:6:15","type":""}],"src":"1737:474:15"},{"body":{"nodeType":"YulBlock","src":"2276:50:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2293:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2313:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2298:14:15"},"nodeType":"YulFunctionCall","src":"2298:21:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2286:6:15"},"nodeType":"YulFunctionCall","src":"2286:34:15"},"nodeType":"YulExpressionStatement","src":"2286:34:15"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2264:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2271:3:15","type":""}],"src":"2217:109:15"},{"body":{"nodeType":"YulBlock","src":"2424:272:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2434:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2481:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2448:32:15"},"nodeType":"YulFunctionCall","src":"2448:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2438:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2496:78:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2562:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2567:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2503:58:15"},"nodeType":"YulFunctionCall","src":"2503:71:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2496:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2609:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2616:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2605:3:15"},"nodeType":"YulFunctionCall","src":"2605:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"2623:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"2628:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2583:21:15"},"nodeType":"YulFunctionCall","src":"2583:52:15"},"nodeType":"YulExpressionStatement","src":"2583:52:15"},{"nodeType":"YulAssignment","src":"2644:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2655:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2682:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2660:21:15"},"nodeType":"YulFunctionCall","src":"2660:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2651:3:15"},"nodeType":"YulFunctionCall","src":"2651:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2644:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2405:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2412:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2420:3:15","type":""}],"src":"2332:364:15"},{"body":{"nodeType":"YulBlock","src":"2848:220:15","statements":[{"nodeType":"YulAssignment","src":"2858:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2924:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2929:2:15","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2865:58:15"},"nodeType":"YulFunctionCall","src":"2865:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2858:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3030:3:15"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"2941:88:15"},"nodeType":"YulFunctionCall","src":"2941:93:15"},"nodeType":"YulExpressionStatement","src":"2941:93:15"},{"nodeType":"YulAssignment","src":"3043:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3054:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3059:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3050:3:15"},"nodeType":"YulFunctionCall","src":"3050:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3043:3:15"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2836:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2844:3:15","type":""}],"src":"2702:366:15"},{"body":{"nodeType":"YulBlock","src":"3220:220:15","statements":[{"nodeType":"YulAssignment","src":"3230:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3296:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3301:2:15","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3237:58:15"},"nodeType":"YulFunctionCall","src":"3237:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3230:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3402:3:15"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"3313:88:15"},"nodeType":"YulFunctionCall","src":"3313:93:15"},"nodeType":"YulExpressionStatement","src":"3313:93:15"},{"nodeType":"YulAssignment","src":"3415:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3426:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3431:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3422:3:15"},"nodeType":"YulFunctionCall","src":"3422:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3415:3:15"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3208:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3216:3:15","type":""}],"src":"3074:366:15"},{"body":{"nodeType":"YulBlock","src":"3592:220:15","statements":[{"nodeType":"YulAssignment","src":"3602:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3668:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3673:2:15","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3609:58:15"},"nodeType":"YulFunctionCall","src":"3609:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3602:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3774:3:15"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"3685:88:15"},"nodeType":"YulFunctionCall","src":"3685:93:15"},"nodeType":"YulExpressionStatement","src":"3685:93:15"},{"nodeType":"YulAssignment","src":"3787:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3798:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3803:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3794:3:15"},"nodeType":"YulFunctionCall","src":"3794:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3787:3:15"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3580:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3588:3:15","type":""}],"src":"3446:366:15"},{"body":{"nodeType":"YulBlock","src":"3964:220:15","statements":[{"nodeType":"YulAssignment","src":"3974:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4040:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4045:2:15","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3981:58:15"},"nodeType":"YulFunctionCall","src":"3981:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3974:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4146:3:15"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"4057:88:15"},"nodeType":"YulFunctionCall","src":"4057:93:15"},"nodeType":"YulExpressionStatement","src":"4057:93:15"},{"nodeType":"YulAssignment","src":"4159:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4170:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4175:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4166:3:15"},"nodeType":"YulFunctionCall","src":"4166:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4159:3:15"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3952:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3960:3:15","type":""}],"src":"3818:366:15"},{"body":{"nodeType":"YulBlock","src":"4336:220:15","statements":[{"nodeType":"YulAssignment","src":"4346:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4412:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4417:2:15","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4353:58:15"},"nodeType":"YulFunctionCall","src":"4353:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4346:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4518:3:15"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"4429:88:15"},"nodeType":"YulFunctionCall","src":"4429:93:15"},"nodeType":"YulExpressionStatement","src":"4429:93:15"},{"nodeType":"YulAssignment","src":"4531:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4542:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4547:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4538:3:15"},"nodeType":"YulFunctionCall","src":"4538:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4531:3:15"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4324:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4332:3:15","type":""}],"src":"4190:366:15"},{"body":{"nodeType":"YulBlock","src":"4708:220:15","statements":[{"nodeType":"YulAssignment","src":"4718:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4784:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4789:2:15","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4725:58:15"},"nodeType":"YulFunctionCall","src":"4725:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4718:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4890:3:15"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"4801:88:15"},"nodeType":"YulFunctionCall","src":"4801:93:15"},"nodeType":"YulExpressionStatement","src":"4801:93:15"},{"nodeType":"YulAssignment","src":"4903:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4914:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4919:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4910:3:15"},"nodeType":"YulFunctionCall","src":"4910:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4903:3:15"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4696:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4704:3:15","type":""}],"src":"4562:366:15"},{"body":{"nodeType":"YulBlock","src":"5080:220:15","statements":[{"nodeType":"YulAssignment","src":"5090:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5156:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5161:2:15","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5097:58:15"},"nodeType":"YulFunctionCall","src":"5097:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5090:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5262:3:15"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"5173:88:15"},"nodeType":"YulFunctionCall","src":"5173:93:15"},"nodeType":"YulExpressionStatement","src":"5173:93:15"},{"nodeType":"YulAssignment","src":"5275:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5286:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5291:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5282:3:15"},"nodeType":"YulFunctionCall","src":"5282:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5275:3:15"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5068:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5076:3:15","type":""}],"src":"4934:366:15"},{"body":{"nodeType":"YulBlock","src":"5371:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5388:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5411:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5393:17:15"},"nodeType":"YulFunctionCall","src":"5393:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5381:6:15"},"nodeType":"YulFunctionCall","src":"5381:37:15"},"nodeType":"YulExpressionStatement","src":"5381:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5359:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5366:3:15","type":""}],"src":"5306:118:15"},{"body":{"nodeType":"YulBlock","src":"5491:51:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5508:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5529:5:15"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"5513:15:15"},"nodeType":"YulFunctionCall","src":"5513:22:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5501:6:15"},"nodeType":"YulFunctionCall","src":"5501:35:15"},"nodeType":"YulExpressionStatement","src":"5501:35:15"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5479:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5486:3:15","type":""}],"src":"5430:112:15"},{"body":{"nodeType":"YulBlock","src":"5640:118:15","statements":[{"nodeType":"YulAssignment","src":"5650:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5662:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5673:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5658:3:15"},"nodeType":"YulFunctionCall","src":"5658:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5650:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5724:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5737:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5748:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5733:3:15"},"nodeType":"YulFunctionCall","src":"5733:17:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5686:37:15"},"nodeType":"YulFunctionCall","src":"5686:65:15"},"nodeType":"YulExpressionStatement","src":"5686:65:15"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5612:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5624:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5635:4:15","type":""}],"src":"5548:210:15"},{"body":{"nodeType":"YulBlock","src":"5882:195:15","statements":[{"nodeType":"YulAssignment","src":"5892:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5904:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5915:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5900:3:15"},"nodeType":"YulFunctionCall","src":"5900:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5892:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5939:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5950:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5935:3:15"},"nodeType":"YulFunctionCall","src":"5935:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5958:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5964:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5954:3:15"},"nodeType":"YulFunctionCall","src":"5954:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5928:6:15"},"nodeType":"YulFunctionCall","src":"5928:47:15"},"nodeType":"YulExpressionStatement","src":"5928:47:15"},{"nodeType":"YulAssignment","src":"5984:86:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6056:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"6065:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5992:63:15"},"nodeType":"YulFunctionCall","src":"5992:78:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5984:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5854:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5866:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5877:4:15","type":""}],"src":"5764:313:15"},{"body":{"nodeType":"YulBlock","src":"6254:248:15","statements":[{"nodeType":"YulAssignment","src":"6264:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6276:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6287:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6272:3:15"},"nodeType":"YulFunctionCall","src":"6272:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6264:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6311:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6322:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6307:3:15"},"nodeType":"YulFunctionCall","src":"6307:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6330:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"6336:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6326:3:15"},"nodeType":"YulFunctionCall","src":"6326:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6300:6:15"},"nodeType":"YulFunctionCall","src":"6300:47:15"},"nodeType":"YulExpressionStatement","src":"6300:47:15"},{"nodeType":"YulAssignment","src":"6356:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6490:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6364:124:15"},"nodeType":"YulFunctionCall","src":"6364:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6356:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6234:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6249:4:15","type":""}],"src":"6083:419:15"},{"body":{"nodeType":"YulBlock","src":"6679:248:15","statements":[{"nodeType":"YulAssignment","src":"6689:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6701:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6712:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6697:3:15"},"nodeType":"YulFunctionCall","src":"6697:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6689:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6736:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6747:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6732:3:15"},"nodeType":"YulFunctionCall","src":"6732:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6755:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6751:3:15"},"nodeType":"YulFunctionCall","src":"6751:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6725:6:15"},"nodeType":"YulFunctionCall","src":"6725:47:15"},"nodeType":"YulExpressionStatement","src":"6725:47:15"},{"nodeType":"YulAssignment","src":"6781:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6915:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6789:124:15"},"nodeType":"YulFunctionCall","src":"6789:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6781:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6659:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6674:4:15","type":""}],"src":"6508:419:15"},{"body":{"nodeType":"YulBlock","src":"7104:248:15","statements":[{"nodeType":"YulAssignment","src":"7114:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7126:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7137:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7122:3:15"},"nodeType":"YulFunctionCall","src":"7122:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7114:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7161:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7172:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7157:3:15"},"nodeType":"YulFunctionCall","src":"7157:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7180:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7186:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7176:3:15"},"nodeType":"YulFunctionCall","src":"7176:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7150:6:15"},"nodeType":"YulFunctionCall","src":"7150:47:15"},"nodeType":"YulExpressionStatement","src":"7150:47:15"},{"nodeType":"YulAssignment","src":"7206:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7340:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7214:124:15"},"nodeType":"YulFunctionCall","src":"7214:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7206:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7084:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7099:4:15","type":""}],"src":"6933:419:15"},{"body":{"nodeType":"YulBlock","src":"7529:248:15","statements":[{"nodeType":"YulAssignment","src":"7539:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7551:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7562:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7547:3:15"},"nodeType":"YulFunctionCall","src":"7547:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7539:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7586:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7597:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7582:3:15"},"nodeType":"YulFunctionCall","src":"7582:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7605:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7611:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7601:3:15"},"nodeType":"YulFunctionCall","src":"7601:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7575:6:15"},"nodeType":"YulFunctionCall","src":"7575:47:15"},"nodeType":"YulExpressionStatement","src":"7575:47:15"},{"nodeType":"YulAssignment","src":"7631:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7765:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7639:124:15"},"nodeType":"YulFunctionCall","src":"7639:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7631:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7509:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7524:4:15","type":""}],"src":"7358:419:15"},{"body":{"nodeType":"YulBlock","src":"7954:248:15","statements":[{"nodeType":"YulAssignment","src":"7964:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7976:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7987:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7972:3:15"},"nodeType":"YulFunctionCall","src":"7972:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7964:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8011:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8022:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8007:3:15"},"nodeType":"YulFunctionCall","src":"8007:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8030:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"8036:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8026:3:15"},"nodeType":"YulFunctionCall","src":"8026:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8000:6:15"},"nodeType":"YulFunctionCall","src":"8000:47:15"},"nodeType":"YulExpressionStatement","src":"8000:47:15"},{"nodeType":"YulAssignment","src":"8056:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8190:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8064:124:15"},"nodeType":"YulFunctionCall","src":"8064:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8056:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7934:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7949:4:15","type":""}],"src":"7783:419:15"},{"body":{"nodeType":"YulBlock","src":"8379:248:15","statements":[{"nodeType":"YulAssignment","src":"8389:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8401:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8412:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8397:3:15"},"nodeType":"YulFunctionCall","src":"8397:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8389:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8436:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8447:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8432:3:15"},"nodeType":"YulFunctionCall","src":"8432:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8455:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"8461:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8451:3:15"},"nodeType":"YulFunctionCall","src":"8451:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8425:6:15"},"nodeType":"YulFunctionCall","src":"8425:47:15"},"nodeType":"YulExpressionStatement","src":"8425:47:15"},{"nodeType":"YulAssignment","src":"8481:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8615:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8489:124:15"},"nodeType":"YulFunctionCall","src":"8489:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8481:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8359:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8374:4:15","type":""}],"src":"8208:419:15"},{"body":{"nodeType":"YulBlock","src":"8804:248:15","statements":[{"nodeType":"YulAssignment","src":"8814:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8826:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8837:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8822:3:15"},"nodeType":"YulFunctionCall","src":"8822:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8814:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8861:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8872:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8857:3:15"},"nodeType":"YulFunctionCall","src":"8857:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8880:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"8886:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8876:3:15"},"nodeType":"YulFunctionCall","src":"8876:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8850:6:15"},"nodeType":"YulFunctionCall","src":"8850:47:15"},"nodeType":"YulExpressionStatement","src":"8850:47:15"},{"nodeType":"YulAssignment","src":"8906:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9040:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8914:124:15"},"nodeType":"YulFunctionCall","src":"8914:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8906:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8784:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8799:4:15","type":""}],"src":"8633:419:15"},{"body":{"nodeType":"YulBlock","src":"9156:124:15","statements":[{"nodeType":"YulAssignment","src":"9166:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9178:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9189:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9174:3:15"},"nodeType":"YulFunctionCall","src":"9174:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9166:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9246:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9259:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9270:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9255:3:15"},"nodeType":"YulFunctionCall","src":"9255:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9202:43:15"},"nodeType":"YulFunctionCall","src":"9202:71:15"},"nodeType":"YulExpressionStatement","src":"9202:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9128:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9140:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9151:4:15","type":""}],"src":"9058:222:15"},{"body":{"nodeType":"YulBlock","src":"9380:120:15","statements":[{"nodeType":"YulAssignment","src":"9390:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9402:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9413:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9398:3:15"},"nodeType":"YulFunctionCall","src":"9398:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9390:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9466:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9479:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9490:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9475:3:15"},"nodeType":"YulFunctionCall","src":"9475:17:15"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"9426:39:15"},"nodeType":"YulFunctionCall","src":"9426:67:15"},"nodeType":"YulExpressionStatement","src":"9426:67:15"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9352:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9364:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9375:4:15","type":""}],"src":"9286:214:15"},{"body":{"nodeType":"YulBlock","src":"9546:35:15","statements":[{"nodeType":"YulAssignment","src":"9556:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9572:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9566:5:15"},"nodeType":"YulFunctionCall","src":"9566:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9556:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"9539:6:15","type":""}],"src":"9506:75:15"},{"body":{"nodeType":"YulBlock","src":"9646:40:15","statements":[{"nodeType":"YulAssignment","src":"9657:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9673:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9667:5:15"},"nodeType":"YulFunctionCall","src":"9667:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9657:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9629:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9639:6:15","type":""}],"src":"9587:99:15"},{"body":{"nodeType":"YulBlock","src":"9788:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9805:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"9810:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9798:6:15"},"nodeType":"YulFunctionCall","src":"9798:19:15"},"nodeType":"YulExpressionStatement","src":"9798:19:15"},{"nodeType":"YulAssignment","src":"9826:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9845:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9850:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9841:3:15"},"nodeType":"YulFunctionCall","src":"9841:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9826:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9760:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"9765:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9776:11:15","type":""}],"src":"9692:169:15"},{"body":{"nodeType":"YulBlock","src":"9911:261:15","statements":[{"nodeType":"YulAssignment","src":"9921:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9944:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9926:17:15"},"nodeType":"YulFunctionCall","src":"9926:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9921:1:15"}]},{"nodeType":"YulAssignment","src":"9955:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9978:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9960:17:15"},"nodeType":"YulFunctionCall","src":"9960:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9955:1:15"}]},{"body":{"nodeType":"YulBlock","src":"10118:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10120:16:15"},"nodeType":"YulFunctionCall","src":"10120:18:15"},"nodeType":"YulExpressionStatement","src":"10120:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10039:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10046:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"10114:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10042:3:15"},"nodeType":"YulFunctionCall","src":"10042:74:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10036:2:15"},"nodeType":"YulFunctionCall","src":"10036:81:15"},"nodeType":"YulIf","src":"10033:2:15"},{"nodeType":"YulAssignment","src":"10150:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10161:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"10164:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10157:3:15"},"nodeType":"YulFunctionCall","src":"10157:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10150:3:15"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9898:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"9901:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9907:3:15","type":""}],"src":"9867:305:15"},{"body":{"nodeType":"YulBlock","src":"10223:51:15","statements":[{"nodeType":"YulAssignment","src":"10233:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10262:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10244:17:15"},"nodeType":"YulFunctionCall","src":"10244:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10233:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10205:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10215:7:15","type":""}],"src":"10178:96:15"},{"body":{"nodeType":"YulBlock","src":"10322:48:15","statements":[{"nodeType":"YulAssignment","src":"10332:32:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10357:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10350:6:15"},"nodeType":"YulFunctionCall","src":"10350:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10343:6:15"},"nodeType":"YulFunctionCall","src":"10343:21:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10332:7:15"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10304:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10314:7:15","type":""}],"src":"10280:90:15"},{"body":{"nodeType":"YulBlock","src":"10421:81:15","statements":[{"nodeType":"YulAssignment","src":"10431:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10446:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"10453:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10442:3:15"},"nodeType":"YulFunctionCall","src":"10442:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10431:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10403:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10413:7:15","type":""}],"src":"10376:126:15"},{"body":{"nodeType":"YulBlock","src":"10553:32:15","statements":[{"nodeType":"YulAssignment","src":"10563:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"10574:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10563:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10535:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10545:7:15","type":""}],"src":"10508:77:15"},{"body":{"nodeType":"YulBlock","src":"10634:43:15","statements":[{"nodeType":"YulAssignment","src":"10644:27:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10659:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"10666:4:15","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10655:3:15"},"nodeType":"YulFunctionCall","src":"10655:16:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10644:7:15"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10616:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10626:7:15","type":""}],"src":"10591:86:15"},{"body":{"nodeType":"YulBlock","src":"10732:258:15","statements":[{"nodeType":"YulVariableDeclaration","src":"10742:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"10751:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10746:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"10811:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10836:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"10841:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10832:3:15"},"nodeType":"YulFunctionCall","src":"10832:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10855:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"10860:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10851:3:15"},"nodeType":"YulFunctionCall","src":"10851:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10845:5:15"},"nodeType":"YulFunctionCall","src":"10845:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10825:6:15"},"nodeType":"YulFunctionCall","src":"10825:39:15"},"nodeType":"YulExpressionStatement","src":"10825:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10772:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"10775:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10769:2:15"},"nodeType":"YulFunctionCall","src":"10769:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10783:19:15","statements":[{"nodeType":"YulAssignment","src":"10785:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10794:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"10797:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10790:3:15"},"nodeType":"YulFunctionCall","src":"10790:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10785:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"10765:3:15","statements":[]},"src":"10761:113:15"},{"body":{"nodeType":"YulBlock","src":"10908:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10958:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"10963:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10954:3:15"},"nodeType":"YulFunctionCall","src":"10954:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"10972:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10947:6:15"},"nodeType":"YulFunctionCall","src":"10947:27:15"},"nodeType":"YulExpressionStatement","src":"10947:27:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10889:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"10892:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10886:2:15"},"nodeType":"YulFunctionCall","src":"10886:13:15"},"nodeType":"YulIf","src":"10883:2:15"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10714:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10719:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"10724:6:15","type":""}],"src":"10683:307:15"},{"body":{"nodeType":"YulBlock","src":"11047:269:15","statements":[{"nodeType":"YulAssignment","src":"11057:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11071:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"11077:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11067:3:15"},"nodeType":"YulFunctionCall","src":"11067:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11057:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"11088:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11118:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"11124:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11114:3:15"},"nodeType":"YulFunctionCall","src":"11114:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11092:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"11165:51:15","statements":[{"nodeType":"YulAssignment","src":"11179:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11193:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11201:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11189:3:15"},"nodeType":"YulFunctionCall","src":"11189:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11179:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11145:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11138:6:15"},"nodeType":"YulFunctionCall","src":"11138:26:15"},"nodeType":"YulIf","src":"11135:2:15"},{"body":{"nodeType":"YulBlock","src":"11268:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11282:16:15"},"nodeType":"YulFunctionCall","src":"11282:18:15"},"nodeType":"YulExpressionStatement","src":"11282:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11232:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11255:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11263:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11252:2:15"},"nodeType":"YulFunctionCall","src":"11252:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11229:2:15"},"nodeType":"YulFunctionCall","src":"11229:38:15"},"nodeType":"YulIf","src":"11226:2:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11031:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11040:6:15","type":""}],"src":"10996:320:15"},{"body":{"nodeType":"YulBlock","src":"11350:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11367:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11370:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11360:6:15"},"nodeType":"YulFunctionCall","src":"11360:88:15"},"nodeType":"YulExpressionStatement","src":"11360:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11464:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11467:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11457:6:15"},"nodeType":"YulFunctionCall","src":"11457:15:15"},"nodeType":"YulExpressionStatement","src":"11457:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11488:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11491:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11481:6:15"},"nodeType":"YulFunctionCall","src":"11481:15:15"},"nodeType":"YulExpressionStatement","src":"11481:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11322:180:15"},{"body":{"nodeType":"YulBlock","src":"11536:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11553:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11556:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11546:6:15"},"nodeType":"YulFunctionCall","src":"11546:88:15"},"nodeType":"YulExpressionStatement","src":"11546:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11650:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11653:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11643:6:15"},"nodeType":"YulFunctionCall","src":"11643:15:15"},"nodeType":"YulExpressionStatement","src":"11643:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11674:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11677:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11667:6:15"},"nodeType":"YulFunctionCall","src":"11667:15:15"},"nodeType":"YulExpressionStatement","src":"11667:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"11508:180:15"},{"body":{"nodeType":"YulBlock","src":"11783:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11800:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11803:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11793:6:15"},"nodeType":"YulFunctionCall","src":"11793:12:15"},"nodeType":"YulExpressionStatement","src":"11793:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"11694:117:15"},{"body":{"nodeType":"YulBlock","src":"11906:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11923:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11926:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11916:6:15"},"nodeType":"YulFunctionCall","src":"11916:12:15"},"nodeType":"YulExpressionStatement","src":"11916:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"11817:117:15"},{"body":{"nodeType":"YulBlock","src":"11988:54:15","statements":[{"nodeType":"YulAssignment","src":"11998:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12016:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"12023:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12012:3:15"},"nodeType":"YulFunctionCall","src":"12012:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12032:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12028:3:15"},"nodeType":"YulFunctionCall","src":"12028:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12008:3:15"},"nodeType":"YulFunctionCall","src":"12008:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11998:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11971:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11981:6:15","type":""}],"src":"11940:102:15"},{"body":{"nodeType":"YulBlock","src":"12154:116:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12176:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"12184:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12172:3:15"},"nodeType":"YulFunctionCall","src":"12172:14:15"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"12188:34:15","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12165:6:15"},"nodeType":"YulFunctionCall","src":"12165:58:15"},"nodeType":"YulExpressionStatement","src":"12165:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12244:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"12252:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12240:3:15"},"nodeType":"YulFunctionCall","src":"12240:15:15"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"12257:5:15","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12233:6:15"},"nodeType":"YulFunctionCall","src":"12233:30:15"},"nodeType":"YulExpressionStatement","src":"12233:30:15"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12146:6:15","type":""}],"src":"12048:222:15"},{"body":{"nodeType":"YulBlock","src":"12382:115:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12404:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"12412:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12400:3:15"},"nodeType":"YulFunctionCall","src":"12400:14:15"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"12416:34:15","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12393:6:15"},"nodeType":"YulFunctionCall","src":"12393:58:15"},"nodeType":"YulExpressionStatement","src":"12393:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12472:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"12480:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12468:3:15"},"nodeType":"YulFunctionCall","src":"12468:15:15"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"12485:4:15","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12461:6:15"},"nodeType":"YulFunctionCall","src":"12461:29:15"},"nodeType":"YulExpressionStatement","src":"12461:29:15"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12374:6:15","type":""}],"src":"12276:221:15"},{"body":{"nodeType":"YulBlock","src":"12609:73:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12631:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"12639:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12627:3:15"},"nodeType":"YulFunctionCall","src":"12627:14:15"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"12643:31:15","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12620:6:15"},"nodeType":"YulFunctionCall","src":"12620:55:15"},"nodeType":"YulExpressionStatement","src":"12620:55:15"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12601:6:15","type":""}],"src":"12503:179:15"},{"body":{"nodeType":"YulBlock","src":"12794:119:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12816:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"12824:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12812:3:15"},"nodeType":"YulFunctionCall","src":"12812:14:15"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12828:34:15","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12805:6:15"},"nodeType":"YulFunctionCall","src":"12805:58:15"},"nodeType":"YulExpressionStatement","src":"12805:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12884:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"12892:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12880:3:15"},"nodeType":"YulFunctionCall","src":"12880:15:15"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12897:8:15","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12873:6:15"},"nodeType":"YulFunctionCall","src":"12873:33:15"},"nodeType":"YulExpressionStatement","src":"12873:33:15"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12786:6:15","type":""}],"src":"12688:225:15"},{"body":{"nodeType":"YulBlock","src":"13025:118:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13047:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"13055:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13043:3:15"},"nodeType":"YulFunctionCall","src":"13043:14:15"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"13059:34:15","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13036:6:15"},"nodeType":"YulFunctionCall","src":"13036:58:15"},"nodeType":"YulExpressionStatement","src":"13036:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13115:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"13123:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13111:3:15"},"nodeType":"YulFunctionCall","src":"13111:15:15"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"13128:7:15","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13104:6:15"},"nodeType":"YulFunctionCall","src":"13104:32:15"},"nodeType":"YulExpressionStatement","src":"13104:32:15"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13017:6:15","type":""}],"src":"12919:224:15"},{"body":{"nodeType":"YulBlock","src":"13255:117:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13277:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"13285:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13273:3:15"},"nodeType":"YulFunctionCall","src":"13273:14:15"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"13289:34:15","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13266:6:15"},"nodeType":"YulFunctionCall","src":"13266:58:15"},"nodeType":"YulExpressionStatement","src":"13266:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13345:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"13353:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13341:3:15"},"nodeType":"YulFunctionCall","src":"13341:15:15"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"13358:6:15","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13334:6:15"},"nodeType":"YulFunctionCall","src":"13334:31:15"},"nodeType":"YulExpressionStatement","src":"13334:31:15"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13247:6:15","type":""}],"src":"13149:223:15"},{"body":{"nodeType":"YulBlock","src":"13484:118:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13506:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"13514:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13502:3:15"},"nodeType":"YulFunctionCall","src":"13502:14:15"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"13518:34:15","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13495:6:15"},"nodeType":"YulFunctionCall","src":"13495:58:15"},"nodeType":"YulExpressionStatement","src":"13495:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13574:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"13582:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13570:3:15"},"nodeType":"YulFunctionCall","src":"13570:15:15"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"13587:7:15","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13563:6:15"},"nodeType":"YulFunctionCall","src":"13563:32:15"},"nodeType":"YulExpressionStatement","src":"13563:32:15"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13476:6:15","type":""}],"src":"13378:224:15"},{"body":{"nodeType":"YulBlock","src":"13651:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"13708:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13717:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13720:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13710:6:15"},"nodeType":"YulFunctionCall","src":"13710:12:15"},"nodeType":"YulExpressionStatement","src":"13710:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13674:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13699:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"13681:17:15"},"nodeType":"YulFunctionCall","src":"13681:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13671:2:15"},"nodeType":"YulFunctionCall","src":"13671:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13664:6:15"},"nodeType":"YulFunctionCall","src":"13664:43:15"},"nodeType":"YulIf","src":"13661:2:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13644:5:15","type":""}],"src":"13608:122:15"},{"body":{"nodeType":"YulBlock","src":"13779:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"13836:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13845:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13848:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13838:6:15"},"nodeType":"YulFunctionCall","src":"13838:12:15"},"nodeType":"YulExpressionStatement","src":"13838:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13802:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13827:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13809:17:15"},"nodeType":"YulFunctionCall","src":"13809:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13799:2:15"},"nodeType":"YulFunctionCall","src":"13799:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13792:6:15"},"nodeType":"YulFunctionCall","src":"13792:43:15"},"nodeType":"YulIf","src":"13789:2:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13772:5:15","type":""}],"src":"13736:122:15"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d20565b60405180910390f35b6100e660048036038101906100e19190610b6a565b610308565b6040516100f39190610d05565b60405180910390f35b61010461032b565b6040516101119190610e22565b60405180910390f35b610134600480360381019061012f9190610b17565b610335565b6040516101419190610d05565b60405180910390f35b610152610364565b60405161015f9190610e3d565b60405180910390f35b610182600480360381019061017d9190610b6a565b61036d565b60405161018f9190610d05565b60405180910390f35b6101b260048036038101906101ad9190610aaa565b6103a4565b6040516101bf9190610e22565b60405180910390f35b6101d06103ec565b6040516101dd9190610d20565b60405180910390f35b61020060048036038101906101fb9190610b6a565b61047e565b60405161020d9190610d05565b60405180910390f35b610230600480360381019061022b9190610b6a565b6104f5565b60405161023d9190610d05565b60405180910390f35b610260600480360381019061025b9190610ad7565b610518565b60405161026d9190610e22565b60405180910390f35b60606003805461028590610f52565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f52565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610e74565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610f52565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610f52565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e02565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610de2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610d62565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610e22565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610d82565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610dc2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610d42565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610da2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610e22565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081359050610a8f816111fb565b92915050565b600081359050610aa481611212565b92915050565b600060208284031215610ac057610abf610fe2565b5b6000610ace84828501610a80565b91505092915050565b60008060408385031215610aee57610aed610fe2565b5b6000610afc85828601610a80565b9250506020610b0d85828601610a80565b9150509250929050565b600080600060608486031215610b3057610b2f610fe2565b5b6000610b3e86828701610a80565b9350506020610b4f86828701610a80565b9250506040610b6086828701610a95565b9150509250925092565b60008060408385031215610b8157610b80610fe2565b5b6000610b8f85828601610a80565b9250506020610ba085828601610a95565b9150509250929050565b610bb381610edc565b82525050565b6000610bc482610e58565b610bce8185610e63565b9350610bde818560208601610f1f565b610be781610fe7565b840191505092915050565b6000610bff602383610e63565b9150610c0a82610ff8565b604082019050919050565b6000610c22602283610e63565b9150610c2d82611047565b604082019050919050565b6000610c45601d83610e63565b9150610c5082611096565b602082019050919050565b6000610c68602683610e63565b9150610c73826110bf565b604082019050919050565b6000610c8b602583610e63565b9150610c968261110e565b604082019050919050565b6000610cae602483610e63565b9150610cb98261115d565b604082019050919050565b6000610cd1602583610e63565b9150610cdc826111ac565b604082019050919050565b610cf081610f08565b82525050565b610cff81610f12565b82525050565b6000602082019050610d1a6000830184610baa565b92915050565b60006020820190508181036000830152610d3a8184610bb9565b905092915050565b60006020820190508181036000830152610d5b81610bf2565b9050919050565b60006020820190508181036000830152610d7b81610c15565b9050919050565b60006020820190508181036000830152610d9b81610c38565b9050919050565b60006020820190508181036000830152610dbb81610c5b565b9050919050565b60006020820190508181036000830152610ddb81610c7e565b9050919050565b60006020820190508181036000830152610dfb81610ca1565b9050919050565b60006020820190508181036000830152610e1b81610cc4565b9050919050565b6000602082019050610e376000830184610ce7565b92915050565b6000602082019050610e526000830184610cf6565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7f82610f08565b9150610e8a83610f08565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ebf57610ebe610f84565b5b828201905092915050565b6000610ed582610ee8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f3d578082015181840152602081019050610f22565b83811115610f4c576000848401525b50505050565b60006002820490506001821680610f6a57607f821691505b60208210811415610f7e57610f7d610fb3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61120481610eca565b811461120f57600080fd5b50565b61121b81610f08565b811461122657600080fd5b5056fea2646970667358221220dc5dc02231b79c2a3415e2e5e626ef22321b9029b515b9226dfa5a05fd2eab3164736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA8F DUP2 PUSH2 0x11FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAA4 DUP2 PUSH2 0x1212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xABF PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP5 DUP3 DUP6 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0D DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB2F PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB3E DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4F DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB60 DUP7 DUP3 DUP8 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8F DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA0 DUP6 DUP3 DUP7 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB3 DUP2 PUSH2 0xEDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC4 DUP3 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0xBCE DUP2 DUP6 PUSH2 0xE63 JUMP JUMPDEST SWAP4 POP PUSH2 0xBDE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF1F JUMP JUMPDEST PUSH2 0xBE7 DUP2 PUSH2 0xFE7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFF PUSH1 0x23 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC0A DUP3 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC22 PUSH1 0x22 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2D DUP3 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 PUSH1 0x1D DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC50 DUP3 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC68 PUSH1 0x26 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC73 DUP3 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC96 DUP3 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAE PUSH1 0x24 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB9 DUP3 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD1 PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCDC DUP3 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCFF DUP2 PUSH2 0xF12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3A DUP2 DUP5 PUSH2 0xBB9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD5B DUP2 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD7B DUP2 PUSH2 0xC15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD9B DUP2 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDBB DUP2 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDDB DUP2 PUSH2 0xC7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDFB DUP2 PUSH2 0xCA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1B DUP2 PUSH2 0xCC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7F DUP3 PUSH2 0xF08 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8A DUP4 PUSH2 0xF08 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xF84 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED5 DUP3 PUSH2 0xEE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF3D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF22 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF6A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0xFB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0xECA JUMP JUMPDEST DUP2 EQ PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x121B DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP2 EQ PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0x5D 0xC0 0x22 BALANCE 0xB7 SWAP13 0x2A CALLVALUE ISZERO 0xE2 0xE5 0xE6 0x26 0xEF 0x22 ORIGIN SHL SWAP1 0x29 0xB5 ISZERO 0xB9 0x22 PUSH14 0xFA5A05FD2EAB3164736F6C634300 ADDMOD MOD STOP CALLER ","sourceMap":"1532:11312:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;655:96:5:-;708:7;734:10;727:17;;655:96;:::o;10457:340:2:-;10575:1;10558:19;;:5;:19;;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:139:15:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;411:79;;:::i;:::-;373:2;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;363:263;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:2;;;763:79;;:::i;:::-;725:2;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;715:391;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:2;;;1260:79;;:::i;:::-;1222:2;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1212:519;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:2;;;1868:79;;:::i;:::-;1830:2;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1820:391;;;;;:::o;2217:109::-;2298:21;2313:5;2298:21;:::i;:::-;2293:3;2286:34;2276:50;;:::o;2332:364::-;2420:3;2448:39;2481:5;2448:39;:::i;:::-;2503:71;2567:6;2562:3;2503:71;:::i;:::-;2496:78;;2583:52;2628:6;2623:3;2616:4;2609:5;2605:16;2583:52;:::i;:::-;2660:29;2682:6;2660:29;:::i;:::-;2655:3;2651:39;2644:46;;2424:272;;;;;:::o;2702:366::-;2844:3;2865:67;2929:2;2924:3;2865:67;:::i;:::-;2858:74;;2941:93;3030:3;2941:93;:::i;:::-;3059:2;3054:3;3050:12;3043:19;;2848:220;;;:::o;3074:366::-;3216:3;3237:67;3301:2;3296:3;3237:67;:::i;:::-;3230:74;;3313:93;3402:3;3313:93;:::i;:::-;3431:2;3426:3;3422:12;3415:19;;3220:220;;;:::o;3446:366::-;3588:3;3609:67;3673:2;3668:3;3609:67;:::i;:::-;3602:74;;3685:93;3774:3;3685:93;:::i;:::-;3803:2;3798:3;3794:12;3787:19;;3592:220;;;:::o;3818:366::-;3960:3;3981:67;4045:2;4040:3;3981:67;:::i;:::-;3974:74;;4057:93;4146:3;4057:93;:::i;:::-;4175:2;4170:3;4166:12;4159:19;;3964:220;;;:::o;4190:366::-;4332:3;4353:67;4417:2;4412:3;4353:67;:::i;:::-;4346:74;;4429:93;4518:3;4429:93;:::i;:::-;4547:2;4542:3;4538:12;4531:19;;4336:220;;;:::o;4562:366::-;4704:3;4725:67;4789:2;4784:3;4725:67;:::i;:::-;4718:74;;4801:93;4890:3;4801:93;:::i;:::-;4919:2;4914:3;4910:12;4903:19;;4708:220;;;:::o;4934:366::-;5076:3;5097:67;5161:2;5156:3;5097:67;:::i;:::-;5090:74;;5173:93;5262:3;5173:93;:::i;:::-;5291:2;5286:3;5282:12;5275:19;;5080:220;;;:::o;5306:118::-;5393:24;5411:5;5393:24;:::i;:::-;5388:3;5381:37;5371:53;;:::o;5430:112::-;5513:22;5529:5;5513:22;:::i;:::-;5508:3;5501:35;5491:51;;:::o;5548:210::-;5635:4;5673:2;5662:9;5658:18;5650:26;;5686:65;5748:1;5737:9;5733:17;5724:6;5686:65;:::i;:::-;5640:118;;;;:::o;5764:313::-;5877:4;5915:2;5904:9;5900:18;5892:26;;5964:9;5958:4;5954:20;5950:1;5939:9;5935:17;5928:47;5992:78;6065:4;6056:6;5992:78;:::i;:::-;5984:86;;5882:195;;;;:::o;6083:419::-;6249:4;6287:2;6276:9;6272:18;6264:26;;6336:9;6330:4;6326:20;6322:1;6311:9;6307:17;6300:47;6364:131;6490:4;6364:131;:::i;:::-;6356:139;;6254:248;;;:::o;6508:419::-;6674:4;6712:2;6701:9;6697:18;6689:26;;6761:9;6755:4;6751:20;6747:1;6736:9;6732:17;6725:47;6789:131;6915:4;6789:131;:::i;:::-;6781:139;;6679:248;;;:::o;6933:419::-;7099:4;7137:2;7126:9;7122:18;7114:26;;7186:9;7180:4;7176:20;7172:1;7161:9;7157:17;7150:47;7214:131;7340:4;7214:131;:::i;:::-;7206:139;;7104:248;;;:::o;7358:419::-;7524:4;7562:2;7551:9;7547:18;7539:26;;7611:9;7605:4;7601:20;7597:1;7586:9;7582:17;7575:47;7639:131;7765:4;7639:131;:::i;:::-;7631:139;;7529:248;;;:::o;7783:419::-;7949:4;7987:2;7976:9;7972:18;7964:26;;8036:9;8030:4;8026:20;8022:1;8011:9;8007:17;8000:47;8064:131;8190:4;8064:131;:::i;:::-;8056:139;;7954:248;;;:::o;8208:419::-;8374:4;8412:2;8401:9;8397:18;8389:26;;8461:9;8455:4;8451:20;8447:1;8436:9;8432:17;8425:47;8489:131;8615:4;8489:131;:::i;:::-;8481:139;;8379:248;;;:::o;8633:419::-;8799:4;8837:2;8826:9;8822:18;8814:26;;8886:9;8880:4;8876:20;8872:1;8861:9;8857:17;8850:47;8914:131;9040:4;8914:131;:::i;:::-;8906:139;;8804:248;;;:::o;9058:222::-;9151:4;9189:2;9178:9;9174:18;9166:26;;9202:71;9270:1;9259:9;9255:17;9246:6;9202:71;:::i;:::-;9156:124;;;;:::o;9286:214::-;9375:4;9413:2;9402:9;9398:18;9390:26;;9426:67;9490:1;9479:9;9475:17;9466:6;9426:67;:::i;:::-;9380:120;;;;:::o;9587:99::-;9639:6;9673:5;9667:12;9657:22;;9646:40;;;:::o;9692:169::-;9776:11;9810:6;9805:3;9798:19;9850:4;9845:3;9841:14;9826:29;;9788:73;;;;:::o;9867:305::-;9907:3;9926:20;9944:1;9926:20;:::i;:::-;9921:25;;9960:20;9978:1;9960:20;:::i;:::-;9955:25;;10114:1;10046:66;10042:74;10039:1;10036:81;10033:2;;;10120:18;;:::i;:::-;10033:2;10164:1;10161;10157:9;10150:16;;9911:261;;;;:::o;10178:96::-;10215:7;10244:24;10262:5;10244:24;:::i;:::-;10233:35;;10223:51;;;:::o;10280:90::-;10314:7;10357:5;10350:13;10343:21;10332:32;;10322:48;;;:::o;10376:126::-;10413:7;10453:42;10446:5;10442:54;10431:65;;10421:81;;;:::o;10508:77::-;10545:7;10574:5;10563:16;;10553:32;;;:::o;10591:86::-;10626:7;10666:4;10659:5;10655:16;10644:27;;10634:43;;;:::o;10683:307::-;10751:1;10761:113;10775:6;10772:1;10769:13;10761:113;;;10860:1;10855:3;10851:11;10845:18;10841:1;10836:3;10832:11;10825:39;10797:2;10794:1;10790:10;10785:15;;10761:113;;;10892:6;10889:1;10886:13;10883:2;;;10972:1;10963:6;10958:3;10954:16;10947:27;10883:2;10732:258;;;;:::o;10996:320::-;11040:6;11077:1;11071:4;11067:12;11057:22;;11124:1;11118:4;11114:12;11145:18;11135:2;;11201:4;11193:6;11189:17;11179:27;;11135:2;11263;11255:6;11252:14;11232:18;11229:38;11226:2;;;11282:18;;:::i;:::-;11226:2;11047:269;;;;:::o;11322:180::-;11370:77;11367:1;11360:88;11467:4;11464:1;11457:15;11491:4;11488:1;11481:15;11508:180;11556:77;11553:1;11546:88;11653:4;11650:1;11643:15;11677:4;11674:1;11667:15;11817:117;11926:1;11923;11916:12;11940:102;11981:6;12032:2;12028:7;12023:2;12016:5;12012:14;12008:28;11998:38;;11988:54;;;:::o;12048:222::-;12188:34;12184:1;12176:6;12172:14;12165:58;12257:5;12252:2;12244:6;12240:15;12233:30;12154:116;:::o;12276:221::-;12416:34;12412:1;12404:6;12400:14;12393:58;12485:4;12480:2;12472:6;12468:15;12461:29;12382:115;:::o;12503:179::-;12643:31;12639:1;12631:6;12627:14;12620:55;12609:73;:::o;12688:225::-;12828:34;12824:1;12816:6;12812:14;12805:58;12897:8;12892:2;12884:6;12880:15;12873:33;12794:119;:::o;12919:224::-;13059:34;13055:1;13047:6;13043:14;13036:58;13128:7;13123:2;13115:6;13111:15;13104:32;13025:118;:::o;13149:223::-;13289:34;13285:1;13277:6;13273:14;13266:58;13358:6;13353:2;13345:6;13341:15;13334:31;13255:117;:::o;13378:224::-;13518:34;13514:1;13506:6;13502:14;13495:58;13587:7;13582:2;13574:6;13570:15;13563:32;13484:118;:::o;13608:122::-;13681:24;13699:5;13681:24;:::i;:::-;13674:5;13671:35;13661:2;;13720:1;13717;13710:12;13661:2;13651:79;:::o;13736:122::-;13809:24;13827:5;13809:24;:::i;:::-;13802:5;13799:35;13789:2;;13848:1;13845;13838:12;13789:2;13779:79;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122034d50b371bc8deecc8bec25f6b501f153faf34949d606951b19225ab506a787264736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xD5 SIGNEXTEND CALLDATACOPY SHL 0xC8 0xDE 0xEC 0xC8 0xBE 0xC2 0x5F PUSH12 0x501F153FAF34949D606951B1 SWAP3 0x25 0xAB POP PUSH11 0x787264736F6C6343000806 STOP CALLER ","sourceMap":"220:2559:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122034d50b371bc8deecc8bec25f6b501f153faf34949d606951b19225ab506a787264736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xD5 SIGNEXTEND CALLDATACOPY SHL 0xC8 0xDE 0xEC 0xC8 0xBE 0xC2 0x5F PUSH12 0x501F153FAF34949D606951B1 SWAP3 0x25 0xAB POP PUSH11 0x787264736F6C6343000806 STOP CALLER ","sourceMap":"220:2559:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220419dc9b4904dce6255bec15ed2cd52c2ae7775d6287313590cce8643075b5b6f64736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE SWAP14 0xC9 0xB4 SWAP1 0x4D 0xCE PUSH3 0x55BEC1 0x5E 0xD2 0xCD MSTORE 0xC2 0xAE PUSH24 0x75D6287313590CCE8643075B5B6F64736F6C634300080600 CALLER ","sourceMap":"202:12582:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220419dc9b4904dce6255bec15ed2cd52c2ae7775d6287313590cce8643075b5b6f64736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE SWAP14 0xC9 0xB4 SWAP1 0x4D 0xCE PUSH3 0x55BEC1 0x5E 0xD2 0xCD MSTORE 0xC2 0xAE PUSH24 0x75D6287313590CCE8643075B5B6F64736F6C634300080600 CALLER ","sourceMap":"202:12582:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122029c4d78935edd2d26684d0d4a02a744dac4bec2aeb98c2e685e98036400de73264736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xC4 0xD7 DUP10 CALLDATALOAD 0xED 0xD2 0xD2 PUSH7 0x84D0D4A02A744D 0xAC 0x4B 0xEC 0x2A 0xEB SWAP9 0xC2 0xE6 DUP6 0xE9 DUP1 CALLDATASIZE BLOCKHASH 0xD 0xE7 ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"482:6210:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122029c4d78935edd2d26684d0d4a02a744dac4bec2aeb98c2e685e98036400de73264736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xC4 0xD7 DUP10 CALLDATALOAD 0xED 0xD2 0xD2 PUSH7 0x84D0D4A02A744D 0xAC 0x4B 0xEC 0x2A 0xEB SWAP9 0xC2 0xE6 DUP6 0xE9 DUP1 CALLDATASIZE BLOCKHASH 0xD 0xE7 ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"482:6210:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205795c52611c085b58c81e416f0372fc7ea9d2ace69c254f27987dea76b5c171964736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI SWAP6 0xC5 0x26 GT 0xC0 DUP6 0xB5 DUP13 DUP2 0xE4 AND CREATE CALLDATACOPY 0x2F 0xC7 0xEA SWAP14 0x2A 0xCE PUSH10 0xC254F27987DEA76B5C17 NOT PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"215:1047:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205795c52611c085b58c81e416f0372fc7ea9d2ace69c254f27987dea76b5c171964736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI SWAP6 0xC5 0x26 GT 0xC0 DUP6 0xB5 DUP13 DUP2 0xE4 AND CREATE CALLDATACOPY 0x2F 0xC7 0xEA SWAP14 0x2A 0xCE PUSH10 0xC254F27987DEA76B5C17 NOT PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"215:1047:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/Blackjack.sol":{"Blackjack":{"abi":[{"inputs":[{"internalType":"address[]","name":"_players","type":"address[]"},{"internalType":"address","name":"_token","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"BetReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"enum Suit","name":"suit","type":"uint8"},{"indexed":false,"internalType":"enum Value","name":"value","type":"uint8"}],"name":"CardDrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"CollectedChips","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"dealer","type":"address"}],"name":"DealerMoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PaidChips","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"player","type":"address"}],"name":"PlayerMoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"enum Blackjack.Stage","name":"stage","type":"uint8"}],"name":"StageAdvanced","type":"event"},{"inputs":[],"name":"MAX_BET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"bet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"deal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getCurrentStage","outputs":[{"internalType":"enum Blackjack.Stage","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDealersFaceUpCardValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGameInfo","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"numPlayers","type":"uint256"},{"internalType":"enum Blackjack.Stage","name":"","type":"uint8"},{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"player","type":"address"}],"name":"getPlayerInfo","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"payout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum Blackjack.Decision","name":"decision","type":"uint8"}],"name":"play","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"players","outputs":[{"internalType":"bool","name":"isPlayer","type":"bool"},{"internalType":"bool","name":"betMade","type":"bool"},{"internalType":"bool","name":"turnOver","type":"bool"},{"internalType":"uint256","name":"betValue","type":"uint256"},{"internalType":"uint256","name":"stackValue","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract ChipToken","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2944":{"entryPoint":null,"id":2944,"parameterSlots":2,"returnSlots":0},"@_msgSender_1090":{"entryPoint":925,"id":1090,"parameterSlots":0,"returnSlots":1},"@createDeck_3887":{"entryPoint":933,"id":3887,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":1460,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1583,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":1606,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_address_fromMemory":{"entryPoint":1657,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":1759,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1790,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":1800,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":1847,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1899,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1909,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":1963,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2041,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":2088,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2135,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2182,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2229,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2234,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2239,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2244,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2249,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2266,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4892:15","statements":[{"body":{"nodeType":"YulBlock","src":"137:631:15","statements":[{"nodeType":"YulAssignment","src":"147:90:15","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"229:6:15"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"172:56:15"},"nodeType":"YulFunctionCall","src":"172:64:15"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"156:15:15"},"nodeType":"YulFunctionCall","src":"156:81:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"147:5:15"}]},{"nodeType":"YulVariableDeclaration","src":"246:16:15","value":{"name":"array","nodeType":"YulIdentifier","src":"257:5:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"250:3:15","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"279:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"286:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"272:6:15"},"nodeType":"YulFunctionCall","src":"272:21:15"},"nodeType":"YulExpressionStatement","src":"272:21:15"},{"nodeType":"YulAssignment","src":"302:23:15","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"313:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"320:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"309:3:15"},"nodeType":"YulFunctionCall","src":"309:16:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"302:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"335:17:15","value":{"name":"offset","nodeType":"YulIdentifier","src":"346:6:15"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"339:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"401:103:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"415:77:15"},"nodeType":"YulFunctionCall","src":"415:79:15"},"nodeType":"YulExpressionStatement","src":"415:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"371:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"380:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"388:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"376:3:15"},"nodeType":"YulFunctionCall","src":"376:17:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"367:3:15"},"nodeType":"YulFunctionCall","src":"367:27:15"},{"name":"end","nodeType":"YulIdentifier","src":"396:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"364:2:15"},"nodeType":"YulFunctionCall","src":"364:36:15"},"nodeType":"YulIf","src":"361:2:15"},{"body":{"nodeType":"YulBlock","src":"573:189:15","statements":[{"nodeType":"YulVariableDeclaration","src":"588:21:15","value":{"name":"src","nodeType":"YulIdentifier","src":"606:3:15"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"592:10:15","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"630:3:15"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"667:10:15"},{"name":"end","nodeType":"YulIdentifier","src":"679:3:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"635:31:15"},"nodeType":"YulFunctionCall","src":"635:48:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"623:6:15"},"nodeType":"YulFunctionCall","src":"623:61:15"},"nodeType":"YulExpressionStatement","src":"623:61:15"},{"nodeType":"YulAssignment","src":"697:21:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"708:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"713:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:15"},"nodeType":"YulFunctionCall","src":"704:14:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"697:3:15"}]},{"nodeType":"YulAssignment","src":"731:21:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"742:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"747:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"738:3:15"},"nodeType":"YulFunctionCall","src":"738:14:15"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"731:3:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"535:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"538:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"532:2:15"},"nodeType":"YulFunctionCall","src":"532:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"546:18:15","statements":[{"nodeType":"YulAssignment","src":"548:14:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"557:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"560:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"553:3:15"},"nodeType":"YulFunctionCall","src":"553:9:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"548:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"517:14:15","statements":[{"nodeType":"YulVariableDeclaration","src":"519:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"528:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"523:1:15","type":""}]}]},"src":"513:249:15"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"107:6:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"115:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"123:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"131:5:15","type":""}],"src":"24:744:15"},{"body":{"nodeType":"YulBlock","src":"837:80:15","statements":[{"nodeType":"YulAssignment","src":"847:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"862:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"856:5:15"},"nodeType":"YulFunctionCall","src":"856:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"847:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"905:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"878:26:15"},"nodeType":"YulFunctionCall","src":"878:33:15"},"nodeType":"YulExpressionStatement","src":"878:33:15"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"815:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"823:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"831:5:15","type":""}],"src":"774:143:15"},{"body":{"nodeType":"YulBlock","src":"1028:297:15","statements":[{"body":{"nodeType":"YulBlock","src":"1077:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1079:77:15"},"nodeType":"YulFunctionCall","src":"1079:79:15"},"nodeType":"YulExpressionStatement","src":"1079:79:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1056:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1064:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1052:3:15"},"nodeType":"YulFunctionCall","src":"1052:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"1071:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1048:3:15"},"nodeType":"YulFunctionCall","src":"1048:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1041:6:15"},"nodeType":"YulFunctionCall","src":"1041:35:15"},"nodeType":"YulIf","src":"1038:2:15"},{"nodeType":"YulVariableDeclaration","src":"1169:27:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1189:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1183:5:15"},"nodeType":"YulFunctionCall","src":"1183:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1173:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1205:114:15","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1292:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1300:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1288:3:15"},"nodeType":"YulFunctionCall","src":"1288:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"1307:6:15"},{"name":"end","nodeType":"YulIdentifier","src":"1315:3:15"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1214:73:15"},"nodeType":"YulFunctionCall","src":"1214:105:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1205:5:15"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1006:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"1014:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1022:5:15","type":""}],"src":"940:385:15"},{"body":{"nodeType":"YulBlock","src":"1450:591:15","statements":[{"body":{"nodeType":"YulBlock","src":"1496:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1498:77:15"},"nodeType":"YulFunctionCall","src":"1498:79:15"},"nodeType":"YulExpressionStatement","src":"1498:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1471:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1480:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1467:3:15"},"nodeType":"YulFunctionCall","src":"1467:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1492:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1463:3:15"},"nodeType":"YulFunctionCall","src":"1463:32:15"},"nodeType":"YulIf","src":"1460:2:15"},{"nodeType":"YulBlock","src":"1589:306:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1604:38:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1628:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1639:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1624:3:15"},"nodeType":"YulFunctionCall","src":"1624:17:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1618:5:15"},"nodeType":"YulFunctionCall","src":"1618:24:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1608:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1689:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1691:77:15"},"nodeType":"YulFunctionCall","src":"1691:79:15"},"nodeType":"YulExpressionStatement","src":"1691:79:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1661:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1669:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1658:2:15"},"nodeType":"YulFunctionCall","src":"1658:30:15"},"nodeType":"YulIf","src":"1655:2:15"},{"nodeType":"YulAssignment","src":"1786:99:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1857:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1868:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1853:3:15"},"nodeType":"YulFunctionCall","src":"1853:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1877:7:15"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1796:56:15"},"nodeType":"YulFunctionCall","src":"1796:89:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1786:6:15"}]}]},{"nodeType":"YulBlock","src":"1905:129:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1920:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1934:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1924:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1950:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1996:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2007:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1992:3:15"},"nodeType":"YulFunctionCall","src":"1992:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2016:7:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1960:31:15"},"nodeType":"YulFunctionCall","src":"1960:64:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1950:6:15"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1412:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1423:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1435:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1443:6:15","type":""}],"src":"1331:710:15"},{"body":{"nodeType":"YulBlock","src":"2088:88:15","statements":[{"nodeType":"YulAssignment","src":"2098:30:15","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2108:18:15"},"nodeType":"YulFunctionCall","src":"2108:20:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2098:6:15"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2157:6:15"},{"name":"size","nodeType":"YulIdentifier","src":"2165:4:15"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2137:19:15"},"nodeType":"YulFunctionCall","src":"2137:33:15"},"nodeType":"YulExpressionStatement","src":"2137:33:15"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2072:4:15","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2081:6:15","type":""}],"src":"2047:129:15"},{"body":{"nodeType":"YulBlock","src":"2222:35:15","statements":[{"nodeType":"YulAssignment","src":"2232:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2248:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2242:5:15"},"nodeType":"YulFunctionCall","src":"2242:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2232:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2215:6:15","type":""}],"src":"2182:75:15"},{"body":{"nodeType":"YulBlock","src":"2345:229:15","statements":[{"body":{"nodeType":"YulBlock","src":"2450:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2452:16:15"},"nodeType":"YulFunctionCall","src":"2452:18:15"},"nodeType":"YulExpressionStatement","src":"2452:18:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2422:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2430:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2419:2:15"},"nodeType":"YulFunctionCall","src":"2419:30:15"},"nodeType":"YulIf","src":"2416:2:15"},{"nodeType":"YulAssignment","src":"2482:25:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2494:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2502:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2490:3:15"},"nodeType":"YulFunctionCall","src":"2490:17:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2482:4:15"}]},{"nodeType":"YulAssignment","src":"2544:23:15","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2556:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"2562:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2552:3:15"},"nodeType":"YulFunctionCall","src":"2552:15:15"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2544:4:15"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2329:6:15","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2340:4:15","type":""}],"src":"2263:311:15"},{"body":{"nodeType":"YulBlock","src":"2625:51:15","statements":[{"nodeType":"YulAssignment","src":"2635:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2664:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2646:17:15"},"nodeType":"YulFunctionCall","src":"2646:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2635:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2607:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2617:7:15","type":""}],"src":"2580:96:15"},{"body":{"nodeType":"YulBlock","src":"2727:81:15","statements":[{"nodeType":"YulAssignment","src":"2737:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2752:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2759:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2748:3:15"},"nodeType":"YulFunctionCall","src":"2748:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2737:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2709:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2719:7:15","type":""}],"src":"2682:126:15"},{"body":{"nodeType":"YulBlock","src":"2859:32:15","statements":[{"nodeType":"YulAssignment","src":"2869:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"2880:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2869:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2841:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2851:7:15","type":""}],"src":"2814:77:15"},{"body":{"nodeType":"YulBlock","src":"2940:238:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2950:58:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2972:6:15"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3002:4:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2980:21:15"},"nodeType":"YulFunctionCall","src":"2980:27:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2968:3:15"},"nodeType":"YulFunctionCall","src":"2968:40:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2954:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3119:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3121:16:15"},"nodeType":"YulFunctionCall","src":"3121:18:15"},"nodeType":"YulExpressionStatement","src":"3121:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3062:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"3074:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3059:2:15"},"nodeType":"YulFunctionCall","src":"3059:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3098:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3110:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3095:2:15"},"nodeType":"YulFunctionCall","src":"3095:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3056:2:15"},"nodeType":"YulFunctionCall","src":"3056:62:15"},"nodeType":"YulIf","src":"3053:2:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3157:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3161:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3150:6:15"},"nodeType":"YulFunctionCall","src":"3150:22:15"},"nodeType":"YulExpressionStatement","src":"3150:22:15"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2926:6:15","type":""},{"name":"size","nodeType":"YulTypedName","src":"2934:4:15","type":""}],"src":"2897:281:15"},{"body":{"nodeType":"YulBlock","src":"3227:190:15","statements":[{"nodeType":"YulAssignment","src":"3237:33:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3264:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3246:17:15"},"nodeType":"YulFunctionCall","src":"3246:24:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3237:5:15"}]},{"body":{"nodeType":"YulBlock","src":"3360:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3362:16:15"},"nodeType":"YulFunctionCall","src":"3362:18:15"},"nodeType":"YulExpressionStatement","src":"3362:18:15"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3285:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"3292:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3282:2:15"},"nodeType":"YulFunctionCall","src":"3282:77:15"},"nodeType":"YulIf","src":"3279:2:15"},{"nodeType":"YulAssignment","src":"3391:20:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3402:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"3409:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3398:3:15"},"nodeType":"YulFunctionCall","src":"3398:13:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3391:3:15"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3213:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3223:3:15","type":""}],"src":"3184:233:15"},{"body":{"nodeType":"YulBlock","src":"3451:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3468:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3471:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3461:6:15"},"nodeType":"YulFunctionCall","src":"3461:88:15"},"nodeType":"YulExpressionStatement","src":"3461:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3565:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3568:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:15"},"nodeType":"YulFunctionCall","src":"3558:15:15"},"nodeType":"YulExpressionStatement","src":"3558:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3589:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3592:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3582:6:15"},"nodeType":"YulFunctionCall","src":"3582:15:15"},"nodeType":"YulExpressionStatement","src":"3582:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3423:180:15"},{"body":{"nodeType":"YulBlock","src":"3637:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3654:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3657:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3647:6:15"},"nodeType":"YulFunctionCall","src":"3647:88:15"},"nodeType":"YulExpressionStatement","src":"3647:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3751:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3754:4:15","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3744:6:15"},"nodeType":"YulFunctionCall","src":"3744:15:15"},"nodeType":"YulExpressionStatement","src":"3744:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3775:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3778:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3768:6:15"},"nodeType":"YulFunctionCall","src":"3768:15:15"},"nodeType":"YulExpressionStatement","src":"3768:15:15"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"3609:180:15"},{"body":{"nodeType":"YulBlock","src":"3823:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3840:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3843:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3833:6:15"},"nodeType":"YulFunctionCall","src":"3833:88:15"},"nodeType":"YulExpressionStatement","src":"3833:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3937:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3940:4:15","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3930:6:15"},"nodeType":"YulFunctionCall","src":"3930:15:15"},"nodeType":"YulExpressionStatement","src":"3930:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3961:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3964:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3954:6:15"},"nodeType":"YulFunctionCall","src":"3954:15:15"},"nodeType":"YulExpressionStatement","src":"3954:15:15"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"3795:180:15"},{"body":{"nodeType":"YulBlock","src":"4009:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4026:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4029:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4019:6:15"},"nodeType":"YulFunctionCall","src":"4019:88:15"},"nodeType":"YulExpressionStatement","src":"4019:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4123:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4126:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4116:6:15"},"nodeType":"YulFunctionCall","src":"4116:15:15"},"nodeType":"YulExpressionStatement","src":"4116:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4147:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4150:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4140:6:15"},"nodeType":"YulFunctionCall","src":"4140:15:15"},"nodeType":"YulExpressionStatement","src":"4140:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3981:180:15"},{"body":{"nodeType":"YulBlock","src":"4256:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4273:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4276:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4266:6:15"},"nodeType":"YulFunctionCall","src":"4266:12:15"},"nodeType":"YulExpressionStatement","src":"4266:12:15"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4167:117:15"},{"body":{"nodeType":"YulBlock","src":"4379:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4396:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4399:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4389:6:15"},"nodeType":"YulFunctionCall","src":"4389:12:15"},"nodeType":"YulExpressionStatement","src":"4389:12:15"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"4290:117:15"},{"body":{"nodeType":"YulBlock","src":"4502:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4519:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4522:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4512:6:15"},"nodeType":"YulFunctionCall","src":"4512:12:15"},"nodeType":"YulExpressionStatement","src":"4512:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"4413:117:15"},{"body":{"nodeType":"YulBlock","src":"4625:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4642:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4645:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4635:6:15"},"nodeType":"YulFunctionCall","src":"4635:12:15"},"nodeType":"YulExpressionStatement","src":"4635:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"4536:117:15"},{"body":{"nodeType":"YulBlock","src":"4707:54:15","statements":[{"nodeType":"YulAssignment","src":"4717:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4735:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4742:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4731:3:15"},"nodeType":"YulFunctionCall","src":"4731:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4751:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4747:3:15"},"nodeType":"YulFunctionCall","src":"4747:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4727:3:15"},"nodeType":"YulFunctionCall","src":"4727:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4717:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4690:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4700:6:15","type":""}],"src":"4659:102:15"},{"body":{"nodeType":"YulBlock","src":"4810:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"4867:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4876:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4879:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4869:6:15"},"nodeType":"YulFunctionCall","src":"4869:12:15"},"nodeType":"YulExpressionStatement","src":"4869:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4858:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4840:17:15"},"nodeType":"YulFunctionCall","src":"4840:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4830:2:15"},"nodeType":"YulFunctionCall","src":"4830:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4823:6:15"},"nodeType":"YulFunctionCall","src":"4823:43:15"},"nodeType":"YulIf","src":"4820:2:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4803:5:15","type":""}],"src":"4767:122:15"}]},"contents":"{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3AAE CODESIZE SUB DUP1 PUSH3 0x3AAE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x679 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH3 0x92 PUSH3 0x39D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x247 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x13E JUMPI PUSH3 0x13D PUSH3 0x857 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP POP DUP1 DUP1 PUSH3 0x23E SWAP1 PUSH3 0x7AB JUMP JUMPDEST SWAP2 POP POP PUSH3 0x11C JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x26A JUMPI PUSH3 0x269 PUSH3 0x857 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x2B9 JUMPI PUSH3 0x2B8 PUSH3 0x828 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x357 JUMPI PUSH3 0x356 PUSH3 0x828 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x37A SWAP3 SWAP2 SWAP1 PUSH3 0x506 JUMP JUMPDEST POP SWAP1 POP POP PUSH3 0x395 PUSH1 0xB PUSH3 0x3A5 PUSH1 0x20 SHL PUSH3 0x16BA OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x8F4 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH3 0x502 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xD DUP2 LT ISZERO PUSH3 0x4EB JUMPI DUP3 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x3E4 JUMPI PUSH3 0x3E3 PUSH3 0x828 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x3F9 JUMPI PUSH3 0x3F8 PUSH3 0x828 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH3 0x414 JUMPI PUSH3 0x413 PUSH3 0x828 JUMP JUMPDEST JUMPDEST PUSH1 0xC DUP2 GT ISZERO PUSH3 0x429 JUMPI PUSH3 0x428 PUSH3 0x828 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x47F JUMPI PUSH3 0x47E PUSH3 0x828 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH3 0x4B2 JUMPI PUSH3 0x4B1 PUSH3 0x828 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0x4D0 SWAP1 PUSH3 0x7AB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH3 0x4E2 SWAP1 PUSH3 0x7AB JUMP JUMPDEST SWAP2 POP POP PUSH3 0x3B5 JUMP JUMPDEST POP DUP1 DUP1 PUSH3 0x4F9 SWAP1 PUSH3 0x7AB JUMP JUMPDEST SWAP2 POP POP PUSH3 0x3A8 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x582 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x581 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x527 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x591 SWAP2 SWAP1 PUSH3 0x595 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x5B0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x596 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5CB PUSH3 0x5C5 DUP5 PUSH3 0x708 JUMP JUMPDEST PUSH3 0x6DF JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH3 0x5F1 JUMPI PUSH3 0x5F0 PUSH3 0x8BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH3 0x625 JUMPI DUP2 PUSH3 0x60A DUP9 DUP3 PUSH3 0x62F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5F4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x640 DUP2 PUSH3 0x8DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x65E JUMPI PUSH3 0x65D PUSH3 0x8B5 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x670 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x5B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x693 JUMPI PUSH3 0x692 PUSH3 0x8C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6B4 JUMPI PUSH3 0x6B3 PUSH3 0x8BF JUMP JUMPDEST JUMPDEST PUSH3 0x6C2 DUP6 DUP3 DUP7 ADD PUSH3 0x646 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x6D5 DUP6 DUP3 DUP7 ADD PUSH3 0x62F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6EB PUSH3 0x6FE JUMP JUMPDEST SWAP1 POP PUSH3 0x6F9 DUP3 DUP3 PUSH3 0x775 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x726 JUMPI PUSH3 0x725 PUSH3 0x886 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x744 DUP3 PUSH3 0x74B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x780 DUP3 PUSH3 0x8C9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x7A2 JUMPI PUSH3 0x7A1 PUSH3 0x886 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7B8 DUP3 PUSH3 0x76B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH3 0x7EE JUMPI PUSH3 0x7ED PUSH3 0x7F9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x8E5 DUP2 PUSH3 0x737 JUMP JUMPDEST DUP2 EQ PUSH3 0x8F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x31AA DUP1 PUSH3 0x904 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6540742F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x6540742F EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x7365870B EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x7E95B523 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xE2EB41FF EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xEEDBE31D EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x207 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x1746BD1B EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x248ADB8F EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x53A04B05 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x553DF021 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x59328401 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x63BD1D4A EQ PUSH2 0x153 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x2512 JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11E PUSH2 0x881 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x24B8 JUMP JUMPDEST PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0xE93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x165 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x253F JUMP JUMPDEST PUSH2 0x114E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH2 0x1612 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x24B8 JUMP JUMPDEST PUSH2 0x161F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x167C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x29B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP1 ADD SLOAD PUSH1 0x1 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 PUSH1 0x5 ADD DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2B5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x331 JUMPI PUSH2 0x330 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x356 JUMPI PUSH2 0x355 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38D SWAP1 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3B7 JUMPI PUSH2 0x3B6 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3DC JUMPI PUSH2 0x3DB PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413 SWAP1 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 PUSH2 0x42C PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP1 PUSH2 0x29ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 PUSH2 0x4C9 PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54D SWAP1 PUSH2 0x2A0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x59A PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E7 SWAP1 PUSH2 0x2A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5FA PUSH2 0x17FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x652 JUMPI PUSH2 0x651 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x665 JUMPI PUSH2 0x664 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x69E SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x768 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B4 PUSH1 0xB PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP PUSH32 0xCDD708BA90BB5D2F93E3E14125CA604C4C86D0FB97142531835C795E1583B359 DUP4 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x6F1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x706 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x1A5B JUMP JUMPDEST DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x719 SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x15 DUP3 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x766 JUMPI PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x760 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP JUMPDEST PUSH32 0x625BA646F05AB036EDD0F8D88CD3926FE26722C0B6717841FCB9334334A4D095 DUP3 PUSH1 0x40 MLOAD PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 ISZERO ISZERO DUP2 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x7CD JUMPI POP PUSH1 0x1 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x2 ADD SLOAD LT JUMPDEST ISZERO PUSH2 0x85D JUMPI PUSH1 0x1 PUSH1 0x5 ADD PUSH1 0x1 PUSH1 0x2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x7EE JUMPI PUSH2 0x7ED PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x865 PUSH2 0x1B0C JUMP JUMPDEST ISZERO PUSH2 0x87B JUMPI PUSH2 0x872 PUSH2 0x1B20 JUMP JUMPDEST PUSH2 0x87A PUSH2 0x1CDE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x896 JUMPI PUSH2 0x895 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x8BB JUMPI PUSH2 0x8BA PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ PUSH2 0x8FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F2 SWAP1 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x93F PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98C SWAP1 PUSH2 0x2A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x3 ADD SLOAD DUP2 LT ISZERO PUSH2 0xABC JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9BE JUMPI PUSH2 0x9BD PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x9F7 PUSH1 0xB PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP PUSH32 0xCDD708BA90BB5D2F93E3E14125CA604C4C86D0FB97142531835C795E1583B359 DUP3 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xA34 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0xA4B DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x1A5B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA9F SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0xAB4 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x998 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xAC9 PUSH1 0xB PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xADA DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x1A5B JUMP JUMPDEST SWAP1 POP PUSH32 0xCDD708BA90BB5D2F93E3E14125CA604C4C86D0FB97142531835C795E1583B359 PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xB3C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x7 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB59 SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB75 SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x3 ADD SLOAD DUP2 LT ISZERO PUSH2 0xCA3 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBA5 JUMPI PUSH2 0xBA4 PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0xBDE PUSH1 0xB PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP PUSH32 0xCDD708BA90BB5D2F93E3E14125CA604C4C86D0FB97142531835C795E1583B359 DUP3 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xC1B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0xC32 DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x1A5B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC86 SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0xC9B SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB7F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xCB0 PUSH1 0xB PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP PUSH32 0xCDD708BA90BB5D2F93E3E14125CA604C4C86D0FB97142531835C795E1583B359 PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xD12 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xD27 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x7 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD3B SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD4A PUSH2 0x1FCF JUMP JUMPDEST PUSH2 0xD52 PUSH2 0x1CDE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xA PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xED7 PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF24 SWAP1 PUSH2 0x2A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF42 JUMPI PUSH2 0xF41 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH2 0xF66 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ PUSH2 0xFA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9E SWAP1 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x15 PUSH1 0x7 PUSH1 0x2 ADD SLOAD GT SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x113C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFDD JUMPI PUSH2 0xFDC PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD ISZERO DUP1 ISZERO PUSH2 0x10CC JUMPI POP DUP4 JUMPDEST ISZERO PUSH2 0x10EE JUMPI PUSH2 0x10E9 DUP3 PUSH2 0x10E4 PUSH1 0x2 DUP5 PUSH1 0x60 ADD MLOAD PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x1127 JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD ISZERO DUP1 ISZERO PUSH2 0x1108 JUMPI POP PUSH1 0x7 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x80 ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x1126 JUMPI PUSH2 0x1125 DUP3 PUSH2 0x1120 PUSH1 0x2 DUP5 PUSH1 0x60 ADD MLOAD PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x2203 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1134 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFB7 JUMP JUMPDEST POP PUSH2 0x1145 PUSH2 0x1CDE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1163 JUMPI PUSH2 0x1162 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1188 JUMPI PUSH2 0x1187 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BF SWAP1 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH9 0x3635C9ADC5DEA00000 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x11E3 JUMPI POP PUSH1 0x1 DUP2 LT ISZERO JUMPDEST PUSH2 0x1222 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1219 SWAP1 PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 PUSH2 0x1232 PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x12BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B6 SWAP1 PUSH2 0x2ACD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0x1304 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x134C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1370 SWAP2 SWAP1 PUSH2 0x256C JUMP JUMPDEST LT ISZERO PUSH2 0x13B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A8 SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 PUSH2 0x13C1 PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x144E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1445 SWAP1 PUSH2 0x29ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 PUSH2 0x145E PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x14EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E2 SWAP1 PUSH2 0x2A0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14F5 PUSH2 0x17FF JUMP JUMPDEST SWAP1 POP PUSH2 0x1501 DUP2 DUP6 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x15B8 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0xB870F7DB0316E21ABDDD14A3936865C51A6D298208FB1EF77605C57A7FE08DF DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x15EE SWAP3 SWAP2 SWAP1 PUSH2 0x288E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x15FE PUSH2 0x23B5 JUMP JUMPDEST ISZERO PUSH2 0x160C JUMPI PUSH2 0x160B PUSH2 0x1CDE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x17FB JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xD DUP2 LT ISZERO PUSH2 0x17E7 JUMPI DUP3 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16F4 JUMPI PUSH2 0x16F3 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1706 JUMPI PUSH2 0x1705 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x171E JUMPI PUSH2 0x171D PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1730 JUMPI PUSH2 0x172F PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1783 JUMPI PUSH2 0x1782 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x17B3 JUMPI PUSH2 0x17B2 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x17CF SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x17DF SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16C9 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x17F3 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16BD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x180F PUSH2 0x2411 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD GT PUSH2 0x1856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184D SWAP1 PUSH2 0x2A4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1865 PUSH2 0x23C8 JUMP JUMPDEST PUSH2 0x186F SWAP2 SWAP1 PUSH2 0x2DDF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1889 JUMPI PUSH2 0x1888 PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x18C3 JUMPI PUSH2 0x18C2 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x18D5 JUMPI PUSH2 0x18D4 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xC DUP2 GT ISZERO PUSH2 0x18FE JUMPI PUSH2 0x18FD PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1910 JUMPI PUSH2 0x190F PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP6 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x192E SWAP2 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x193F JUMPI PUSH2 0x193E PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP5 PUSH1 0x0 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x195F JUMPI PUSH2 0x195E PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19A1 JUMPI PUSH2 0x19A0 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x19DE JUMPI PUSH2 0x19DD PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP4 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x19FA JUMPI PUSH2 0x19F9 PUSH2 0x2E9D JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP SWAP1 SSTORE DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A4C SWAP1 PUSH2 0x2D62 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1A71 JUMPI PUSH2 0x1A70 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1A84 JUMPI PUSH2 0x1A83 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x1AB4 JUMPI POP PUSH1 0xA PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1A9F JUMPI PUSH2 0x1A9E PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1AB2 JUMPI PUSH2 0x1AB1 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x1AE3 JUMPI POP PUSH1 0xB PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1ACE JUMPI PUSH2 0x1ACD PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1AF1 JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x1B07 JUMP JUMPDEST DUP2 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1B04 JUMPI PUSH2 0x1B03 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x2 ADD SLOAD EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B64 PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BBA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB1 SWAP1 PUSH2 0x2A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1BCF JUMPI PUSH2 0x1BCE PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1BF4 JUMPI PUSH2 0x1BF3 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1C34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2B SWAP1 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x11 PUSH1 0x7 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x1C7F JUMPI PUSH1 0x0 PUSH2 0x1C4F PUSH1 0xB PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C5E DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x7 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C72 SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP PUSH2 0x1C35 JUMP JUMPDEST PUSH32 0x5FF2337534D606F18E67583F9111646F2FDBB035A5CC8A454E5B382DC943B915 PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1CD3 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1CF2 JUMPI PUSH2 0x1CF1 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1D17 JUMPI PUSH2 0x1D16 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1D98 JUMPI PUSH1 0x1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1D45 JUMPI PUSH2 0x1D44 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x87B6FA18A1C8E172C612787DCBE8B401B2E3E144CFD5BE67730DFA0A3C18F79 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1D8B SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1DAC JUMPI PUSH2 0x1DAB PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1DD1 JUMPI PUSH2 0x1DD0 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1E53 JUMPI PUSH1 0x2 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1E00 JUMPI PUSH2 0x1DFF PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x87B6FA18A1C8E172C612787DCBE8B401B2E3E144CFD5BE67730DFA0A3C18F79 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1E46 SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1E67 JUMPI PUSH2 0x1E66 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1E8C JUMPI PUSH2 0x1E8B PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1F0E JUMPI PUSH1 0x3 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1EBB JUMPI PUSH2 0x1EBA PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x87B6FA18A1C8E172C612787DCBE8B401B2E3E144CFD5BE67730DFA0A3C18F79 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1F01 SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1FCB JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F22 JUMPI PUSH2 0x1F21 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F47 JUMPI PUSH2 0x1F46 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1FC9 JUMPI PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F76 JUMPI PUSH2 0x1F75 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x87B6FA18A1C8E172C612787DCBE8B401B2E3E144CFD5BE67730DFA0A3C18F79 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1FBC SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1FCA JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1FE4 JUMPI PUSH2 0x1FE3 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2009 JUMPI PUSH2 0x2008 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2049 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2040 SWAP1 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x15 PUSH1 0x7 PUSH1 0x2 ADD SLOAD EQ SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x21E8 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x207F JUMPI PUSH2 0x207E PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x15 DUP3 PUSH1 0x2 ADD SLOAD EQ SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP6 ISZERO DUP1 ISZERO PUSH2 0x210F JUMPI POP DUP2 JUMPDEST ISZERO PUSH2 0x2166 JUMPI PUSH1 0x1 DUP4 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH2 0x2140 DUP4 PUSH1 0x1 PUSH2 0x23FB JUMP JUMPDEST PUSH2 0x214A SWAP2 SWAP1 PUSH2 0x2BC8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2160 DUP6 PUSH2 0x215B PUSH1 0x5 DUP5 PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x2203 JUMP JUMPDEST POP PUSH2 0x21D1 JUMP JUMPDEST DUP6 DUP1 ISZERO PUSH2 0x2170 JUMPI POP DUP2 JUMPDEST ISZERO PUSH2 0x21A1 JUMPI PUSH1 0x1 DUP4 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x219C DUP5 DUP3 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x21D0 JUMP JUMPDEST DUP6 DUP1 ISZERO PUSH2 0x21AC JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x21CF JUMPI PUSH1 0x1 DUP4 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x21E0 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2059 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x21FB SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2285 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x229F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22D7 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x238C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23B0 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 ADD SLOAD PUSH1 0x1 DUP1 ADD SLOAD EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DIFFICULTY TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23DD SWAP3 SWAP2 SWAP1 PUSH2 0x27D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2409 SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2430 JUMPI PUSH2 0x242F PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x2449 JUMPI PUSH2 0x2448 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x245E DUP2 PUSH2 0x311F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2473 DUP2 PUSH2 0x3136 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2488 DUP2 PUSH2 0x314D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x249D DUP2 PUSH2 0x315D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24B2 DUP2 PUSH2 0x315D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24CE JUMPI PUSH2 0x24CD PUSH2 0x2EFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24DC DUP5 DUP3 DUP6 ADD PUSH2 0x244F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24FB JUMPI PUSH2 0x24FA PUSH2 0x2EFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2509 DUP5 DUP3 DUP6 ADD PUSH2 0x2464 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2528 JUMPI PUSH2 0x2527 PUSH2 0x2EFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2536 DUP5 DUP3 DUP6 ADD PUSH2 0x2479 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2555 JUMPI PUSH2 0x2554 PUSH2 0x2EFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2563 DUP5 DUP3 DUP6 ADD PUSH2 0x248E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2582 JUMPI PUSH2 0x2581 PUSH2 0x2EFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2590 DUP5 DUP3 DUP6 ADD PUSH2 0x24A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A5 DUP4 DUP4 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25BA DUP2 PUSH2 0x2C87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x25C9 DUP2 PUSH2 0x2C87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25DA DUP3 PUSH2 0x2B38 JUMP JUMPDEST PUSH2 0x25E4 DUP2 DUP6 PUSH2 0x2B50 JUMP JUMPDEST SWAP4 POP PUSH2 0x25EF DUP4 PUSH2 0x2B28 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2620 JUMPI DUP2 MLOAD PUSH2 0x2607 DUP9 DUP3 PUSH2 0x2599 JUMP JUMPDEST SWAP8 POP PUSH2 0x2612 DUP4 PUSH2 0x2B43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25F3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2636 DUP2 PUSH2 0x2C99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2645 DUP2 PUSH2 0x2D08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2654 DUP2 PUSH2 0x2D2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2663 DUP2 PUSH2 0x2D3E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2672 DUP2 PUSH2 0x2D50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2685 PUSH1 0x1A DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2690 DUP3 PUSH2 0x2F00 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26A8 PUSH1 0x12 DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x26B3 DUP3 PUSH2 0x2F29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26CB PUSH1 0x19 DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x26D6 DUP3 PUSH2 0x2F52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26EE PUSH1 0x1E DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x26F9 DUP3 PUSH2 0x2F7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2711 PUSH1 0x16 DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x271C DUP3 PUSH2 0x2FA4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2734 PUSH1 0x27 DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x273F DUP3 PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2757 PUSH1 0x22 DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2762 DUP3 PUSH2 0x301C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x277A PUSH1 0x17 DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2785 DUP3 PUSH2 0x306B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x279D PUSH1 0x24 DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x27A8 DUP3 PUSH2 0x3094 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27BC DUP2 PUSH2 0x2CFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x27D3 PUSH2 0x27CE DUP3 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x2DD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E5 DUP3 DUP6 PUSH2 0x27C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x27F5 DUP3 DUP5 PUSH2 0x27C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x281A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2835 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x25C0 JUMP JUMPDEST PUSH2 0x2842 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x25C0 JUMP JUMPDEST PUSH2 0x284F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x27B3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x286C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x25C0 JUMP JUMPDEST PUSH2 0x2879 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x265A JUMP JUMPDEST PUSH2 0x2886 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2669 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x28A3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x25C0 JUMP JUMPDEST PUSH2 0x28B0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x27B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x28CC PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x25C0 JUMP JUMPDEST PUSH2 0x28D9 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x27B3 JUMP JUMPDEST PUSH2 0x28E6 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x27B3 JUMP JUMPDEST PUSH2 0x28F3 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x27B3 JUMP JUMPDEST PUSH2 0x2900 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x264B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2912 DUP2 DUP5 PUSH2 0x25CF JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2934 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x262D JUMP JUMPDEST PUSH2 0x2941 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x262D JUMP JUMPDEST PUSH2 0x294E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x262D JUMP JUMPDEST PUSH2 0x295B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x27B3 JUMP JUMPDEST PUSH2 0x2968 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x27B3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2987 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x262D JUMP JUMPDEST PUSH2 0x2994 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x262D JUMP JUMPDEST PUSH2 0x29A1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x27B3 JUMP JUMPDEST PUSH2 0x29AE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x27B3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x263C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x264B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A06 DUP2 PUSH2 0x2678 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A26 DUP2 PUSH2 0x269B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A46 DUP2 PUSH2 0x26BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A66 DUP2 PUSH2 0x26E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A86 DUP2 PUSH2 0x2704 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AA6 DUP2 PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AC6 DUP2 PUSH2 0x274A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AE6 DUP2 PUSH2 0x276D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B06 DUP2 PUSH2 0x2790 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B22 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B7D DUP3 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2B88 DUP4 PUSH2 0x2CFE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2BBD JUMPI PUSH2 0x2BBC PUSH2 0x2E10 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD3 DUP3 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2BDE DUP4 PUSH2 0x2CFE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2BEE JUMPI PUSH2 0x2BED PUSH2 0x2E3F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C04 DUP3 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C0F DUP4 PUSH2 0x2CFE JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2C48 JUMPI PUSH2 0x2C47 PUSH2 0x2E10 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5E DUP3 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C69 DUP4 PUSH2 0x2CFE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2C7C JUMPI PUSH2 0x2C7B PUSH2 0x2E10 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C92 DUP3 PUSH2 0x2CDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2CB3 DUP3 PUSH2 0x30E3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2CC6 DUP3 PUSH2 0x30F7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2CD9 DUP3 PUSH2 0x310B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D13 DUP3 PUSH2 0x2D1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D25 DUP3 PUSH2 0x2CDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D37 DUP3 PUSH2 0x2CA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D49 DUP3 PUSH2 0x2CB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5B DUP3 PUSH2 0x2CCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D6D DUP3 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x2D81 JUMPI PUSH2 0x2D80 PUSH2 0x2E10 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D97 DUP3 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2DCA JUMPI PUSH2 0x2DC9 PUSH2 0x2E10 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DEA DUP3 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF5 DUP4 PUSH2 0x2CFE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2E05 JUMPI PUSH2 0x2E04 PUSH2 0x2E3F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x6E6F74206120706C6179657220696E20746869732067616D652E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x796F7572207475726E206973206F7665722E0000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x62657420616D6F756E74206D7573742062652076616C69642E00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6E6F206D6F7265206361726473206C65667420696E20746865206465636B0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6E6F7420796F7572207475726E20746F20706C61792E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6F6E6C7920746865206465616C65722063616E2063616C6C2074686973206675 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6374696F6E2E00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706C6179657220646F65736E2774206861766520656E6F75676820746F6B656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x732E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706C617965722068617320616C7265616479206265742E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x66756E6374696F6E2063616E6E6F742062652063616C6C656420726967687420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F772E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x30F4 JUMPI PUSH2 0x30F3 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x3108 JUMPI PUSH2 0x3107 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0xD DUP2 LT PUSH2 0x311C JUMPI PUSH2 0x311B PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x3128 DUP2 PUSH2 0x2C87 JUMP JUMPDEST DUP2 EQ PUSH2 0x3133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x313F DUP2 PUSH2 0x2C99 JUMP JUMPDEST DUP2 EQ PUSH2 0x314A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x315A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3166 DUP2 PUSH2 0x2CFE JUMP JUMPDEST DUP2 EQ PUSH2 0x3171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0xDE 0x1E 0x5E PUSH9 0x813C3ACE540D8BFDBE SWAP10 0xE9 0xC SWAP10 DUP4 0x24 SWAP14 MULMOD DUP7 POP DUP2 SLT 0x27 0xB9 0x2F DUP15 MSTORE8 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"280:10327:12:-:0;;;2614:513;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2697:6;2679:5;;:25;;;;;;;;;;;;;;;;;;2723:26;;;;;;;;2730:12;:10;;;:12;;:::i;:::-;2723:26;;;;;;2744:1;2723:26;;;;2747:1;2723:26;;;2714:6;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2764:9;2759:163;2783:8;:15;2779:1;:19;2759:163;;;2819:14;2836:8;2845:1;2836:11;;;;;;;;:::i;:::-;;;;;;;;2819:28;;2879:32;;;;;;;;2886:4;2879:32;;;;;;2892:5;2879:32;;;;;;2899:5;2879:32;;;;;;2906:1;2879:32;;;;2909:1;2879:32;;;2861:7;:15;2869:6;2861:15;;;;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2805:117;2800:3;;;;;:::i;:::-;;;;2759:163;;;;2938:155;;;;;;;;2964:8;2973:1;2964:11;;;;;;;;:::i;:::-;;;;;;;;2938:155;;;;;;2989:1;2938:155;;;;3004:1;2938:155;;;;3019:8;:15;2938:155;;;;3048:13;2938:155;;;;;;;;:::i;:::-;;;;;;3075:8;2938:155;;;2931:4;:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;3103:17;:4;:15;;;;;:17;;:::i;:::-;2614:513;;280:10327;;655:96:5;708:7;734:10;727:17;;655:96;:::o;416:263:13:-;483:9;478:195;502:1;498;:5;478:195;;;529:9;524:139;548:2;544:1;:6;524:139;;;575:4;:10;;591:23;;;;;;;;601:1;596:7;;;;;;;;:::i;:::-;;591:23;;;;;;;;:::i;:::-;;;;;;611:1;605:8;;;;;;;;:::i;:::-;;591:23;;;;;;;;:::i;:::-;;;;;575:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;633:4;:13;;;:15;;;;;;;;;:::i;:::-;;;;;;552:3;;;;;:::i;:::-;;;;524:139;;;;505:3;;;;;:::i;:::-;;;;478:195;;;;416:263;:::o;280:10327:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;24:744:15:-;131:5;156:81;172:64;229:6;172:64;:::i;:::-;156:81;:::i;:::-;147:90;;257:5;286:6;279:5;272:21;320:4;313:5;309:16;302:23;;346:6;396:3;388:4;380:6;376:17;371:3;367:27;364:36;361:2;;;415:79;;:::i;:::-;361:2;528:1;513:249;538:6;535:1;532:13;513:249;;;606:3;635:48;679:3;667:10;635:48;:::i;:::-;630:3;623:61;713:4;708:3;704:14;697:21;;747:4;742:3;738:14;731:21;;573:189;560:1;557;553:9;548:14;;513:249;;;517:14;137:631;;;;;;;:::o;774:143::-;831:5;862:6;856:13;847:22;;878:33;905:5;878:33;:::i;:::-;837:80;;;;:::o;940:385::-;1022:5;1071:3;1064:4;1056:6;1052:17;1048:27;1038:2;;1079:79;;:::i;:::-;1038:2;1189:6;1183:13;1214:105;1315:3;1307:6;1300:4;1292:6;1288:17;1214:105;:::i;:::-;1205:114;;1028:297;;;;;:::o;1331:710::-;1435:6;1443;1492:2;1480:9;1471:7;1467:23;1463:32;1460:2;;;1498:79;;:::i;:::-;1460:2;1639:1;1628:9;1624:17;1618:24;1669:18;1661:6;1658:30;1655:2;;;1691:79;;:::i;:::-;1655:2;1796:89;1877:7;1868:6;1857:9;1853:22;1796:89;:::i;:::-;1786:99;;1589:306;1934:2;1960:64;2016:7;2007:6;1996:9;1992:22;1960:64;:::i;:::-;1950:74;;1905:129;1450:591;;;;;:::o;2047:129::-;2081:6;2108:20;;:::i;:::-;2098:30;;2137:33;2165:4;2157:6;2137:33;:::i;:::-;2088:88;;;:::o;2182:75::-;2215:6;2248:2;2242:9;2232:19;;2222:35;:::o;2263:311::-;2340:4;2430:18;2422:6;2419:30;2416:2;;;2452:18;;:::i;:::-;2416:2;2502:4;2494:6;2490:17;2482:25;;2562:4;2556;2552:15;2544:23;;2345:229;;;:::o;2580:96::-;2617:7;2646:24;2664:5;2646:24;:::i;:::-;2635:35;;2625:51;;;:::o;2682:126::-;2719:7;2759:42;2752:5;2748:54;2737:65;;2727:81;;;:::o;2814:77::-;2851:7;2880:5;2869:16;;2859:32;;;:::o;2897:281::-;2980:27;3002:4;2980:27;:::i;:::-;2972:6;2968:40;3110:6;3098:10;3095:22;3074:18;3062:10;3059:34;3056:62;3053:2;;;3121:18;;:::i;:::-;3053:2;3161:10;3157:2;3150:22;2940:238;;;:::o;3184:233::-;3223:3;3246:24;3264:5;3246:24;:::i;:::-;3237:33;;3292:66;3285:5;3282:77;3279:2;;;3362:18;;:::i;:::-;3279:2;3409:1;3402:5;3398:13;3391:20;;3227:190;;;:::o;3423:180::-;3471:77;3468:1;3461:88;3568:4;3565:1;3558:15;3592:4;3589:1;3582:15;3609:180;3657:77;3654:1;3647:88;3754:4;3751:1;3744:15;3778:4;3775:1;3768:15;3795:180;3843:77;3840:1;3833:88;3940:4;3937:1;3930:15;3964:4;3961:1;3954:15;3981:180;4029:77;4026:1;4019:88;4126:4;4123:1;4116:15;4150:4;4147:1;4140:15;4167:117;4276:1;4273;4266:12;4290:117;4399:1;4396;4389:12;4413:117;4522:1;4519;4512:12;4536:117;4645:1;4642;4635:12;4659:102;4700:6;4751:2;4747:7;4742:2;4735:5;4731:14;4727:28;4717:38;;4707:54;;;:::o;4767:122::-;4840:24;4858:5;4840:24;:::i;:::-;4833:5;4830:35;4820:2;;4879:1;4876;4869:12;4820:2;4810:79;:::o;280:10327:12:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MAX_BET_2672":{"entryPoint":5650,"id":2672,"parameterSlots":0,"returnSlots":0},"@MIN_BET_2669":{"entryPoint":4425,"id":2669,"parameterSlots":0,"returnSlots":0},"@_advanceStage_3743":{"entryPoint":7390,"id":3743,"parameterSlots":0,"returnSlots":0},"@_checkNaturals_3628":{"entryPoint":8143,"id":3628,"parameterSlots":0,"returnSlots":0},"@_collectChips_3645":{"entryPoint":8924,"id":3645,"parameterSlots":2,"returnSlots":0},"@_convertCardValueToUint_3800":{"entryPoint":6747,"id":3800,"parameterSlots":1,"returnSlots":1},"@_isBettingOver_3755":{"entryPoint":9141,"id":3755,"parameterSlots":0,"returnSlots":1},"@_isPlayingOver_3767":{"entryPoint":6924,"id":3767,"parameterSlots":0,"returnSlots":1},"@_msgSender_1090":{"entryPoint":6143,"id":1090,"parameterSlots":0,"returnSlots":1},"@_payChips_3662":{"entryPoint":8707,"id":3662,"parameterSlots":2,"returnSlots":0},"@_playDealer_3513":{"entryPoint":6944,"id":3513,"parameterSlots":0,"returnSlots":0},"@_random_3970":{"entryPoint":9160,"id":3970,"parameterSlots":0,"returnSlots":1},"@add_2415":{"entryPoint":9211,"id":2415,"parameterSlots":2,"returnSlots":1},"@bet_3000":{"entryPoint":4430,"id":3000,"parameterSlots":1,"returnSlots":0},"@createDeck_3887":{"entryPoint":5818,"id":3887,"parameterSlots":1,"returnSlots":0},"@deal_3174":{"entryPoint":2177,"id":3174,"parameterSlots":0,"returnSlots":0},"@drawCard_3950":{"entryPoint":6151,"id":3950,"parameterSlots":1,"returnSlots":1},"@getCurrentStage_3476":{"entryPoint":5756,"id":3476,"parameterSlots":0,"returnSlots":1},"@getDealersFaceUpCardValue_3466":{"entryPoint":794,"id":3466,"parameterSlots":0,"returnSlots":1},"@getGameInfo_3453":{"entryPoint":549,"id":3453,"parameterSlots":0,"returnSlots":6},"@getPlayerInfo_3421":{"entryPoint":3416,"id":3421,"parameterSlots":1,"returnSlots":4},"@mul_2445":{"entryPoint":8685,"id":2445,"parameterSlots":2,"returnSlots":1},"@payout_3389":{"entryPoint":3731,"id":3389,"parameterSlots":0,"returnSlots":0},"@play_3302":{"entryPoint":930,"id":3302,"parameterSlots":1,"returnSlots":0},"@players_2728":{"entryPoint":5663,"id":2728,"parameterSlots":0,"returnSlots":0},"@token_2717":{"entryPoint":5782,"id":2717,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":9295,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":9316,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_enum$_Decision_$2699":{"entryPoint":9337,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9358,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":9379,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9400,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":9445,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_Decision_$2699":{"entryPoint":9490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":9535,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":9580,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":9625,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":9649,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9664,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":9679,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9773,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ChipToken_$4042_to_t_address_fromStack":{"entryPoint":9788,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Stage_$2696_to_t_uint8_fromStack":{"entryPoint":9803,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Suit_$3808_to_t_uint8_fromStack":{"entryPoint":9818,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Value_$3822_to_t_uint8_fromStack":{"entryPoint":9833,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_4729582300210317519386e2c33d042f822628d35ffe4a24a1a3be85d7a90659_to_t_string_memory_ptr_fromStack":{"entryPoint":9848,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5d6699e530e9dd524f183c4d5b175f788a143f6bc3aff7a00567e3449129ec2d_to_t_string_memory_ptr_fromStack":{"entryPoint":9883,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6669cbf05ac9a2bdbc39bd2c35d6190d0ab62096810aaf391c891b31657c165b_to_t_string_memory_ptr_fromStack":{"entryPoint":9918,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8c112c2c291568ca6f3d9c3c61df5a6f2303477385bfcf06fd59e47a00d5aabe_to_t_string_memory_ptr_fromStack":{"entryPoint":9953,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a3714162b69248b942e118568224bd8b2918be54473f7d7d5590bf84889f0c81_to_t_string_memory_ptr_fromStack":{"entryPoint":9988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e02d50271d73d7c8ce2a6e39a212f5f5f38fe7f65273b1e97d4785b3b1d016ba_to_t_string_memory_ptr_fromStack":{"entryPoint":10023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e11ebc4aafe537e8acf88f6368431f06bd2b0b97e24ae3cacf1f0bf4cfa0f983_to_t_string_memory_ptr_fromStack":{"entryPoint":10058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e63d888be4e1175799600edb323a027a3e52a00c90f6ebab550c279f67bcae2f_to_t_string_memory_ptr_fromStack":{"entryPoint":10093,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb424d949b90a0ecc5faf0b3504332a29e0aab59c576878f0bd384215021dd88_to_t_string_memory_ptr_fromStack":{"entryPoint":10128,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":10163,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":10178,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":10201,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":10272,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_enum$_Suit_$3808_t_enum$_Value_$3822__to_t_address_t_uint8_t_uint8__fromStack_reversed":{"entryPoint":10327,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":10382,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_enum$_Stage_$2696_t_array$_t_address_$dyn_memory_ptr__to_t_address_t_uint256_t_uint256_t_uint256_t_uint8_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10423,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bool_t_bool_t_bool_t_uint256_t_uint256__to_t_bool_t_bool_t_bool_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":10527,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bool_t_bool_t_uint256_t_uint256__to_t_bool_t_bool_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":10610,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_ChipToken_$4042__to_t_address__fromStack_reversed":{"entryPoint":10679,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_Stage_$2696__to_t_uint8__fromStack_reversed":{"entryPoint":10706,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4729582300210317519386e2c33d042f822628d35ffe4a24a1a3be85d7a90659__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10733,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d6699e530e9dd524f183c4d5b175f788a143f6bc3aff7a00567e3449129ec2d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10765,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6669cbf05ac9a2bdbc39bd2c35d6190d0ab62096810aaf391c891b31657c165b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10797,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8c112c2c291568ca6f3d9c3c61df5a6f2303477385bfcf06fd59e47a00d5aabe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10829,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a3714162b69248b942e118568224bd8b2918be54473f7d7d5590bf84889f0c81__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10861,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e02d50271d73d7c8ce2a6e39a212f5f5f38fe7f65273b1e97d4785b3b1d016ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10893,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ebc4aafe537e8acf88f6368431f06bd2b0b97e24ae3cacf1f0bf4cfa0f983__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10925,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e63d888be4e1175799600edb323a027a3e52a00c90f6ebab550c279f67bcae2f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10957,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb424d949b90a0ecc5faf0b3504332a29e0aab59c576878f0bd384215021dd88__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10989,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":11021,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":11048,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":11064,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":11075,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":11088,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":11105,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11122,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11208,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11257,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11347,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":11399,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":11417,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Stage_$2696":{"entryPoint":11429,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Suit_$3808":{"entryPoint":11448,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Value_$3822":{"entryPoint":11467,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":11486,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":11518,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ChipToken_$4042_to_t_address":{"entryPoint":11528,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ChipToken_$4042_to_t_uint160":{"entryPoint":11546,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Stage_$2696_to_t_uint8":{"entryPoint":11564,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Suit_$3808_to_t_uint8":{"entryPoint":11582,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Value_$3822_to_t_uint8":{"entryPoint":11600,"id":null,"parameterSlots":1,"returnSlots":1},"decrement_t_uint256":{"entryPoint":11618,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":11660,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":11733,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":11743,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":11792,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11839,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11886,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":11933,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11980,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":12027,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_4729582300210317519386e2c33d042f822628d35ffe4a24a1a3be85d7a90659":{"entryPoint":12032,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5d6699e530e9dd524f183c4d5b175f788a143f6bc3aff7a00567e3449129ec2d":{"entryPoint":12073,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6669cbf05ac9a2bdbc39bd2c35d6190d0ab62096810aaf391c891b31657c165b":{"entryPoint":12114,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8c112c2c291568ca6f3d9c3c61df5a6f2303477385bfcf06fd59e47a00d5aabe":{"entryPoint":12155,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a3714162b69248b942e118568224bd8b2918be54473f7d7d5590bf84889f0c81":{"entryPoint":12196,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e02d50271d73d7c8ce2a6e39a212f5f5f38fe7f65273b1e97d4785b3b1d016ba":{"entryPoint":12237,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ebc4aafe537e8acf88f6368431f06bd2b0b97e24ae3cacf1f0bf4cfa0f983":{"entryPoint":12316,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e63d888be4e1175799600edb323a027a3e52a00c90f6ebab550c279f67bcae2f":{"entryPoint":12395,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb424d949b90a0ecc5faf0b3504332a29e0aab59c576878f0bd384215021dd88":{"entryPoint":12436,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Stage_$2696":{"entryPoint":12515,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Suit_$3808":{"entryPoint":12535,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Value_$3822":{"entryPoint":12555,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":12575,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":12598,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_Decision_$2699":{"entryPoint":12621,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":12637,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24538:15","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:15","statements":[{"nodeType":"YulAssignment","src":"69:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:15"},"nodeType":"YulFunctionCall","src":"78:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:15"},"nodeType":"YulFunctionCall","src":"107:33:15"},"nodeType":"YulExpressionStatement","src":"107:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:15","type":""}],"src":"7:139:15"},{"body":{"nodeType":"YulBlock","src":"212:77:15","statements":[{"nodeType":"YulAssignment","src":"222:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"237:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"231:5:15"},"nodeType":"YulFunctionCall","src":"231:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"222:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"277:5:15"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"253:23:15"},"nodeType":"YulFunctionCall","src":"253:30:15"},"nodeType":"YulExpressionStatement","src":"253:30:15"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"190:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"198:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"206:5:15","type":""}],"src":"152:137:15"},{"body":{"nodeType":"YulBlock","src":"360:100:15","statements":[{"nodeType":"YulAssignment","src":"370:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"392:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"379:12:15"},"nodeType":"YulFunctionCall","src":"379:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"370:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"448:5:15"}],"functionName":{"name":"validator_revert_t_enum$_Decision_$2699","nodeType":"YulIdentifier","src":"408:39:15"},"nodeType":"YulFunctionCall","src":"408:46:15"},"nodeType":"YulExpressionStatement","src":"408:46:15"}]},"name":"abi_decode_t_enum$_Decision_$2699","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"338:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"346:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"354:5:15","type":""}],"src":"295:165:15"},{"body":{"nodeType":"YulBlock","src":"518:87:15","statements":[{"nodeType":"YulAssignment","src":"528:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"550:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"537:12:15"},"nodeType":"YulFunctionCall","src":"537:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"528:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"593:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"566:26:15"},"nodeType":"YulFunctionCall","src":"566:33:15"},"nodeType":"YulExpressionStatement","src":"566:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"496:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"504:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"512:5:15","type":""}],"src":"466:139:15"},{"body":{"nodeType":"YulBlock","src":"674:80:15","statements":[{"nodeType":"YulAssignment","src":"684:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"699:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"693:5:15"},"nodeType":"YulFunctionCall","src":"693:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"684:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"742:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"715:26:15"},"nodeType":"YulFunctionCall","src":"715:33:15"},"nodeType":"YulExpressionStatement","src":"715:33:15"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"652:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"660:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"668:5:15","type":""}],"src":"611:143:15"},{"body":{"nodeType":"YulBlock","src":"826:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"872:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"874:77:15"},"nodeType":"YulFunctionCall","src":"874:79:15"},"nodeType":"YulExpressionStatement","src":"874:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"847:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"856:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"843:3:15"},"nodeType":"YulFunctionCall","src":"843:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"868:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"839:3:15"},"nodeType":"YulFunctionCall","src":"839:32:15"},"nodeType":"YulIf","src":"836:2:15"},{"nodeType":"YulBlock","src":"965:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"980:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"994:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"984:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1009:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1044:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1055:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:15"},"nodeType":"YulFunctionCall","src":"1040:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1064:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1019:20:15"},"nodeType":"YulFunctionCall","src":"1019:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1009:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"796:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"807:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"819:6:15","type":""}],"src":"760:329:15"},{"body":{"nodeType":"YulBlock","src":"1169:271:15","statements":[{"body":{"nodeType":"YulBlock","src":"1215:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1217:77:15"},"nodeType":"YulFunctionCall","src":"1217:79:15"},"nodeType":"YulExpressionStatement","src":"1217:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1190:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1199:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1186:3:15"},"nodeType":"YulFunctionCall","src":"1186:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1211:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1182:3:15"},"nodeType":"YulFunctionCall","src":"1182:32:15"},"nodeType":"YulIf","src":"1179:2:15"},{"nodeType":"YulBlock","src":"1308:125:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1323:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1337:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1327:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1352:71:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1395:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1406:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1391:3:15"},"nodeType":"YulFunctionCall","src":"1391:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1415:7:15"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"1362:28:15"},"nodeType":"YulFunctionCall","src":"1362:61:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1352:6:15"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1139:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1150:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1162:6:15","type":""}],"src":"1095:345:15"},{"body":{"nodeType":"YulBlock","src":"1525:276:15","statements":[{"body":{"nodeType":"YulBlock","src":"1571:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1573:77:15"},"nodeType":"YulFunctionCall","src":"1573:79:15"},"nodeType":"YulExpressionStatement","src":"1573:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1546:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1555:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1542:3:15"},"nodeType":"YulFunctionCall","src":"1542:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1567:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1538:3:15"},"nodeType":"YulFunctionCall","src":"1538:32:15"},"nodeType":"YulIf","src":"1535:2:15"},{"nodeType":"YulBlock","src":"1664:130:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1679:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1693:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1683:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1708:76:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1756:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1767:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1752:3:15"},"nodeType":"YulFunctionCall","src":"1752:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1776:7:15"}],"functionName":{"name":"abi_decode_t_enum$_Decision_$2699","nodeType":"YulIdentifier","src":"1718:33:15"},"nodeType":"YulFunctionCall","src":"1718:66:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1708:6:15"}]}]}]},"name":"abi_decode_tuple_t_enum$_Decision_$2699","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1495:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1506:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1518:6:15","type":""}],"src":"1446:355:15"},{"body":{"nodeType":"YulBlock","src":"1873:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"1919:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1921:77:15"},"nodeType":"YulFunctionCall","src":"1921:79:15"},"nodeType":"YulExpressionStatement","src":"1921:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1894:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1903:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1890:3:15"},"nodeType":"YulFunctionCall","src":"1890:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1915:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1886:3:15"},"nodeType":"YulFunctionCall","src":"1886:32:15"},"nodeType":"YulIf","src":"1883:2:15"},{"nodeType":"YulBlock","src":"2012:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2027:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2041:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2031:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2056:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2091:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2102:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2087:3:15"},"nodeType":"YulFunctionCall","src":"2087:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2111:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2066:20:15"},"nodeType":"YulFunctionCall","src":"2066:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2056:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1843:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1854:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1866:6:15","type":""}],"src":"1807:329:15"},{"body":{"nodeType":"YulBlock","src":"2219:274:15","statements":[{"body":{"nodeType":"YulBlock","src":"2265:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2267:77:15"},"nodeType":"YulFunctionCall","src":"2267:79:15"},"nodeType":"YulExpressionStatement","src":"2267:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2240:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2249:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2236:3:15"},"nodeType":"YulFunctionCall","src":"2236:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2261:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2232:3:15"},"nodeType":"YulFunctionCall","src":"2232:32:15"},"nodeType":"YulIf","src":"2229:2:15"},{"nodeType":"YulBlock","src":"2358:128:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2373:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2387:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2377:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2402:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2448:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2459:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:15"},"nodeType":"YulFunctionCall","src":"2444:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2468:7:15"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2412:31:15"},"nodeType":"YulFunctionCall","src":"2412:64:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2402:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2189:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2200:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2212:6:15","type":""}],"src":"2142:351:15"},{"body":{"nodeType":"YulBlock","src":"2579:99:15","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2623:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"2631:3:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"2589:33:15"},"nodeType":"YulFunctionCall","src":"2589:46:15"},"nodeType":"YulExpressionStatement","src":"2589:46:15"},{"nodeType":"YulAssignment","src":"2644:28:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2662:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2667:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2658:3:15"},"nodeType":"YulFunctionCall","src":"2658:14:15"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"2644:10:15"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"2552:6:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2560:3:15","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"2568:10:15","type":""}],"src":"2499:179:15"},{"body":{"nodeType":"YulBlock","src":"2739:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2756:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2779:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2761:17:15"},"nodeType":"YulFunctionCall","src":"2761:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2749:6:15"},"nodeType":"YulFunctionCall","src":"2749:37:15"},"nodeType":"YulExpressionStatement","src":"2749:37:15"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2727:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2734:3:15","type":""}],"src":"2684:108:15"},{"body":{"nodeType":"YulBlock","src":"2863:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2880:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2903:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2885:17:15"},"nodeType":"YulFunctionCall","src":"2885:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2873:6:15"},"nodeType":"YulFunctionCall","src":"2873:37:15"},"nodeType":"YulExpressionStatement","src":"2873:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2851:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2858:3:15","type":""}],"src":"2798:118:15"},{"body":{"nodeType":"YulBlock","src":"3076:608:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3086:68:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3148:5:15"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3100:47:15"},"nodeType":"YulFunctionCall","src":"3100:54:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3090:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3163:93:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3244:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"3249:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3170:73:15"},"nodeType":"YulFunctionCall","src":"3170:86:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3163:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"3265:71:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3330:5:15"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3280:49:15"},"nodeType":"YulFunctionCall","src":"3280:56:15"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"3269:7:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3345:21:15","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"3359:7:15"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3349:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3435:224:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3449:34:15","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3476:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3470:5:15"},"nodeType":"YulFunctionCall","src":"3470:13:15"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"3453:13:15","type":""}]},{"nodeType":"YulAssignment","src":"3496:70:15","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"3547:13:15"},{"name":"pos","nodeType":"YulIdentifier","src":"3562:3:15"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"3503:43:15"},"nodeType":"YulFunctionCall","src":"3503:63:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3496:3:15"}]},{"nodeType":"YulAssignment","src":"3579:70:15","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3642:6:15"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3589:52:15"},"nodeType":"YulFunctionCall","src":"3589:60:15"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3579:6:15"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3397:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"3400:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3394:2:15"},"nodeType":"YulFunctionCall","src":"3394:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3408:18:15","statements":[{"nodeType":"YulAssignment","src":"3410:14:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3419:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"3422:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:15"},"nodeType":"YulFunctionCall","src":"3415:9:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"3379:14:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3381:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3390:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3385:1:15","type":""}]}]},"src":"3375:284:15"},{"nodeType":"YulAssignment","src":"3668:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"3675:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3668:3:15"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3055:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3062:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3071:3:15","type":""}],"src":"2952:732:15"},{"body":{"nodeType":"YulBlock","src":"3749:50:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3766:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3786:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3771:14:15"},"nodeType":"YulFunctionCall","src":"3771:21:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3759:6:15"},"nodeType":"YulFunctionCall","src":"3759:34:15"},"nodeType":"YulExpressionStatement","src":"3759:34:15"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3737:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3744:3:15","type":""}],"src":"3690:109:15"},{"body":{"nodeType":"YulBlock","src":"3888:84:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3905:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3959:5:15"}],"functionName":{"name":"convert_t_contract$_ChipToken_$4042_to_t_address","nodeType":"YulIdentifier","src":"3910:48:15"},"nodeType":"YulFunctionCall","src":"3910:55:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3898:6:15"},"nodeType":"YulFunctionCall","src":"3898:68:15"},"nodeType":"YulExpressionStatement","src":"3898:68:15"}]},"name":"abi_encode_t_contract$_ChipToken_$4042_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3876:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3883:3:15","type":""}],"src":"3805:167:15"},{"body":{"nodeType":"YulBlock","src":"4051:74:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4068:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4112:5:15"}],"functionName":{"name":"convert_t_enum$_Stage_$2696_to_t_uint8","nodeType":"YulIdentifier","src":"4073:38:15"},"nodeType":"YulFunctionCall","src":"4073:45:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4061:6:15"},"nodeType":"YulFunctionCall","src":"4061:58:15"},"nodeType":"YulExpressionStatement","src":"4061:58:15"}]},"name":"abi_encode_t_enum$_Stage_$2696_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4039:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4046:3:15","type":""}],"src":"3978:147:15"},{"body":{"nodeType":"YulBlock","src":"4203:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4220:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4263:5:15"}],"functionName":{"name":"convert_t_enum$_Suit_$3808_to_t_uint8","nodeType":"YulIdentifier","src":"4225:37:15"},"nodeType":"YulFunctionCall","src":"4225:44:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4213:6:15"},"nodeType":"YulFunctionCall","src":"4213:57:15"},"nodeType":"YulExpressionStatement","src":"4213:57:15"}]},"name":"abi_encode_t_enum$_Suit_$3808_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4191:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4198:3:15","type":""}],"src":"4131:145:15"},{"body":{"nodeType":"YulBlock","src":"4355:74:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4372:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4416:5:15"}],"functionName":{"name":"convert_t_enum$_Value_$3822_to_t_uint8","nodeType":"YulIdentifier","src":"4377:38:15"},"nodeType":"YulFunctionCall","src":"4377:45:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4365:6:15"},"nodeType":"YulFunctionCall","src":"4365:58:15"},"nodeType":"YulExpressionStatement","src":"4365:58:15"}]},"name":"abi_encode_t_enum$_Value_$3822_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4343:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4350:3:15","type":""}],"src":"4282:147:15"},{"body":{"nodeType":"YulBlock","src":"4581:220:15","statements":[{"nodeType":"YulAssignment","src":"4591:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4657:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4662:2:15","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4598:58:15"},"nodeType":"YulFunctionCall","src":"4598:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4591:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4763:3:15"}],"functionName":{"name":"store_literal_in_memory_4729582300210317519386e2c33d042f822628d35ffe4a24a1a3be85d7a90659","nodeType":"YulIdentifier","src":"4674:88:15"},"nodeType":"YulFunctionCall","src":"4674:93:15"},"nodeType":"YulExpressionStatement","src":"4674:93:15"},{"nodeType":"YulAssignment","src":"4776:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4787:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4792:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4783:3:15"},"nodeType":"YulFunctionCall","src":"4783:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4776:3:15"}]}]},"name":"abi_encode_t_stringliteral_4729582300210317519386e2c33d042f822628d35ffe4a24a1a3be85d7a90659_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4569:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4577:3:15","type":""}],"src":"4435:366:15"},{"body":{"nodeType":"YulBlock","src":"4953:220:15","statements":[{"nodeType":"YulAssignment","src":"4963:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5029:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5034:2:15","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4970:58:15"},"nodeType":"YulFunctionCall","src":"4970:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4963:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5135:3:15"}],"functionName":{"name":"store_literal_in_memory_5d6699e530e9dd524f183c4d5b175f788a143f6bc3aff7a00567e3449129ec2d","nodeType":"YulIdentifier","src":"5046:88:15"},"nodeType":"YulFunctionCall","src":"5046:93:15"},"nodeType":"YulExpressionStatement","src":"5046:93:15"},{"nodeType":"YulAssignment","src":"5148:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5159:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5164:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5155:3:15"},"nodeType":"YulFunctionCall","src":"5155:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5148:3:15"}]}]},"name":"abi_encode_t_stringliteral_5d6699e530e9dd524f183c4d5b175f788a143f6bc3aff7a00567e3449129ec2d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4941:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4949:3:15","type":""}],"src":"4807:366:15"},{"body":{"nodeType":"YulBlock","src":"5325:220:15","statements":[{"nodeType":"YulAssignment","src":"5335:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5401:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5406:2:15","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5342:58:15"},"nodeType":"YulFunctionCall","src":"5342:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5335:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5507:3:15"}],"functionName":{"name":"store_literal_in_memory_6669cbf05ac9a2bdbc39bd2c35d6190d0ab62096810aaf391c891b31657c165b","nodeType":"YulIdentifier","src":"5418:88:15"},"nodeType":"YulFunctionCall","src":"5418:93:15"},"nodeType":"YulExpressionStatement","src":"5418:93:15"},{"nodeType":"YulAssignment","src":"5520:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5531:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5536:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5527:3:15"},"nodeType":"YulFunctionCall","src":"5527:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5520:3:15"}]}]},"name":"abi_encode_t_stringliteral_6669cbf05ac9a2bdbc39bd2c35d6190d0ab62096810aaf391c891b31657c165b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5313:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5321:3:15","type":""}],"src":"5179:366:15"},{"body":{"nodeType":"YulBlock","src":"5697:220:15","statements":[{"nodeType":"YulAssignment","src":"5707:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5773:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5778:2:15","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5714:58:15"},"nodeType":"YulFunctionCall","src":"5714:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5707:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5879:3:15"}],"functionName":{"name":"store_literal_in_memory_8c112c2c291568ca6f3d9c3c61df5a6f2303477385bfcf06fd59e47a00d5aabe","nodeType":"YulIdentifier","src":"5790:88:15"},"nodeType":"YulFunctionCall","src":"5790:93:15"},"nodeType":"YulExpressionStatement","src":"5790:93:15"},{"nodeType":"YulAssignment","src":"5892:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5903:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5908:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5899:3:15"},"nodeType":"YulFunctionCall","src":"5899:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5892:3:15"}]}]},"name":"abi_encode_t_stringliteral_8c112c2c291568ca6f3d9c3c61df5a6f2303477385bfcf06fd59e47a00d5aabe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5685:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5693:3:15","type":""}],"src":"5551:366:15"},{"body":{"nodeType":"YulBlock","src":"6069:220:15","statements":[{"nodeType":"YulAssignment","src":"6079:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6145:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6150:2:15","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6086:58:15"},"nodeType":"YulFunctionCall","src":"6086:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6079:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6251:3:15"}],"functionName":{"name":"store_literal_in_memory_a3714162b69248b942e118568224bd8b2918be54473f7d7d5590bf84889f0c81","nodeType":"YulIdentifier","src":"6162:88:15"},"nodeType":"YulFunctionCall","src":"6162:93:15"},"nodeType":"YulExpressionStatement","src":"6162:93:15"},{"nodeType":"YulAssignment","src":"6264:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6275:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6280:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6271:3:15"},"nodeType":"YulFunctionCall","src":"6271:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6264:3:15"}]}]},"name":"abi_encode_t_stringliteral_a3714162b69248b942e118568224bd8b2918be54473f7d7d5590bf84889f0c81_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6057:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6065:3:15","type":""}],"src":"5923:366:15"},{"body":{"nodeType":"YulBlock","src":"6441:220:15","statements":[{"nodeType":"YulAssignment","src":"6451:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6517:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6522:2:15","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6458:58:15"},"nodeType":"YulFunctionCall","src":"6458:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6451:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6623:3:15"}],"functionName":{"name":"store_literal_in_memory_e02d50271d73d7c8ce2a6e39a212f5f5f38fe7f65273b1e97d4785b3b1d016ba","nodeType":"YulIdentifier","src":"6534:88:15"},"nodeType":"YulFunctionCall","src":"6534:93:15"},"nodeType":"YulExpressionStatement","src":"6534:93:15"},{"nodeType":"YulAssignment","src":"6636:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6647:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6652:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6643:3:15"},"nodeType":"YulFunctionCall","src":"6643:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6636:3:15"}]}]},"name":"abi_encode_t_stringliteral_e02d50271d73d7c8ce2a6e39a212f5f5f38fe7f65273b1e97d4785b3b1d016ba_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6429:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6437:3:15","type":""}],"src":"6295:366:15"},{"body":{"nodeType":"YulBlock","src":"6813:220:15","statements":[{"nodeType":"YulAssignment","src":"6823:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6889:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6894:2:15","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6830:58:15"},"nodeType":"YulFunctionCall","src":"6830:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6823:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6995:3:15"}],"functionName":{"name":"store_literal_in_memory_e11ebc4aafe537e8acf88f6368431f06bd2b0b97e24ae3cacf1f0bf4cfa0f983","nodeType":"YulIdentifier","src":"6906:88:15"},"nodeType":"YulFunctionCall","src":"6906:93:15"},"nodeType":"YulExpressionStatement","src":"6906:93:15"},{"nodeType":"YulAssignment","src":"7008:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7019:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7024:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7015:3:15"},"nodeType":"YulFunctionCall","src":"7015:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7008:3:15"}]}]},"name":"abi_encode_t_stringliteral_e11ebc4aafe537e8acf88f6368431f06bd2b0b97e24ae3cacf1f0bf4cfa0f983_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6801:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6809:3:15","type":""}],"src":"6667:366:15"},{"body":{"nodeType":"YulBlock","src":"7185:220:15","statements":[{"nodeType":"YulAssignment","src":"7195:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7261:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7266:2:15","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7202:58:15"},"nodeType":"YulFunctionCall","src":"7202:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7195:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7367:3:15"}],"functionName":{"name":"store_literal_in_memory_e63d888be4e1175799600edb323a027a3e52a00c90f6ebab550c279f67bcae2f","nodeType":"YulIdentifier","src":"7278:88:15"},"nodeType":"YulFunctionCall","src":"7278:93:15"},"nodeType":"YulExpressionStatement","src":"7278:93:15"},{"nodeType":"YulAssignment","src":"7380:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7391:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7396:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7387:3:15"},"nodeType":"YulFunctionCall","src":"7387:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7380:3:15"}]}]},"name":"abi_encode_t_stringliteral_e63d888be4e1175799600edb323a027a3e52a00c90f6ebab550c279f67bcae2f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7173:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7181:3:15","type":""}],"src":"7039:366:15"},{"body":{"nodeType":"YulBlock","src":"7557:220:15","statements":[{"nodeType":"YulAssignment","src":"7567:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7633:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7638:2:15","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7574:58:15"},"nodeType":"YulFunctionCall","src":"7574:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7567:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7739:3:15"}],"functionName":{"name":"store_literal_in_memory_fb424d949b90a0ecc5faf0b3504332a29e0aab59c576878f0bd384215021dd88","nodeType":"YulIdentifier","src":"7650:88:15"},"nodeType":"YulFunctionCall","src":"7650:93:15"},"nodeType":"YulExpressionStatement","src":"7650:93:15"},{"nodeType":"YulAssignment","src":"7752:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7763:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7768:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7759:3:15"},"nodeType":"YulFunctionCall","src":"7759:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7752:3:15"}]}]},"name":"abi_encode_t_stringliteral_fb424d949b90a0ecc5faf0b3504332a29e0aab59c576878f0bd384215021dd88_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7545:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7553:3:15","type":""}],"src":"7411:366:15"},{"body":{"nodeType":"YulBlock","src":"7848:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7865:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7888:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7870:17:15"},"nodeType":"YulFunctionCall","src":"7870:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7858:6:15"},"nodeType":"YulFunctionCall","src":"7858:37:15"},"nodeType":"YulExpressionStatement","src":"7858:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7836:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7843:3:15","type":""}],"src":"7783:118:15"},{"body":{"nodeType":"YulBlock","src":"7990:74:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8007:3:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8050:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8032:17:15"},"nodeType":"YulFunctionCall","src":"8032:24:15"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"8012:19:15"},"nodeType":"YulFunctionCall","src":"8012:45:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8000:6:15"},"nodeType":"YulFunctionCall","src":"8000:58:15"},"nodeType":"YulExpressionStatement","src":"8000:58:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7978:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7985:3:15","type":""}],"src":"7907:157:15"},{"body":{"nodeType":"YulBlock","src":"8214:253:15","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8287:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"8296:3:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8225:61:15"},"nodeType":"YulFunctionCall","src":"8225:75:15"},"nodeType":"YulExpressionStatement","src":"8225:75:15"},{"nodeType":"YulAssignment","src":"8309:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8320:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8325:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8316:3:15"},"nodeType":"YulFunctionCall","src":"8316:12:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8309:3:15"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8400:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"8409:3:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8338:61:15"},"nodeType":"YulFunctionCall","src":"8338:75:15"},"nodeType":"YulExpressionStatement","src":"8338:75:15"},{"nodeType":"YulAssignment","src":"8422:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8433:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8438:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8429:3:15"},"nodeType":"YulFunctionCall","src":"8429:12:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8422:3:15"}]},{"nodeType":"YulAssignment","src":"8451:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"8458:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8451:3:15"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8185:3:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8191:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8199:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8210:3:15","type":""}],"src":"8070:397:15"},{"body":{"nodeType":"YulBlock","src":"8571:124:15","statements":[{"nodeType":"YulAssignment","src":"8581:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8593:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8604:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8589:3:15"},"nodeType":"YulFunctionCall","src":"8589:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8581:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8661:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8674:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8685:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8670:3:15"},"nodeType":"YulFunctionCall","src":"8670:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8617:43:15"},"nodeType":"YulFunctionCall","src":"8617:71:15"},"nodeType":"YulExpressionStatement","src":"8617:71:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8543:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8555:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8566:4:15","type":""}],"src":"8473:222:15"},{"body":{"nodeType":"YulBlock","src":"8855:288:15","statements":[{"nodeType":"YulAssignment","src":"8865:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8877:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8888:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8873:3:15"},"nodeType":"YulFunctionCall","src":"8873:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8865:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8945:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8958:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8969:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8954:3:15"},"nodeType":"YulFunctionCall","src":"8954:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8901:43:15"},"nodeType":"YulFunctionCall","src":"8901:71:15"},"nodeType":"YulExpressionStatement","src":"8901:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9026:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9039:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9050:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9035:3:15"},"nodeType":"YulFunctionCall","src":"9035:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8982:43:15"},"nodeType":"YulFunctionCall","src":"8982:72:15"},"nodeType":"YulExpressionStatement","src":"8982:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9108:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9121:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9132:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9117:3:15"},"nodeType":"YulFunctionCall","src":"9117:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9064:43:15"},"nodeType":"YulFunctionCall","src":"9064:72:15"},"nodeType":"YulExpressionStatement","src":"9064:72:15"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8811:9:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8823:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8831:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8839:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8850:4:15","type":""}],"src":"8701:442:15"},{"body":{"nodeType":"YulBlock","src":"9318:303:15","statements":[{"nodeType":"YulAssignment","src":"9328:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9340:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9351:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9336:3:15"},"nodeType":"YulFunctionCall","src":"9336:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9328:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9408:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9421:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9432:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9417:3:15"},"nodeType":"YulFunctionCall","src":"9417:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9364:43:15"},"nodeType":"YulFunctionCall","src":"9364:71:15"},"nodeType":"YulExpressionStatement","src":"9364:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9496:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9509:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9520:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9505:3:15"},"nodeType":"YulFunctionCall","src":"9505:18:15"}],"functionName":{"name":"abi_encode_t_enum$_Suit_$3808_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"9445:50:15"},"nodeType":"YulFunctionCall","src":"9445:79:15"},"nodeType":"YulExpressionStatement","src":"9445:79:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9586:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9599:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9610:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9595:3:15"},"nodeType":"YulFunctionCall","src":"9595:18:15"}],"functionName":{"name":"abi_encode_t_enum$_Value_$3822_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"9534:51:15"},"nodeType":"YulFunctionCall","src":"9534:80:15"},"nodeType":"YulExpressionStatement","src":"9534:80:15"}]},"name":"abi_encode_tuple_t_address_t_enum$_Suit_$3808_t_enum$_Value_$3822__to_t_address_t_uint8_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9274:9:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9286:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9294:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9302:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9313:4:15","type":""}],"src":"9149:472:15"},{"body":{"nodeType":"YulBlock","src":"9753:206:15","statements":[{"nodeType":"YulAssignment","src":"9763:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9775:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9786:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9771:3:15"},"nodeType":"YulFunctionCall","src":"9771:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9763:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9843:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9856:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9867:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9852:3:15"},"nodeType":"YulFunctionCall","src":"9852:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9799:43:15"},"nodeType":"YulFunctionCall","src":"9799:71:15"},"nodeType":"YulExpressionStatement","src":"9799:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9924:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9937:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9948:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9933:3:15"},"nodeType":"YulFunctionCall","src":"9933:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9880:43:15"},"nodeType":"YulFunctionCall","src":"9880:72:15"},"nodeType":"YulExpressionStatement","src":"9880:72:15"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9717:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9729:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9737:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9748:4:15","type":""}],"src":"9627:332:15"},{"body":{"nodeType":"YulBlock","src":"10261:646:15","statements":[{"nodeType":"YulAssignment","src":"10271:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10283:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10294:3:15","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10279:3:15"},"nodeType":"YulFunctionCall","src":"10279:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10271:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10352:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10365:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10376:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10361:3:15"},"nodeType":"YulFunctionCall","src":"10361:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10308:43:15"},"nodeType":"YulFunctionCall","src":"10308:71:15"},"nodeType":"YulExpressionStatement","src":"10308:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10433:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10446:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10457:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10442:3:15"},"nodeType":"YulFunctionCall","src":"10442:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10389:43:15"},"nodeType":"YulFunctionCall","src":"10389:72:15"},"nodeType":"YulExpressionStatement","src":"10389:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10515:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10528:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10539:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10524:3:15"},"nodeType":"YulFunctionCall","src":"10524:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10471:43:15"},"nodeType":"YulFunctionCall","src":"10471:72:15"},"nodeType":"YulExpressionStatement","src":"10471:72:15"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10597:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10610:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10621:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10606:3:15"},"nodeType":"YulFunctionCall","src":"10606:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10553:43:15"},"nodeType":"YulFunctionCall","src":"10553:72:15"},"nodeType":"YulExpressionStatement","src":"10553:72:15"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10687:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10700:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10711:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10696:3:15"},"nodeType":"YulFunctionCall","src":"10696:19:15"}],"functionName":{"name":"abi_encode_t_enum$_Stage_$2696_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"10635:51:15"},"nodeType":"YulFunctionCall","src":"10635:81:15"},"nodeType":"YulExpressionStatement","src":"10635:81:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10737:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10748:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10733:3:15"},"nodeType":"YulFunctionCall","src":"10733:19:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10758:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"10764:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10754:3:15"},"nodeType":"YulFunctionCall","src":"10754:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10726:6:15"},"nodeType":"YulFunctionCall","src":"10726:49:15"},"nodeType":"YulExpressionStatement","src":"10726:49:15"},{"nodeType":"YulAssignment","src":"10784:116:15","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"10886:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"10895:4:15"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10792:93:15"},"nodeType":"YulFunctionCall","src":"10792:108:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10784:4:15"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_enum$_Stage_$2696_t_array$_t_address_$dyn_memory_ptr__to_t_address_t_uint256_t_uint256_t_uint256_t_uint8_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10193:9:15","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10205:6:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10213:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10221:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10229:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10237:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10245:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10256:4:15","type":""}],"src":"9965:942:15"},{"body":{"nodeType":"YulBlock","src":"11105:436:15","statements":[{"nodeType":"YulAssignment","src":"11115:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11127:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11138:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11123:3:15"},"nodeType":"YulFunctionCall","src":"11123:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11115:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11190:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11203:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11214:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11199:3:15"},"nodeType":"YulFunctionCall","src":"11199:17:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"11152:37:15"},"nodeType":"YulFunctionCall","src":"11152:65:15"},"nodeType":"YulExpressionStatement","src":"11152:65:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11265:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11278:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11289:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11274:3:15"},"nodeType":"YulFunctionCall","src":"11274:18:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"11227:37:15"},"nodeType":"YulFunctionCall","src":"11227:66:15"},"nodeType":"YulExpressionStatement","src":"11227:66:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11341:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11354:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11365:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11350:3:15"},"nodeType":"YulFunctionCall","src":"11350:18:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"11303:37:15"},"nodeType":"YulFunctionCall","src":"11303:66:15"},"nodeType":"YulExpressionStatement","src":"11303:66:15"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11423:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11436:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11447:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11432:3:15"},"nodeType":"YulFunctionCall","src":"11432:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11379:43:15"},"nodeType":"YulFunctionCall","src":"11379:72:15"},"nodeType":"YulExpressionStatement","src":"11379:72:15"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"11505:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11518:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11529:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11514:3:15"},"nodeType":"YulFunctionCall","src":"11514:19:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11461:43:15"},"nodeType":"YulFunctionCall","src":"11461:73:15"},"nodeType":"YulExpressionStatement","src":"11461:73:15"}]},"name":"abi_encode_tuple_t_bool_t_bool_t_bool_t_uint256_t_uint256__to_t_bool_t_bool_t_bool_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11045:9:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11057:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11065:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11073:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11081:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11089:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11100:4:15","type":""}],"src":"10913:628:15"},{"body":{"nodeType":"YulBlock","src":"11717:359:15","statements":[{"nodeType":"YulAssignment","src":"11727:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11739:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11750:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11735:3:15"},"nodeType":"YulFunctionCall","src":"11735:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11727:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11802:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11815:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11826:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11811:3:15"},"nodeType":"YulFunctionCall","src":"11811:17:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"11764:37:15"},"nodeType":"YulFunctionCall","src":"11764:65:15"},"nodeType":"YulExpressionStatement","src":"11764:65:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11877:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11890:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11901:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11886:3:15"},"nodeType":"YulFunctionCall","src":"11886:18:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"11839:37:15"},"nodeType":"YulFunctionCall","src":"11839:66:15"},"nodeType":"YulExpressionStatement","src":"11839:66:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11959:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11972:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11983:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11968:3:15"},"nodeType":"YulFunctionCall","src":"11968:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11915:43:15"},"nodeType":"YulFunctionCall","src":"11915:72:15"},"nodeType":"YulExpressionStatement","src":"11915:72:15"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12041:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12054:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12065:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12050:3:15"},"nodeType":"YulFunctionCall","src":"12050:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11997:43:15"},"nodeType":"YulFunctionCall","src":"11997:72:15"},"nodeType":"YulExpressionStatement","src":"11997:72:15"}]},"name":"abi_encode_tuple_t_bool_t_bool_t_uint256_t_uint256__to_t_bool_t_bool_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11665:9:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11677:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11685:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11693:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11701:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11712:4:15","type":""}],"src":"11547:529:15"},{"body":{"nodeType":"YulBlock","src":"12198:142:15","statements":[{"nodeType":"YulAssignment","src":"12208:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12220:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12231:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12216:3:15"},"nodeType":"YulFunctionCall","src":"12216:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12208:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12306:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12319:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12330:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12315:3:15"},"nodeType":"YulFunctionCall","src":"12315:17:15"}],"functionName":{"name":"abi_encode_t_contract$_ChipToken_$4042_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12244:61:15"},"nodeType":"YulFunctionCall","src":"12244:89:15"},"nodeType":"YulExpressionStatement","src":"12244:89:15"}]},"name":"abi_encode_tuple_t_contract$_ChipToken_$4042__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12170:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12182:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12193:4:15","type":""}],"src":"12082:258:15"},{"body":{"nodeType":"YulBlock","src":"12452:132:15","statements":[{"nodeType":"YulAssignment","src":"12462:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12474:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12485:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12470:3:15"},"nodeType":"YulFunctionCall","src":"12470:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12462:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12550:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12563:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12574:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12559:3:15"},"nodeType":"YulFunctionCall","src":"12559:17:15"}],"functionName":{"name":"abi_encode_t_enum$_Stage_$2696_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"12498:51:15"},"nodeType":"YulFunctionCall","src":"12498:79:15"},"nodeType":"YulExpressionStatement","src":"12498:79:15"}]},"name":"abi_encode_tuple_t_enum$_Stage_$2696__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12424:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12436:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12447:4:15","type":""}],"src":"12346:238:15"},{"body":{"nodeType":"YulBlock","src":"12761:248:15","statements":[{"nodeType":"YulAssignment","src":"12771:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12783:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12794:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12779:3:15"},"nodeType":"YulFunctionCall","src":"12779:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12771:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12818:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12829:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12814:3:15"},"nodeType":"YulFunctionCall","src":"12814:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12837:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"12843:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12833:3:15"},"nodeType":"YulFunctionCall","src":"12833:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12807:6:15"},"nodeType":"YulFunctionCall","src":"12807:47:15"},"nodeType":"YulExpressionStatement","src":"12807:47:15"},{"nodeType":"YulAssignment","src":"12863:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12997:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_4729582300210317519386e2c33d042f822628d35ffe4a24a1a3be85d7a90659_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12871:124:15"},"nodeType":"YulFunctionCall","src":"12871:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12863:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_4729582300210317519386e2c33d042f822628d35ffe4a24a1a3be85d7a90659__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12741:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12756:4:15","type":""}],"src":"12590:419:15"},{"body":{"nodeType":"YulBlock","src":"13186:248:15","statements":[{"nodeType":"YulAssignment","src":"13196:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13208:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13219:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13204:3:15"},"nodeType":"YulFunctionCall","src":"13204:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13196:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13243:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13254:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13239:3:15"},"nodeType":"YulFunctionCall","src":"13239:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13262:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13268:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13258:3:15"},"nodeType":"YulFunctionCall","src":"13258:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13232:6:15"},"nodeType":"YulFunctionCall","src":"13232:47:15"},"nodeType":"YulExpressionStatement","src":"13232:47:15"},{"nodeType":"YulAssignment","src":"13288:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13422:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_5d6699e530e9dd524f183c4d5b175f788a143f6bc3aff7a00567e3449129ec2d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13296:124:15"},"nodeType":"YulFunctionCall","src":"13296:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13288:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d6699e530e9dd524f183c4d5b175f788a143f6bc3aff7a00567e3449129ec2d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13166:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13181:4:15","type":""}],"src":"13015:419:15"},{"body":{"nodeType":"YulBlock","src":"13611:248:15","statements":[{"nodeType":"YulAssignment","src":"13621:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13633:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13644:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13629:3:15"},"nodeType":"YulFunctionCall","src":"13629:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13621:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13668:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13679:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13664:3:15"},"nodeType":"YulFunctionCall","src":"13664:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13687:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13693:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13683:3:15"},"nodeType":"YulFunctionCall","src":"13683:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13657:6:15"},"nodeType":"YulFunctionCall","src":"13657:47:15"},"nodeType":"YulExpressionStatement","src":"13657:47:15"},{"nodeType":"YulAssignment","src":"13713:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13847:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_6669cbf05ac9a2bdbc39bd2c35d6190d0ab62096810aaf391c891b31657c165b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13721:124:15"},"nodeType":"YulFunctionCall","src":"13721:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13713:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_6669cbf05ac9a2bdbc39bd2c35d6190d0ab62096810aaf391c891b31657c165b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13591:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13606:4:15","type":""}],"src":"13440:419:15"},{"body":{"nodeType":"YulBlock","src":"14036:248:15","statements":[{"nodeType":"YulAssignment","src":"14046:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14058:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14069:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14054:3:15"},"nodeType":"YulFunctionCall","src":"14054:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14046:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14093:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14104:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14089:3:15"},"nodeType":"YulFunctionCall","src":"14089:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14112:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"14118:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14108:3:15"},"nodeType":"YulFunctionCall","src":"14108:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14082:6:15"},"nodeType":"YulFunctionCall","src":"14082:47:15"},"nodeType":"YulExpressionStatement","src":"14082:47:15"},{"nodeType":"YulAssignment","src":"14138:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14272:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_8c112c2c291568ca6f3d9c3c61df5a6f2303477385bfcf06fd59e47a00d5aabe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14146:124:15"},"nodeType":"YulFunctionCall","src":"14146:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14138:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_8c112c2c291568ca6f3d9c3c61df5a6f2303477385bfcf06fd59e47a00d5aabe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14016:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14031:4:15","type":""}],"src":"13865:419:15"},{"body":{"nodeType":"YulBlock","src":"14461:248:15","statements":[{"nodeType":"YulAssignment","src":"14471:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14483:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14494:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14479:3:15"},"nodeType":"YulFunctionCall","src":"14479:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14471:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14518:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14529:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14514:3:15"},"nodeType":"YulFunctionCall","src":"14514:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14537:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"14543:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14533:3:15"},"nodeType":"YulFunctionCall","src":"14533:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14507:6:15"},"nodeType":"YulFunctionCall","src":"14507:47:15"},"nodeType":"YulExpressionStatement","src":"14507:47:15"},{"nodeType":"YulAssignment","src":"14563:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14697:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_a3714162b69248b942e118568224bd8b2918be54473f7d7d5590bf84889f0c81_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14571:124:15"},"nodeType":"YulFunctionCall","src":"14571:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14563:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_a3714162b69248b942e118568224bd8b2918be54473f7d7d5590bf84889f0c81__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14441:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14456:4:15","type":""}],"src":"14290:419:15"},{"body":{"nodeType":"YulBlock","src":"14886:248:15","statements":[{"nodeType":"YulAssignment","src":"14896:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14908:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14919:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14904:3:15"},"nodeType":"YulFunctionCall","src":"14904:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14896:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14943:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14954:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14939:3:15"},"nodeType":"YulFunctionCall","src":"14939:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14962:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"14968:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14958:3:15"},"nodeType":"YulFunctionCall","src":"14958:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14932:6:15"},"nodeType":"YulFunctionCall","src":"14932:47:15"},"nodeType":"YulExpressionStatement","src":"14932:47:15"},{"nodeType":"YulAssignment","src":"14988:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15122:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_e02d50271d73d7c8ce2a6e39a212f5f5f38fe7f65273b1e97d4785b3b1d016ba_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14996:124:15"},"nodeType":"YulFunctionCall","src":"14996:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14988:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_e02d50271d73d7c8ce2a6e39a212f5f5f38fe7f65273b1e97d4785b3b1d016ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14866:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14881:4:15","type":""}],"src":"14715:419:15"},{"body":{"nodeType":"YulBlock","src":"15311:248:15","statements":[{"nodeType":"YulAssignment","src":"15321:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15333:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15344:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15329:3:15"},"nodeType":"YulFunctionCall","src":"15329:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15321:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15368:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15379:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15364:3:15"},"nodeType":"YulFunctionCall","src":"15364:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15387:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"15393:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15383:3:15"},"nodeType":"YulFunctionCall","src":"15383:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15357:6:15"},"nodeType":"YulFunctionCall","src":"15357:47:15"},"nodeType":"YulExpressionStatement","src":"15357:47:15"},{"nodeType":"YulAssignment","src":"15413:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15547:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_e11ebc4aafe537e8acf88f6368431f06bd2b0b97e24ae3cacf1f0bf4cfa0f983_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15421:124:15"},"nodeType":"YulFunctionCall","src":"15421:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15413:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ebc4aafe537e8acf88f6368431f06bd2b0b97e24ae3cacf1f0bf4cfa0f983__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15291:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15306:4:15","type":""}],"src":"15140:419:15"},{"body":{"nodeType":"YulBlock","src":"15736:248:15","statements":[{"nodeType":"YulAssignment","src":"15746:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15758:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15769:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15754:3:15"},"nodeType":"YulFunctionCall","src":"15754:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15746:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15793:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15804:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15789:3:15"},"nodeType":"YulFunctionCall","src":"15789:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15812:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"15818:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15808:3:15"},"nodeType":"YulFunctionCall","src":"15808:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15782:6:15"},"nodeType":"YulFunctionCall","src":"15782:47:15"},"nodeType":"YulExpressionStatement","src":"15782:47:15"},{"nodeType":"YulAssignment","src":"15838:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15972:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_e63d888be4e1175799600edb323a027a3e52a00c90f6ebab550c279f67bcae2f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15846:124:15"},"nodeType":"YulFunctionCall","src":"15846:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15838:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_e63d888be4e1175799600edb323a027a3e52a00c90f6ebab550c279f67bcae2f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15716:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15731:4:15","type":""}],"src":"15565:419:15"},{"body":{"nodeType":"YulBlock","src":"16161:248:15","statements":[{"nodeType":"YulAssignment","src":"16171:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16183:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16194:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16179:3:15"},"nodeType":"YulFunctionCall","src":"16179:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16171:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16218:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16229:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16214:3:15"},"nodeType":"YulFunctionCall","src":"16214:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16237:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"16243:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16233:3:15"},"nodeType":"YulFunctionCall","src":"16233:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16207:6:15"},"nodeType":"YulFunctionCall","src":"16207:47:15"},"nodeType":"YulExpressionStatement","src":"16207:47:15"},{"nodeType":"YulAssignment","src":"16263:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16397:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_fb424d949b90a0ecc5faf0b3504332a29e0aab59c576878f0bd384215021dd88_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16271:124:15"},"nodeType":"YulFunctionCall","src":"16271:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16263:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb424d949b90a0ecc5faf0b3504332a29e0aab59c576878f0bd384215021dd88__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16141:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16156:4:15","type":""}],"src":"15990:419:15"},{"body":{"nodeType":"YulBlock","src":"16513:124:15","statements":[{"nodeType":"YulAssignment","src":"16523:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16535:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16546:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16531:3:15"},"nodeType":"YulFunctionCall","src":"16531:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16523:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16603:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16616:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16627:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16612:3:15"},"nodeType":"YulFunctionCall","src":"16612:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16559:43:15"},"nodeType":"YulFunctionCall","src":"16559:71:15"},"nodeType":"YulExpressionStatement","src":"16559:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16485:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16497:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16508:4:15","type":""}],"src":"16415:222:15"},{"body":{"nodeType":"YulBlock","src":"16683:35:15","statements":[{"nodeType":"YulAssignment","src":"16693:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16709:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16703:5:15"},"nodeType":"YulFunctionCall","src":"16703:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16693:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16676:6:15","type":""}],"src":"16643:75:15"},{"body":{"nodeType":"YulBlock","src":"16796:60:15","statements":[{"nodeType":"YulAssignment","src":"16806:11:15","value":{"name":"ptr","nodeType":"YulIdentifier","src":"16814:3:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16806:4:15"}]},{"nodeType":"YulAssignment","src":"16827:22:15","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16839:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"16844:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16835:3:15"},"nodeType":"YulFunctionCall","src":"16835:14:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16827:4:15"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16783:3:15","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"16791:4:15","type":""}],"src":"16724:132:15"},{"body":{"nodeType":"YulBlock","src":"16936:40:15","statements":[{"nodeType":"YulAssignment","src":"16947:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16963:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16957:5:15"},"nodeType":"YulFunctionCall","src":"16957:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16947:6:15"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16919:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16929:6:15","type":""}],"src":"16862:114:15"},{"body":{"nodeType":"YulBlock","src":"17057:38:15","statements":[{"nodeType":"YulAssignment","src":"17067:22:15","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"17079:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"17084:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17075:3:15"},"nodeType":"YulFunctionCall","src":"17075:14:15"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"17067:4:15"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17044:3:15","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"17052:4:15","type":""}],"src":"16982:113:15"},{"body":{"nodeType":"YulBlock","src":"17212:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17229:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"17234:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17222:6:15"},"nodeType":"YulFunctionCall","src":"17222:19:15"},"nodeType":"YulExpressionStatement","src":"17222:19:15"},{"nodeType":"YulAssignment","src":"17250:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17269:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"17274:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17265:3:15"},"nodeType":"YulFunctionCall","src":"17265:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17250:11:15"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17184:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"17189:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17200:11:15","type":""}],"src":"17101:184:15"},{"body":{"nodeType":"YulBlock","src":"17387:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17404:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"17409:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17397:6:15"},"nodeType":"YulFunctionCall","src":"17397:19:15"},"nodeType":"YulExpressionStatement","src":"17397:19:15"},{"nodeType":"YulAssignment","src":"17425:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17444:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"17449:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17440:3:15"},"nodeType":"YulFunctionCall","src":"17440:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17425:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17359:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"17364:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17375:11:15","type":""}],"src":"17291:169:15"},{"body":{"nodeType":"YulBlock","src":"17510:261:15","statements":[{"nodeType":"YulAssignment","src":"17520:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17543:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17525:17:15"},"nodeType":"YulFunctionCall","src":"17525:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17520:1:15"}]},{"nodeType":"YulAssignment","src":"17554:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17577:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17559:17:15"},"nodeType":"YulFunctionCall","src":"17559:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17554:1:15"}]},{"body":{"nodeType":"YulBlock","src":"17717:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17719:16:15"},"nodeType":"YulFunctionCall","src":"17719:18:15"},"nodeType":"YulExpressionStatement","src":"17719:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17638:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17645:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"17713:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17641:3:15"},"nodeType":"YulFunctionCall","src":"17641:74:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17635:2:15"},"nodeType":"YulFunctionCall","src":"17635:81:15"},"nodeType":"YulIf","src":"17632:2:15"},{"nodeType":"YulAssignment","src":"17749:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17760:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"17763:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17756:3:15"},"nodeType":"YulFunctionCall","src":"17756:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17749:3:15"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17497:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"17500:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17506:3:15","type":""}],"src":"17466:305:15"},{"body":{"nodeType":"YulBlock","src":"17819:143:15","statements":[{"nodeType":"YulAssignment","src":"17829:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17852:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17834:17:15"},"nodeType":"YulFunctionCall","src":"17834:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17829:1:15"}]},{"nodeType":"YulAssignment","src":"17863:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17886:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17868:17:15"},"nodeType":"YulFunctionCall","src":"17868:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17863:1:15"}]},{"body":{"nodeType":"YulBlock","src":"17910:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"17912:16:15"},"nodeType":"YulFunctionCall","src":"17912:18:15"},"nodeType":"YulExpressionStatement","src":"17912:18:15"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17907:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17900:6:15"},"nodeType":"YulFunctionCall","src":"17900:9:15"},"nodeType":"YulIf","src":"17897:2:15"},{"nodeType":"YulAssignment","src":"17942:14:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17951:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"17954:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17947:3:15"},"nodeType":"YulFunctionCall","src":"17947:9:15"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"17942:1:15"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17808:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"17811:1:15","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"17817:1:15","type":""}],"src":"17777:185:15"},{"body":{"nodeType":"YulBlock","src":"18016:300:15","statements":[{"nodeType":"YulAssignment","src":"18026:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18049:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18031:17:15"},"nodeType":"YulFunctionCall","src":"18031:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18026:1:15"}]},{"nodeType":"YulAssignment","src":"18060:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18083:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18065:17:15"},"nodeType":"YulFunctionCall","src":"18065:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18060:1:15"}]},{"body":{"nodeType":"YulBlock","src":"18258:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18260:16:15"},"nodeType":"YulFunctionCall","src":"18260:18:15"},"nodeType":"YulExpressionStatement","src":"18260:18:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18170:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18163:6:15"},"nodeType":"YulFunctionCall","src":"18163:9:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18156:6:15"},"nodeType":"YulFunctionCall","src":"18156:17:15"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18178:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18185:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"18253:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18181:3:15"},"nodeType":"YulFunctionCall","src":"18181:74:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18175:2:15"},"nodeType":"YulFunctionCall","src":"18175:81:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18152:3:15"},"nodeType":"YulFunctionCall","src":"18152:105:15"},"nodeType":"YulIf","src":"18149:2:15"},{"nodeType":"YulAssignment","src":"18290:20:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18305:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"18308:1:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18301:3:15"},"nodeType":"YulFunctionCall","src":"18301:9:15"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"18290:7:15"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17999:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"18002:1:15","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"18008:7:15","type":""}],"src":"17968:348:15"},{"body":{"nodeType":"YulBlock","src":"18367:146:15","statements":[{"nodeType":"YulAssignment","src":"18377:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18400:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18382:17:15"},"nodeType":"YulFunctionCall","src":"18382:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18377:1:15"}]},{"nodeType":"YulAssignment","src":"18411:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18434:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18416:17:15"},"nodeType":"YulFunctionCall","src":"18416:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18411:1:15"}]},{"body":{"nodeType":"YulBlock","src":"18458:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18460:16:15"},"nodeType":"YulFunctionCall","src":"18460:18:15"},"nodeType":"YulExpressionStatement","src":"18460:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18452:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"18455:1:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18449:2:15"},"nodeType":"YulFunctionCall","src":"18449:8:15"},"nodeType":"YulIf","src":"18446:2:15"},{"nodeType":"YulAssignment","src":"18490:17:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18502:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"18505:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18498:3:15"},"nodeType":"YulFunctionCall","src":"18498:9:15"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"18490:4:15"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18353:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"18356:1:15","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"18362:4:15","type":""}],"src":"18322:191:15"},{"body":{"nodeType":"YulBlock","src":"18564:51:15","statements":[{"nodeType":"YulAssignment","src":"18574:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18603:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"18585:17:15"},"nodeType":"YulFunctionCall","src":"18585:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18574:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18546:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18556:7:15","type":""}],"src":"18519:96:15"},{"body":{"nodeType":"YulBlock","src":"18663:48:15","statements":[{"nodeType":"YulAssignment","src":"18673:32:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18698:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18691:6:15"},"nodeType":"YulFunctionCall","src":"18691:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18684:6:15"},"nodeType":"YulFunctionCall","src":"18684:21:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18673:7:15"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18645:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18655:7:15","type":""}],"src":"18621:90:15"},{"body":{"nodeType":"YulBlock","src":"18772:76:15","statements":[{"nodeType":"YulAssignment","src":"18782:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"18793:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18782:7:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18836:5:15"}],"functionName":{"name":"validator_assert_t_enum$_Stage_$2696","nodeType":"YulIdentifier","src":"18799:36:15"},"nodeType":"YulFunctionCall","src":"18799:43:15"},"nodeType":"YulExpressionStatement","src":"18799:43:15"}]},"name":"cleanup_t_enum$_Stage_$2696","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18754:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18764:7:15","type":""}],"src":"18717:131:15"},{"body":{"nodeType":"YulBlock","src":"18908:75:15","statements":[{"nodeType":"YulAssignment","src":"18918:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"18929:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18918:7:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18971:5:15"}],"functionName":{"name":"validator_assert_t_enum$_Suit_$3808","nodeType":"YulIdentifier","src":"18935:35:15"},"nodeType":"YulFunctionCall","src":"18935:42:15"},"nodeType":"YulExpressionStatement","src":"18935:42:15"}]},"name":"cleanup_t_enum$_Suit_$3808","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18890:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18900:7:15","type":""}],"src":"18854:129:15"},{"body":{"nodeType":"YulBlock","src":"19044:76:15","statements":[{"nodeType":"YulAssignment","src":"19054:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"19065:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19054:7:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19108:5:15"}],"functionName":{"name":"validator_assert_t_enum$_Value_$3822","nodeType":"YulIdentifier","src":"19071:36:15"},"nodeType":"YulFunctionCall","src":"19071:43:15"},"nodeType":"YulExpressionStatement","src":"19071:43:15"}]},"name":"cleanup_t_enum$_Value_$3822","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19026:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19036:7:15","type":""}],"src":"18989:131:15"},{"body":{"nodeType":"YulBlock","src":"19171:81:15","statements":[{"nodeType":"YulAssignment","src":"19181:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19196:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"19203:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19192:3:15"},"nodeType":"YulFunctionCall","src":"19192:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19181:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19153:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19163:7:15","type":""}],"src":"19126:126:15"},{"body":{"nodeType":"YulBlock","src":"19303:32:15","statements":[{"nodeType":"YulAssignment","src":"19313:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"19324:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19313:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19285:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19295:7:15","type":""}],"src":"19258:77:15"},{"body":{"nodeType":"YulBlock","src":"19419:84:15","statements":[{"nodeType":"YulAssignment","src":"19429:68:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19491:5:15"}],"functionName":{"name":"convert_t_contract$_ChipToken_$4042_to_t_uint160","nodeType":"YulIdentifier","src":"19442:48:15"},"nodeType":"YulFunctionCall","src":"19442:55:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19429:9:15"}]}]},"name":"convert_t_contract$_ChipToken_$4042_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19399:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19409:9:15","type":""}],"src":"19341:162:15"},{"body":{"nodeType":"YulBlock","src":"19587:53:15","statements":[{"nodeType":"YulAssignment","src":"19597:37:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19628:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"19610:17:15"},"nodeType":"YulFunctionCall","src":"19610:24:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19597:9:15"}]}]},"name":"convert_t_contract$_ChipToken_$4042_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19567:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19577:9:15","type":""}],"src":"19509:131:15"},{"body":{"nodeType":"YulBlock","src":"19714:63:15","statements":[{"nodeType":"YulAssignment","src":"19724:47:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19765:5:15"}],"functionName":{"name":"cleanup_t_enum$_Stage_$2696","nodeType":"YulIdentifier","src":"19737:27:15"},"nodeType":"YulFunctionCall","src":"19737:34:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19724:9:15"}]}]},"name":"convert_t_enum$_Stage_$2696_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19694:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19704:9:15","type":""}],"src":"19646:131:15"},{"body":{"nodeType":"YulBlock","src":"19850:62:15","statements":[{"nodeType":"YulAssignment","src":"19860:46:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19900:5:15"}],"functionName":{"name":"cleanup_t_enum$_Suit_$3808","nodeType":"YulIdentifier","src":"19873:26:15"},"nodeType":"YulFunctionCall","src":"19873:33:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19860:9:15"}]}]},"name":"convert_t_enum$_Suit_$3808_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19830:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19840:9:15","type":""}],"src":"19783:129:15"},{"body":{"nodeType":"YulBlock","src":"19986:63:15","statements":[{"nodeType":"YulAssignment","src":"19996:47:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20037:5:15"}],"functionName":{"name":"cleanup_t_enum$_Value_$3822","nodeType":"YulIdentifier","src":"20009:27:15"},"nodeType":"YulFunctionCall","src":"20009:34:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19996:9:15"}]}]},"name":"convert_t_enum$_Value_$3822_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19966:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19976:9:15","type":""}],"src":"19918:131:15"},{"body":{"nodeType":"YulBlock","src":"20098:128:15","statements":[{"nodeType":"YulAssignment","src":"20108:33:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20135:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20117:17:15"},"nodeType":"YulFunctionCall","src":"20117:24:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20108:5:15"}]},{"body":{"nodeType":"YulBlock","src":"20169:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20171:16:15"},"nodeType":"YulFunctionCall","src":"20171:18:15"},"nodeType":"YulExpressionStatement","src":"20171:18:15"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20156:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"20163:4:15","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20153:2:15"},"nodeType":"YulFunctionCall","src":"20153:15:15"},"nodeType":"YulIf","src":"20150:2:15"},{"nodeType":"YulAssignment","src":"20200:20:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20211:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"20218:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20207:3:15"},"nodeType":"YulFunctionCall","src":"20207:13:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20200:3:15"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20084:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20094:3:15","type":""}],"src":"20055:171:15"},{"body":{"nodeType":"YulBlock","src":"20275:190:15","statements":[{"nodeType":"YulAssignment","src":"20285:33:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20312:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20294:17:15"},"nodeType":"YulFunctionCall","src":"20294:24:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20285:5:15"}]},{"body":{"nodeType":"YulBlock","src":"20408:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20410:16:15"},"nodeType":"YulFunctionCall","src":"20410:18:15"},"nodeType":"YulExpressionStatement","src":"20410:18:15"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20333:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"20340:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20330:2:15"},"nodeType":"YulFunctionCall","src":"20330:77:15"},"nodeType":"YulIf","src":"20327:2:15"},{"nodeType":"YulAssignment","src":"20439:20:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20450:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"20457:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20446:3:15"},"nodeType":"YulFunctionCall","src":"20446:13:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20439:3:15"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20261:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20271:3:15","type":""}],"src":"20232:233:15"},{"body":{"nodeType":"YulBlock","src":"20518:32:15","statements":[{"nodeType":"YulAssignment","src":"20528:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"20539:5:15"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"20528:7:15"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20500:5:15","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"20510:7:15","type":""}],"src":"20471:79:15"},{"body":{"nodeType":"YulBlock","src":"20590:142:15","statements":[{"nodeType":"YulAssignment","src":"20600:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20623:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20605:17:15"},"nodeType":"YulFunctionCall","src":"20605:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20600:1:15"}]},{"nodeType":"YulAssignment","src":"20634:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20657:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20639:17:15"},"nodeType":"YulFunctionCall","src":"20639:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20634:1:15"}]},{"body":{"nodeType":"YulBlock","src":"20681:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"20683:16:15"},"nodeType":"YulFunctionCall","src":"20683:18:15"},"nodeType":"YulExpressionStatement","src":"20683:18:15"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20678:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20671:6:15"},"nodeType":"YulFunctionCall","src":"20671:9:15"},"nodeType":"YulIf","src":"20668:2:15"},{"nodeType":"YulAssignment","src":"20712:14:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20721:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"20724:1:15"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"20717:3:15"},"nodeType":"YulFunctionCall","src":"20717:9:15"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"20712:1:15"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20579:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"20582:1:15","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"20588:1:15","type":""}],"src":"20556:176:15"},{"body":{"nodeType":"YulBlock","src":"20766:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20783:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20786:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20776:6:15"},"nodeType":"YulFunctionCall","src":"20776:88:15"},"nodeType":"YulExpressionStatement","src":"20776:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20880:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20883:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20873:6:15"},"nodeType":"YulFunctionCall","src":"20873:15:15"},"nodeType":"YulExpressionStatement","src":"20873:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20904:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20907:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20897:6:15"},"nodeType":"YulFunctionCall","src":"20897:15:15"},"nodeType":"YulExpressionStatement","src":"20897:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20738:180:15"},{"body":{"nodeType":"YulBlock","src":"20952:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20969:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20972:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20962:6:15"},"nodeType":"YulFunctionCall","src":"20962:88:15"},"nodeType":"YulExpressionStatement","src":"20962:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21066:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21069:4:15","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21059:6:15"},"nodeType":"YulFunctionCall","src":"21059:15:15"},"nodeType":"YulExpressionStatement","src":"21059:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21090:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21093:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21083:6:15"},"nodeType":"YulFunctionCall","src":"21083:15:15"},"nodeType":"YulExpressionStatement","src":"21083:15:15"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"20924:180:15"},{"body":{"nodeType":"YulBlock","src":"21138:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21155:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21158:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21148:6:15"},"nodeType":"YulFunctionCall","src":"21148:88:15"},"nodeType":"YulExpressionStatement","src":"21148:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21252:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21255:4:15","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21245:6:15"},"nodeType":"YulFunctionCall","src":"21245:15:15"},"nodeType":"YulExpressionStatement","src":"21245:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21276:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21279:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21269:6:15"},"nodeType":"YulFunctionCall","src":"21269:15:15"},"nodeType":"YulExpressionStatement","src":"21269:15:15"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"21110:180:15"},{"body":{"nodeType":"YulBlock","src":"21324:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21341:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21344:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21334:6:15"},"nodeType":"YulFunctionCall","src":"21334:88:15"},"nodeType":"YulExpressionStatement","src":"21334:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21438:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21441:4:15","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21431:6:15"},"nodeType":"YulFunctionCall","src":"21431:15:15"},"nodeType":"YulExpressionStatement","src":"21431:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21462:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21465:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21455:6:15"},"nodeType":"YulFunctionCall","src":"21455:15:15"},"nodeType":"YulExpressionStatement","src":"21455:15:15"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"21296:180:15"},{"body":{"nodeType":"YulBlock","src":"21510:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21527:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21530:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21520:6:15"},"nodeType":"YulFunctionCall","src":"21520:88:15"},"nodeType":"YulExpressionStatement","src":"21520:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21624:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21627:4:15","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21617:6:15"},"nodeType":"YulFunctionCall","src":"21617:15:15"},"nodeType":"YulExpressionStatement","src":"21617:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21648:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21651:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21641:6:15"},"nodeType":"YulFunctionCall","src":"21641:15:15"},"nodeType":"YulExpressionStatement","src":"21641:15:15"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"21482:180:15"},{"body":{"nodeType":"YulBlock","src":"21757:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21774:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21777:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21767:6:15"},"nodeType":"YulFunctionCall","src":"21767:12:15"},"nodeType":"YulExpressionStatement","src":"21767:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"21668:117:15"},{"body":{"nodeType":"YulBlock","src":"21880:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21897:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21900:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21890:6:15"},"nodeType":"YulFunctionCall","src":"21890:12:15"},"nodeType":"YulExpressionStatement","src":"21890:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"21791:117:15"},{"body":{"nodeType":"YulBlock","src":"22020:70:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22042:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22050:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22038:3:15"},"nodeType":"YulFunctionCall","src":"22038:14:15"},{"hexValue":"6e6f74206120706c6179657220696e20746869732067616d652e","kind":"string","nodeType":"YulLiteral","src":"22054:28:15","type":"","value":"not a player in this game."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22031:6:15"},"nodeType":"YulFunctionCall","src":"22031:52:15"},"nodeType":"YulExpressionStatement","src":"22031:52:15"}]},"name":"store_literal_in_memory_4729582300210317519386e2c33d042f822628d35ffe4a24a1a3be85d7a90659","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22012:6:15","type":""}],"src":"21914:176:15"},{"body":{"nodeType":"YulBlock","src":"22202:62:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22224:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22232:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22220:3:15"},"nodeType":"YulFunctionCall","src":"22220:14:15"},{"hexValue":"796f7572207475726e206973206f7665722e","kind":"string","nodeType":"YulLiteral","src":"22236:20:15","type":"","value":"your turn is over."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22213:6:15"},"nodeType":"YulFunctionCall","src":"22213:44:15"},"nodeType":"YulExpressionStatement","src":"22213:44:15"}]},"name":"store_literal_in_memory_5d6699e530e9dd524f183c4d5b175f788a143f6bc3aff7a00567e3449129ec2d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22194:6:15","type":""}],"src":"22096:168:15"},{"body":{"nodeType":"YulBlock","src":"22376:69:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22398:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22406:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22394:3:15"},"nodeType":"YulFunctionCall","src":"22394:14:15"},{"hexValue":"62657420616d6f756e74206d7573742062652076616c69642e","kind":"string","nodeType":"YulLiteral","src":"22410:27:15","type":"","value":"bet amount must be valid."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22387:6:15"},"nodeType":"YulFunctionCall","src":"22387:51:15"},"nodeType":"YulExpressionStatement","src":"22387:51:15"}]},"name":"store_literal_in_memory_6669cbf05ac9a2bdbc39bd2c35d6190d0ab62096810aaf391c891b31657c165b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22368:6:15","type":""}],"src":"22270:175:15"},{"body":{"nodeType":"YulBlock","src":"22557:74:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22579:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22587:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22575:3:15"},"nodeType":"YulFunctionCall","src":"22575:14:15"},{"hexValue":"6e6f206d6f7265206361726473206c65667420696e20746865206465636b","kind":"string","nodeType":"YulLiteral","src":"22591:32:15","type":"","value":"no more cards left in the deck"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22568:6:15"},"nodeType":"YulFunctionCall","src":"22568:56:15"},"nodeType":"YulExpressionStatement","src":"22568:56:15"}]},"name":"store_literal_in_memory_8c112c2c291568ca6f3d9c3c61df5a6f2303477385bfcf06fd59e47a00d5aabe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22549:6:15","type":""}],"src":"22451:180:15"},{"body":{"nodeType":"YulBlock","src":"22743:66:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22765:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22773:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22761:3:15"},"nodeType":"YulFunctionCall","src":"22761:14:15"},{"hexValue":"6e6f7420796f7572207475726e20746f20706c61792e","kind":"string","nodeType":"YulLiteral","src":"22777:24:15","type":"","value":"not your turn to play."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22754:6:15"},"nodeType":"YulFunctionCall","src":"22754:48:15"},"nodeType":"YulExpressionStatement","src":"22754:48:15"}]},"name":"store_literal_in_memory_a3714162b69248b942e118568224bd8b2918be54473f7d7d5590bf84889f0c81","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22735:6:15","type":""}],"src":"22637:172:15"},{"body":{"nodeType":"YulBlock","src":"22921:120:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22943:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22951:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22939:3:15"},"nodeType":"YulFunctionCall","src":"22939:14:15"},{"hexValue":"6f6e6c7920746865206465616c65722063616e2063616c6c2074686973206675","kind":"string","nodeType":"YulLiteral","src":"22955:34:15","type":"","value":"only the dealer can call this fu"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22932:6:15"},"nodeType":"YulFunctionCall","src":"22932:58:15"},"nodeType":"YulExpressionStatement","src":"22932:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23011:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23019:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23007:3:15"},"nodeType":"YulFunctionCall","src":"23007:15:15"},{"hexValue":"6e6374696f6e2e","kind":"string","nodeType":"YulLiteral","src":"23024:9:15","type":"","value":"nction."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23000:6:15"},"nodeType":"YulFunctionCall","src":"23000:34:15"},"nodeType":"YulExpressionStatement","src":"23000:34:15"}]},"name":"store_literal_in_memory_e02d50271d73d7c8ce2a6e39a212f5f5f38fe7f65273b1e97d4785b3b1d016ba","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22913:6:15","type":""}],"src":"22815:226:15"},{"body":{"nodeType":"YulBlock","src":"23153:115:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23175:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23183:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23171:3:15"},"nodeType":"YulFunctionCall","src":"23171:14:15"},{"hexValue":"706c6179657220646f65736e2774206861766520656e6f75676820746f6b656e","kind":"string","nodeType":"YulLiteral","src":"23187:34:15","type":"","value":"player doesn't have enough token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23164:6:15"},"nodeType":"YulFunctionCall","src":"23164:58:15"},"nodeType":"YulExpressionStatement","src":"23164:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23243:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23251:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23239:3:15"},"nodeType":"YulFunctionCall","src":"23239:15:15"},{"hexValue":"732e","kind":"string","nodeType":"YulLiteral","src":"23256:4:15","type":"","value":"s."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23232:6:15"},"nodeType":"YulFunctionCall","src":"23232:29:15"},"nodeType":"YulExpressionStatement","src":"23232:29:15"}]},"name":"store_literal_in_memory_e11ebc4aafe537e8acf88f6368431f06bd2b0b97e24ae3cacf1f0bf4cfa0f983","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23145:6:15","type":""}],"src":"23047:221:15"},{"body":{"nodeType":"YulBlock","src":"23380:67:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23402:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23410:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23398:3:15"},"nodeType":"YulFunctionCall","src":"23398:14:15"},{"hexValue":"706c617965722068617320616c7265616479206265742e","kind":"string","nodeType":"YulLiteral","src":"23414:25:15","type":"","value":"player has already bet."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23391:6:15"},"nodeType":"YulFunctionCall","src":"23391:49:15"},"nodeType":"YulExpressionStatement","src":"23391:49:15"}]},"name":"store_literal_in_memory_e63d888be4e1175799600edb323a027a3e52a00c90f6ebab550c279f67bcae2f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23372:6:15","type":""}],"src":"23274:173:15"},{"body":{"nodeType":"YulBlock","src":"23559:117:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23581:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23589:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23577:3:15"},"nodeType":"YulFunctionCall","src":"23577:14:15"},{"hexValue":"66756e6374696f6e2063616e6e6f742062652063616c6c656420726967687420","kind":"string","nodeType":"YulLiteral","src":"23593:34:15","type":"","value":"function cannot be called right "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23570:6:15"},"nodeType":"YulFunctionCall","src":"23570:58:15"},"nodeType":"YulExpressionStatement","src":"23570:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23649:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23657:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23645:3:15"},"nodeType":"YulFunctionCall","src":"23645:15:15"},{"hexValue":"6e6f772e","kind":"string","nodeType":"YulLiteral","src":"23662:6:15","type":"","value":"now."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23638:6:15"},"nodeType":"YulFunctionCall","src":"23638:31:15"},"nodeType":"YulExpressionStatement","src":"23638:31:15"}]},"name":"store_literal_in_memory_fb424d949b90a0ecc5faf0b3504332a29e0aab59c576878f0bd384215021dd88","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23551:6:15","type":""}],"src":"23453:223:15"},{"body":{"nodeType":"YulBlock","src":"23735:62:15","statements":[{"body":{"nodeType":"YulBlock","src":"23769:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"23771:16:15"},"nodeType":"YulFunctionCall","src":"23771:18:15"},"nodeType":"YulExpressionStatement","src":"23771:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23758:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"23765:1:15","type":"","value":"5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23755:2:15"},"nodeType":"YulFunctionCall","src":"23755:12:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23748:6:15"},"nodeType":"YulFunctionCall","src":"23748:20:15"},"nodeType":"YulIf","src":"23745:2:15"}]},"name":"validator_assert_t_enum$_Stage_$2696","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23728:5:15","type":""}],"src":"23682:115:15"},{"body":{"nodeType":"YulBlock","src":"23855:62:15","statements":[{"body":{"nodeType":"YulBlock","src":"23889:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"23891:16:15"},"nodeType":"YulFunctionCall","src":"23891:18:15"},"nodeType":"YulExpressionStatement","src":"23891:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23878:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"23885:1:15","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23875:2:15"},"nodeType":"YulFunctionCall","src":"23875:12:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23868:6:15"},"nodeType":"YulFunctionCall","src":"23868:20:15"},"nodeType":"YulIf","src":"23865:2:15"}]},"name":"validator_assert_t_enum$_Suit_$3808","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23848:5:15","type":""}],"src":"23803:114:15"},{"body":{"nodeType":"YulBlock","src":"23976:63:15","statements":[{"body":{"nodeType":"YulBlock","src":"24011:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"24013:16:15"},"nodeType":"YulFunctionCall","src":"24013:18:15"},"nodeType":"YulExpressionStatement","src":"24013:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23999:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"24006:2:15","type":"","value":"13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23996:2:15"},"nodeType":"YulFunctionCall","src":"23996:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23989:6:15"},"nodeType":"YulFunctionCall","src":"23989:21:15"},"nodeType":"YulIf","src":"23986:2:15"}]},"name":"validator_assert_t_enum$_Value_$3822","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23969:5:15","type":""}],"src":"23923:116:15"},{"body":{"nodeType":"YulBlock","src":"24088:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"24145:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24154:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24157:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24147:6:15"},"nodeType":"YulFunctionCall","src":"24147:12:15"},"nodeType":"YulExpressionStatement","src":"24147:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24111:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24136:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"24118:17:15"},"nodeType":"YulFunctionCall","src":"24118:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24108:2:15"},"nodeType":"YulFunctionCall","src":"24108:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24101:6:15"},"nodeType":"YulFunctionCall","src":"24101:43:15"},"nodeType":"YulIf","src":"24098:2:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24081:5:15","type":""}],"src":"24045:122:15"},{"body":{"nodeType":"YulBlock","src":"24213:76:15","statements":[{"body":{"nodeType":"YulBlock","src":"24267:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24276:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24279:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24269:6:15"},"nodeType":"YulFunctionCall","src":"24269:12:15"},"nodeType":"YulExpressionStatement","src":"24269:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24236:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24258:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"24243:14:15"},"nodeType":"YulFunctionCall","src":"24243:21:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24233:2:15"},"nodeType":"YulFunctionCall","src":"24233:32:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24226:6:15"},"nodeType":"YulFunctionCall","src":"24226:40:15"},"nodeType":"YulIf","src":"24223:2:15"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24206:5:15","type":""}],"src":"24173:116:15"},{"body":{"nodeType":"YulBlock","src":"24351:56:15","statements":[{"body":{"nodeType":"YulBlock","src":"24385:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24394:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24397:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24387:6:15"},"nodeType":"YulFunctionCall","src":"24387:12:15"},"nodeType":"YulExpressionStatement","src":"24387:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24374:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"24381:1:15","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24371:2:15"},"nodeType":"YulFunctionCall","src":"24371:12:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24364:6:15"},"nodeType":"YulFunctionCall","src":"24364:20:15"},"nodeType":"YulIf","src":"24361:2:15"}]},"name":"validator_revert_t_enum$_Decision_$2699","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24344:5:15","type":""}],"src":"24295:112:15"},{"body":{"nodeType":"YulBlock","src":"24456:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"24513:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24522:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24525:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24515:6:15"},"nodeType":"YulFunctionCall","src":"24515:12:15"},"nodeType":"YulExpressionStatement","src":"24515:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24479:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24504:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24486:17:15"},"nodeType":"YulFunctionCall","src":"24486:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24476:2:15"},"nodeType":"YulFunctionCall","src":"24476:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24469:6:15"},"nodeType":"YulFunctionCall","src":"24469:43:15"},"nodeType":"YulIf","src":"24466:2:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24449:5:15","type":""}],"src":"24413:122:15"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_enum$_Decision_$2699(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Decision_$2699(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Decision_$2699(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Decision_$2699(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_ChipToken_$4042_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ChipToken_$4042_to_t_address(value))\n    }\n\n    function abi_encode_t_enum$_Stage_$2696_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Stage_$2696_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_Suit_$3808_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Suit_$3808_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_Value_$3822_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Value_$3822_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_4729582300210317519386e2c33d042f822628d35ffe4a24a1a3be85d7a90659_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_4729582300210317519386e2c33d042f822628d35ffe4a24a1a3be85d7a90659(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_5d6699e530e9dd524f183c4d5b175f788a143f6bc3aff7a00567e3449129ec2d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_5d6699e530e9dd524f183c4d5b175f788a143f6bc3aff7a00567e3449129ec2d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6669cbf05ac9a2bdbc39bd2c35d6190d0ab62096810aaf391c891b31657c165b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_6669cbf05ac9a2bdbc39bd2c35d6190d0ab62096810aaf391c891b31657c165b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8c112c2c291568ca6f3d9c3c61df5a6f2303477385bfcf06fd59e47a00d5aabe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_8c112c2c291568ca6f3d9c3c61df5a6f2303477385bfcf06fd59e47a00d5aabe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a3714162b69248b942e118568224bd8b2918be54473f7d7d5590bf84889f0c81_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_a3714162b69248b942e118568224bd8b2918be54473f7d7d5590bf84889f0c81(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e02d50271d73d7c8ce2a6e39a212f5f5f38fe7f65273b1e97d4785b3b1d016ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_e02d50271d73d7c8ce2a6e39a212f5f5f38fe7f65273b1e97d4785b3b1d016ba(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e11ebc4aafe537e8acf88f6368431f06bd2b0b97e24ae3cacf1f0bf4cfa0f983_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_e11ebc4aafe537e8acf88f6368431f06bd2b0b97e24ae3cacf1f0bf4cfa0f983(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e63d888be4e1175799600edb323a027a3e52a00c90f6ebab550c279f67bcae2f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_e63d888be4e1175799600edb323a027a3e52a00c90f6ebab550c279f67bcae2f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_fb424d949b90a0ecc5faf0b3504332a29e0aab59c576878f0bd384215021dd88_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_fb424d949b90a0ecc5faf0b3504332a29e0aab59c576878f0bd384215021dd88(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_enum$_Suit_$3808_t_enum$_Value_$3822__to_t_address_t_uint8_t_uint8__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_Suit_$3808_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_enum$_Value_$3822_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_enum$_Stage_$2696_t_array$_t_address_$dyn_memory_ptr__to_t_address_t_uint256_t_uint256_t_uint256_t_uint8_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_enum$_Stage_$2696_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value5,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bool_t_bool_t_uint256_t_uint256__to_t_bool_t_bool_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bool_t_uint256_t_uint256__to_t_bool_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ChipToken_$4042__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ChipToken_$4042_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_enum$_Stage_$2696__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Stage_$2696_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4729582300210317519386e2c33d042f822628d35ffe4a24a1a3be85d7a90659__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4729582300210317519386e2c33d042f822628d35ffe4a24a1a3be85d7a90659_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d6699e530e9dd524f183c4d5b175f788a143f6bc3aff7a00567e3449129ec2d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d6699e530e9dd524f183c4d5b175f788a143f6bc3aff7a00567e3449129ec2d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6669cbf05ac9a2bdbc39bd2c35d6190d0ab62096810aaf391c891b31657c165b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6669cbf05ac9a2bdbc39bd2c35d6190d0ab62096810aaf391c891b31657c165b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8c112c2c291568ca6f3d9c3c61df5a6f2303477385bfcf06fd59e47a00d5aabe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8c112c2c291568ca6f3d9c3c61df5a6f2303477385bfcf06fd59e47a00d5aabe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a3714162b69248b942e118568224bd8b2918be54473f7d7d5590bf84889f0c81__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a3714162b69248b942e118568224bd8b2918be54473f7d7d5590bf84889f0c81_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e02d50271d73d7c8ce2a6e39a212f5f5f38fe7f65273b1e97d4785b3b1d016ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e02d50271d73d7c8ce2a6e39a212f5f5f38fe7f65273b1e97d4785b3b1d016ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ebc4aafe537e8acf88f6368431f06bd2b0b97e24ae3cacf1f0bf4cfa0f983__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ebc4aafe537e8acf88f6368431f06bd2b0b97e24ae3cacf1f0bf4cfa0f983_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e63d888be4e1175799600edb323a027a3e52a00c90f6ebab550c279f67bcae2f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e63d888be4e1175799600edb323a027a3e52a00c90f6ebab550c279f67bcae2f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb424d949b90a0ecc5faf0b3504332a29e0aab59c576878f0bd384215021dd88__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb424d949b90a0ecc5faf0b3504332a29e0aab59c576878f0bd384215021dd88_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_Stage_$2696(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Stage_$2696(value)\n    }\n\n    function cleanup_t_enum$_Suit_$3808(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Suit_$3808(value)\n    }\n\n    function cleanup_t_enum$_Value_$3822(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Value_$3822(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ChipToken_$4042_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ChipToken_$4042_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ChipToken_$4042_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_enum$_Stage_$2696_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Stage_$2696(value)\n    }\n\n    function convert_t_enum$_Suit_$3808_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Suit_$3808(value)\n    }\n\n    function convert_t_enum$_Value_$3822_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Value_$3822(value)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_4729582300210317519386e2c33d042f822628d35ffe4a24a1a3be85d7a90659(memPtr) {\n\n        mstore(add(memPtr, 0), \"not a player in this game.\")\n\n    }\n\n    function store_literal_in_memory_5d6699e530e9dd524f183c4d5b175f788a143f6bc3aff7a00567e3449129ec2d(memPtr) {\n\n        mstore(add(memPtr, 0), \"your turn is over.\")\n\n    }\n\n    function store_literal_in_memory_6669cbf05ac9a2bdbc39bd2c35d6190d0ab62096810aaf391c891b31657c165b(memPtr) {\n\n        mstore(add(memPtr, 0), \"bet amount must be valid.\")\n\n    }\n\n    function store_literal_in_memory_8c112c2c291568ca6f3d9c3c61df5a6f2303477385bfcf06fd59e47a00d5aabe(memPtr) {\n\n        mstore(add(memPtr, 0), \"no more cards left in the deck\")\n\n    }\n\n    function store_literal_in_memory_a3714162b69248b942e118568224bd8b2918be54473f7d7d5590bf84889f0c81(memPtr) {\n\n        mstore(add(memPtr, 0), \"not your turn to play.\")\n\n    }\n\n    function store_literal_in_memory_e02d50271d73d7c8ce2a6e39a212f5f5f38fe7f65273b1e97d4785b3b1d016ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"only the dealer can call this fu\")\n\n        mstore(add(memPtr, 32), \"nction.\")\n\n    }\n\n    function store_literal_in_memory_e11ebc4aafe537e8acf88f6368431f06bd2b0b97e24ae3cacf1f0bf4cfa0f983(memPtr) {\n\n        mstore(add(memPtr, 0), \"player doesn't have enough token\")\n\n        mstore(add(memPtr, 32), \"s.\")\n\n    }\n\n    function store_literal_in_memory_e63d888be4e1175799600edb323a027a3e52a00c90f6ebab550c279f67bcae2f(memPtr) {\n\n        mstore(add(memPtr, 0), \"player has already bet.\")\n\n    }\n\n    function store_literal_in_memory_fb424d949b90a0ecc5faf0b3504332a29e0aab59c576878f0bd384215021dd88(memPtr) {\n\n        mstore(add(memPtr, 0), \"function cannot be called right \")\n\n        mstore(add(memPtr, 32), \"now.\")\n\n    }\n\n    function validator_assert_t_enum$_Stage_$2696(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function validator_assert_t_enum$_Suit_$3808(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function validator_assert_t_enum$_Value_$3822(value) {\n        if iszero(lt(value, 13)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_Decision_$2699(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100b45760003560e01c80636540742f116100715780636540742f1461015d5780637365870b1461017b5780637e95b52314610197578063e2eb41ff146101b5578063eedbe31d146101e9578063fc0c546a14610207576100b4565b80631746bd1b146100b9578063248adb8f146100dc57806353a04b05146100fa578063553df02114610116578063593284011461012057806363bd1d4a14610153575b600080fd5b6100c1610225565b6040516100d3969594939291906128b7565b60405180910390f35b6100e461031a565b6040516100f19190612b0d565b60405180910390f35b610114600480360381019061010f9190612512565b6103a2565b005b61011e610881565b005b61013a600480360381019061013591906124b8565b610d58565b60405161014a9493929190612972565b60405180910390f35b61015b610e93565b005b610165611149565b6040516101729190612b0d565b60405180910390f35b6101956004803603810190610190919061253f565b61114e565b005b61019f611612565b6040516101ac9190612b0d565b60405180910390f35b6101cf60048036038101906101ca91906124b8565b61161f565b6040516101e095949392919061291f565b60405180910390f35b6101f161167c565b6040516101fe91906129d2565b60405180910390f35b61020f611696565b60405161021c91906129b7565b60405180910390f35b60008060008060006060600160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001800154600160020154600160030154600160040160009054906101000a900460ff166001600501808054806020026020016040519081016040528092919081815260200182805480156102ff57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102b5575b50505050509050955095509550955095509550909192939495565b6000600280600481111561033157610330612e6e565b5b600160040160009054906101000a900460ff16600481111561035657610355612e6e565b5b14610396576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038d90612aed565b60405180910390fd5b60076001015491505090565b60028060048111156103b7576103b6612e6e565b5b600160040160009054906101000a900460ff1660048111156103dc576103db612e6e565b5b1461041c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041390612aed565b60405180910390fd5b60011515600a600061042c6117ff565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515146104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b0906129ed565b60405180910390fd5b60001515600a60006104c96117ff565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900460ff16151514610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054d90612a0d565b60405180910390fd5b600160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661059a6117ff565b73ffffffffffffffffffffffffffffffffffffffff16146105f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e790612a6d565b60405180910390fd5b60006105fa6117ff565b90506000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060018081111561065257610651612e6e565b5b84600181111561066557610664612e6e565b5b14156106a85760018160000160026101000a81548160ff0219169083151502179055506001600201600081548092919061069e90612d8c565b9190505550610768565b60006106b4600b611807565b90507fcdd708ba90bb5d2f93e3e14125ca604c4c86d0fb97142531835c795e1583b35983826000015183602001516040516106f193929190612857565b60405180910390a16107068160200151611a5b565b8260020160008282546107199190612b72565b925050819055506015826002015411156107665760018260000160026101000a81548160ff0219169083151502179055506001600201600081548092919061076090612d8c565b91905055505b505b7f625ba646f05ab036edd0f8d88cd3926fe26722c0b6717841fcb9334334a4d095826040516107979190612805565b60405180910390a1600115158160000160029054906101000a900460ff1615151480156107cd5750600160030154600160020154105b1561085d576001600501600160020154815481106107ee576107ed612ecc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b610865611b0c565b1561087b57610872611b20565b61087a611cde565b5b50505050565b600180600481111561089657610895612e6e565b5b600160040160009054906101000a900460ff1660048111156108bb576108ba612e6e565b5b146108fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f290612aed565b60405180910390fd5b600760000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661093f6117ff565b73ffffffffffffffffffffffffffffffffffffffff1614610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098c90612a8d565b60405180910390fd5b60005b600160030154811015610abc576000600160050182815481106109be576109bd612ecc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006109f7600b611807565b90507fcdd708ba90bb5d2f93e3e14125ca604c4c86d0fb97142531835c795e1583b3598282600001518360200151604051610a3493929190612857565b60405180910390a16000610a4b8260200151611a5b565b905080600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000828254610a9f9190612b72565b925050819055505050508080610ab490612d8c565b915050610998565b506000610ac9600b611807565b90506000610ada8260200151611a5b565b90507fcdd708ba90bb5d2f93e3e14125ca604c4c86d0fb97142531835c795e1583b359600760000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600001518460200151604051610b3c93929190612857565b60405180910390a18060076001016000828254610b599190612b72565b925050819055508060076002016000828254610b759190612b72565b9250508190555060005b600160030154811015610ca357600060016005018281548110610ba557610ba4612ecc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000610bde600b611807565b90507fcdd708ba90bb5d2f93e3e14125ca604c4c86d0fb97142531835c795e1583b3598282600001518360200151604051610c1b93929190612857565b60405180910390a16000610c328260200151611a5b565b905080600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000828254610c869190612b72565b925050819055505050508080610c9b90612d8c565b915050610b7f565b506000610cb0600b611807565b90507fcdd708ba90bb5d2f93e3e14125ca604c4c86d0fb97142531835c795e1583b359600760000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600001518360200151604051610d1293929190612857565b60405180910390a1610d278160200151611a5b565b60076002016000828254610d3b9190612b72565b92505081905550610d4a611fcf565b610d52611cde565b50505050565b600080600080600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900460ff16600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600a60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015493509350935093509193509193565b600760000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ed76117ff565b73ffffffffffffffffffffffffffffffffffffffff1614610f2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2490612a8d565b60405180910390fd5b6003806004811115610f4257610f41612e6e565b5b600160040160009054906101000a900460ff166004811115610f6757610f66612e6e565b5b14610fa7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9e90612aed565b60405180910390fd5b6000601560076002015411905060005b60016003015481101561113c57600060016005018281548110610fdd57610fdc612ecc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff1615151515815260200160018201548152602001600282015481525050905080604001511580156110cc5750835b156110ee576110e9826110e4600284606001516121ed565b612203565b611127565b806040015115801561110857506007600201548160800151115b156111265761112582611120600284606001516121ed565b612203565b5b5b5050808061113490612d8c565b915050610fb7565b50611145611cde565b5050565b600181565b600080600481111561116357611162612e6e565b5b600160040160009054906101000a900460ff16600481111561118857611187612e6e565b5b146111c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111bf90612aed565b60405180910390fd5b81683635c9adc5dea0000081111580156111e3575060018110155b611222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121990612a2d565b60405180910390fd5b60001515600a60006112326117ff565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff161515146112bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b690612acd565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082316113046117ff565b6040518263ffffffff1660e01b81526004016113209190612805565b60206040518083038186803b15801561133857600080fd5b505afa15801561134c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611370919061256c565b10156113b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a890612aad565b60405180910390fd5b60011515600a60006113c16117ff565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615151461144e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611445906129ed565b60405180910390fd5b60001515600a600061145e6117ff565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900460ff161515146114eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e290612a0d565b60405180910390fd5b60006114f56117ff565b905061150181856122dc565b6001600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff02191690831515021790555083600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001800160008154809291906115b890612d8c565b91905055507f0b870f7db0316e21abddd14a3936865c51a6d298208fb1ef77605c57a7fe08df81856040516115ee92919061288e565b60405180910390a16115fe6123b5565b1561160c5761160b611cde565b5b50505050565b683635c9adc5dea0000081565b600a6020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16908060000160029054906101000a900460ff16908060010154908060020154905085565b6000600160040160009054906101000a900460ff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005b60048110156117fb5760005b600d8110156117e7578260000160405180604001604052808460038111156116f4576116f3612e6e565b5b600381111561170657611705612e6e565b5b815260200183600c81111561171e5761171d612e6e565b5b600c8111156117305761172f612e6e565b5b8152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548160ff0219169083600381111561178357611782612e6e565b5b021790555060208201518160000160016101000a81548160ff0219169083600c8111156117b3576117b2612e6e565b5b021790555050508260010160008154809291906117cf90612d8c565b919050555080806117df90612d8c565b9150506116c9565b5080806117f390612d8c565b9150506116bd565b5050565b600033905090565b61180f612411565b6000826001015411611856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184d90612a4d565b60405180910390fd5b600082600101546118656123c8565b61186f9190612ddf565b9050600083600001828154811061188957611888612ecc565b5b906000526020600020016040518060400160405290816000820160009054906101000a900460ff1660038111156118c3576118c2612e6e565b5b60038111156118d5576118d4612e6e565b5b81526020016000820160019054906101000a900460ff16600c8111156118fe576118fd612e6e565b5b600c8111156119105761190f612e6e565b5b815250509050836000016001856000018054905061192e9190612c53565b8154811061193f5761193e612ecc565b5b9060005260206000200184600001838154811061195f5761195e612ecc565b5b906000526020600020016000820160009054906101000a900460ff168160000160006101000a81548160ff021916908360038111156119a1576119a0612e6e565b5b02179055506000820160019054906101000a900460ff168160000160016101000a81548160ff0219169083600c8111156119de576119dd612e6e565b5b0217905550905050836000018054806119fa576119f9612e9d565b5b60019003818190600052602060002001600080820160006101000a81549060ff02191690556000820160016101000a81549060ff021916905550509055836001016000815480929190611a4c90612d62565b91905055508092505050919050565b60006009600c811115611a7157611a70612e6e565b5b82600c811115611a8457611a83612e6e565b5b1480611ab45750600a600c811115611a9f57611a9e612e6e565b5b82600c811115611ab257611ab1612e6e565b5b145b80611ae35750600b600c811115611ace57611acd612e6e565b5b82600c811115611ae157611ae0612e6e565b5b145b15611af157600a9050611b07565b81600c811115611b0457611b03612e6e565b5b90505b919050565b600060016003015460016002015414905090565b600760000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b646117ff565b73ffffffffffffffffffffffffffffffffffffffff1614611bba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bb190612a8d565b60405180910390fd5b6002806004811115611bcf57611bce612e6e565b5b600160040160009054906101000a900460ff166004811115611bf457611bf3612e6e565b5b14611c34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2b90612aed565b60405180910390fd5b5b60116007600201541015611c7f576000611c4f600b611807565b9050611c5e8160200151611a5b565b60076002016000828254611c729190612b72565b9250508190555050611c35565b7f5ff2337534d606f18e67583f9111646f2fdbb035a5cc8a454e5b382dc943b915600760000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051611cd39190612805565b60405180910390a150565b60006004811115611cf257611cf1612e6e565b5b600160040160009054906101000a900460ff166004811115611d1757611d16612e6e565b5b1415611d985760018060040160006101000a81548160ff02191690836004811115611d4557611d44612e6e565b5b02179055507f087b6fa18a1c8e172c612787dcbe8b401b2e3e144cfd5be67730dfa0a3c18f79600160040160009054906101000a900460ff16604051611d8b91906129d2565b60405180910390a1611fcd565b60016004811115611dac57611dab612e6e565b5b600160040160009054906101000a900460ff166004811115611dd157611dd0612e6e565b5b1415611e53576002600160040160006101000a81548160ff02191690836004811115611e0057611dff612e6e565b5b02179055507f087b6fa18a1c8e172c612787dcbe8b401b2e3e144cfd5be67730dfa0a3c18f79600160040160009054906101000a900460ff16604051611e4691906129d2565b60405180910390a1611fcc565b60026004811115611e6757611e66612e6e565b5b600160040160009054906101000a900460ff166004811115611e8c57611e8b612e6e565b5b1415611f0e576003600160040160006101000a81548160ff02191690836004811115611ebb57611eba612e6e565b5b02179055507f087b6fa18a1c8e172c612787dcbe8b401b2e3e144cfd5be67730dfa0a3c18f79600160040160009054906101000a900460ff16604051611f0191906129d2565b60405180910390a1611fcb565b60036004811115611f2257611f21612e6e565b5b600160040160009054906101000a900460ff166004811115611f4757611f46612e6e565b5b1415611fc9576004600160040160006101000a81548160ff02191690836004811115611f7657611f75612e6e565b5b02179055507f087b6fa18a1c8e172c612787dcbe8b401b2e3e144cfd5be67730dfa0a3c18f79600160040160009054906101000a900460ff16604051611fbc91906129d2565b60405180910390a1611fca565b5b5b5b5b565b6001806004811115611fe457611fe3612e6e565b5b600160040160009054906101000a900460ff16600481111561200957612008612e6e565b5b14612049576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204090612aed565b60405180910390fd5b6000601560076002015414905060005b6001600301548110156121e85760006001600501828154811061207f5761207e612ecc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000601582600201541490506000826001015490508515801561210f5750815b156121665760018360000160026101000a81548160ff021916908315150217905550600060026121408360016123fb565b61214a9190612bc8565b90506121608561215b6005846121ed565b612203565b506121d1565b8580156121705750815b156121a15760018360000160026101000a81548160ff02191690831515021790555061219c8482612203565b6121d0565b8580156121ac575081155b156121cf5760018360000160026101000a81548160ff0219169083151502179055505b5b5b5050505080806121e090612d8c565b915050612059565b505050565b600081836121fb9190612bf9565b905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600760000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684846040518463ffffffff1660e01b815260040161228593929190612820565b602060405180830381600087803b15801561229f57600080fd5b505af11580156122b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122d791906124e5565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd83600760000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b815260040161235e93929190612820565b602060405180830381600087803b15801561237857600080fd5b505af115801561238c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123b091906124e5565b505050565b6000600160030154600180015414905090565b600044426040516020016123dd9291906127d9565b6040516020818303038152906040528051906020012060001c905090565b600081836124099190612b72565b905092915050565b6040518060400160405280600060038111156124305761242f612e6e565b5b81526020016000600c81111561244957612448612e6e565b5b81525090565b60008135905061245e8161311f565b92915050565b60008151905061247381613136565b92915050565b6000813590506124888161314d565b92915050565b60008135905061249d8161315d565b92915050565b6000815190506124b28161315d565b92915050565b6000602082840312156124ce576124cd612efb565b5b60006124dc8482850161244f565b91505092915050565b6000602082840312156124fb576124fa612efb565b5b600061250984828501612464565b91505092915050565b60006020828403121561252857612527612efb565b5b600061253684828501612479565b91505092915050565b60006020828403121561255557612554612efb565b5b60006125638482850161248e565b91505092915050565b60006020828403121561258257612581612efb565b5b6000612590848285016124a3565b91505092915050565b60006125a583836125b1565b60208301905092915050565b6125ba81612c87565b82525050565b6125c981612c87565b82525050565b60006125da82612b38565b6125e48185612b50565b93506125ef83612b28565b8060005b838110156126205781516126078882612599565b975061261283612b43565b9250506001810190506125f3565b5085935050505092915050565b61263681612c99565b82525050565b61264581612d08565b82525050565b61265481612d2c565b82525050565b61266381612d3e565b82525050565b61267281612d50565b82525050565b6000612685601a83612b61565b915061269082612f00565b602082019050919050565b60006126a8601283612b61565b91506126b382612f29565b602082019050919050565b60006126cb601983612b61565b91506126d682612f52565b602082019050919050565b60006126ee601e83612b61565b91506126f982612f7b565b602082019050919050565b6000612711601683612b61565b915061271c82612fa4565b602082019050919050565b6000612734602783612b61565b915061273f82612fcd565b604082019050919050565b6000612757602283612b61565b91506127628261301c565b604082019050919050565b600061277a601783612b61565b91506127858261306b565b602082019050919050565b600061279d602483612b61565b91506127a882613094565b604082019050919050565b6127bc81612cfe565b82525050565b6127d36127ce82612cfe565b612dd5565b82525050565b60006127e582856127c2565b6020820191506127f582846127c2565b6020820191508190509392505050565b600060208201905061281a60008301846125c0565b92915050565b600060608201905061283560008301866125c0565b61284260208301856125c0565b61284f60408301846127b3565b949350505050565b600060608201905061286c60008301866125c0565b612879602083018561265a565b6128866040830184612669565b949350505050565b60006040820190506128a360008301856125c0565b6128b060208301846127b3565b9392505050565b600060c0820190506128cc60008301896125c0565b6128d960208301886127b3565b6128e660408301876127b3565b6128f360608301866127b3565b612900608083018561264b565b81810360a083015261291281846125cf565b9050979650505050505050565b600060a082019050612934600083018861262d565b612941602083018761262d565b61294e604083018661262d565b61295b60608301856127b3565b61296860808301846127b3565b9695505050505050565b6000608082019050612987600083018761262d565b612994602083018661262d565b6129a160408301856127b3565b6129ae60608301846127b3565b95945050505050565b60006020820190506129cc600083018461263c565b92915050565b60006020820190506129e7600083018461264b565b92915050565b60006020820190508181036000830152612a0681612678565b9050919050565b60006020820190508181036000830152612a268161269b565b9050919050565b60006020820190508181036000830152612a46816126be565b9050919050565b60006020820190508181036000830152612a66816126e1565b9050919050565b60006020820190508181036000830152612a8681612704565b9050919050565b60006020820190508181036000830152612aa681612727565b9050919050565b60006020820190508181036000830152612ac68161274a565b9050919050565b60006020820190508181036000830152612ae68161276d565b9050919050565b60006020820190508181036000830152612b0681612790565b9050919050565b6000602082019050612b2260008301846127b3565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612b7d82612cfe565b9150612b8883612cfe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612bbd57612bbc612e10565b5b828201905092915050565b6000612bd382612cfe565b9150612bde83612cfe565b925082612bee57612bed612e3f565b5b828204905092915050565b6000612c0482612cfe565b9150612c0f83612cfe565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612c4857612c47612e10565b5b828202905092915050565b6000612c5e82612cfe565b9150612c6983612cfe565b925082821015612c7c57612c7b612e10565b5b828203905092915050565b6000612c9282612cde565b9050919050565b60008115159050919050565b6000819050612cb3826130e3565b919050565b6000819050612cc6826130f7565b919050565b6000819050612cd98261310b565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612d1382612d1a565b9050919050565b6000612d2582612cde565b9050919050565b6000612d3782612ca5565b9050919050565b6000612d4982612cb8565b9050919050565b6000612d5b82612ccb565b9050919050565b6000612d6d82612cfe565b91506000821415612d8157612d80612e10565b5b600182039050919050565b6000612d9782612cfe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612dca57612dc9612e10565b5b600182019050919050565b6000819050919050565b6000612dea82612cfe565b9150612df583612cfe565b925082612e0557612e04612e3f565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f6e6f74206120706c6179657220696e20746869732067616d652e000000000000600082015250565b7f796f7572207475726e206973206f7665722e0000000000000000000000000000600082015250565b7f62657420616d6f756e74206d7573742062652076616c69642e00000000000000600082015250565b7f6e6f206d6f7265206361726473206c65667420696e20746865206465636b0000600082015250565b7f6e6f7420796f7572207475726e20746f20706c61792e00000000000000000000600082015250565b7f6f6e6c7920746865206465616c65722063616e2063616c6c207468697320667560008201527f6e6374696f6e2e00000000000000000000000000000000000000000000000000602082015250565b7f706c6179657220646f65736e2774206861766520656e6f75676820746f6b656e60008201527f732e000000000000000000000000000000000000000000000000000000000000602082015250565b7f706c617965722068617320616c7265616479206265742e000000000000000000600082015250565b7f66756e6374696f6e2063616e6e6f742062652063616c6c65642072696768742060008201527f6e6f772e00000000000000000000000000000000000000000000000000000000602082015250565b600581106130f4576130f3612e6e565b5b50565b6004811061310857613107612e6e565b5b50565b600d811061311c5761311b612e6e565b5b50565b61312881612c87565b811461313357600080fd5b50565b61313f81612c99565b811461314a57600080fd5b50565b6002811061315a57600080fd5b50565b61316681612cfe565b811461317157600080fd5b5056fea2646970667358221220c8de1e5e68813c3ace540d8bfdbe99e90c9983249d098650811227b92f8e533564736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6540742F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x6540742F EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x7365870B EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x7E95B523 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xE2EB41FF EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xEEDBE31D EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x207 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x1746BD1B EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x248ADB8F EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x53A04B05 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x553DF021 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x59328401 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x63BD1D4A EQ PUSH2 0x153 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x2512 JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11E PUSH2 0x881 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x24B8 JUMP JUMPDEST PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0xE93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x165 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x253F JUMP JUMPDEST PUSH2 0x114E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH2 0x1612 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x24B8 JUMP JUMPDEST PUSH2 0x161F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x167C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x29B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP1 ADD SLOAD PUSH1 0x1 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 PUSH1 0x5 ADD DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2B5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x331 JUMPI PUSH2 0x330 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x356 JUMPI PUSH2 0x355 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38D SWAP1 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3B7 JUMPI PUSH2 0x3B6 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3DC JUMPI PUSH2 0x3DB PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413 SWAP1 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 PUSH2 0x42C PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP1 PUSH2 0x29ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 PUSH2 0x4C9 PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54D SWAP1 PUSH2 0x2A0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x59A PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E7 SWAP1 PUSH2 0x2A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5FA PUSH2 0x17FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x652 JUMPI PUSH2 0x651 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x665 JUMPI PUSH2 0x664 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x69E SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x768 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B4 PUSH1 0xB PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP PUSH32 0xCDD708BA90BB5D2F93E3E14125CA604C4C86D0FB97142531835C795E1583B359 DUP4 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x6F1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x706 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x1A5B JUMP JUMPDEST DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x719 SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x15 DUP3 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x766 JUMPI PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x760 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP JUMPDEST PUSH32 0x625BA646F05AB036EDD0F8D88CD3926FE26722C0B6717841FCB9334334A4D095 DUP3 PUSH1 0x40 MLOAD PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 ISZERO ISZERO DUP2 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x7CD JUMPI POP PUSH1 0x1 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x2 ADD SLOAD LT JUMPDEST ISZERO PUSH2 0x85D JUMPI PUSH1 0x1 PUSH1 0x5 ADD PUSH1 0x1 PUSH1 0x2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x7EE JUMPI PUSH2 0x7ED PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x865 PUSH2 0x1B0C JUMP JUMPDEST ISZERO PUSH2 0x87B JUMPI PUSH2 0x872 PUSH2 0x1B20 JUMP JUMPDEST PUSH2 0x87A PUSH2 0x1CDE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x896 JUMPI PUSH2 0x895 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x8BB JUMPI PUSH2 0x8BA PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ PUSH2 0x8FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F2 SWAP1 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x93F PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98C SWAP1 PUSH2 0x2A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x3 ADD SLOAD DUP2 LT ISZERO PUSH2 0xABC JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9BE JUMPI PUSH2 0x9BD PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x9F7 PUSH1 0xB PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP PUSH32 0xCDD708BA90BB5D2F93E3E14125CA604C4C86D0FB97142531835C795E1583B359 DUP3 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xA34 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0xA4B DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x1A5B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA9F SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0xAB4 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x998 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xAC9 PUSH1 0xB PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xADA DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x1A5B JUMP JUMPDEST SWAP1 POP PUSH32 0xCDD708BA90BB5D2F93E3E14125CA604C4C86D0FB97142531835C795E1583B359 PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xB3C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x7 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB59 SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB75 SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x3 ADD SLOAD DUP2 LT ISZERO PUSH2 0xCA3 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBA5 JUMPI PUSH2 0xBA4 PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0xBDE PUSH1 0xB PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP PUSH32 0xCDD708BA90BB5D2F93E3E14125CA604C4C86D0FB97142531835C795E1583B359 DUP3 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xC1B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH2 0xC32 DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x1A5B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC86 SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0xC9B SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB7F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xCB0 PUSH1 0xB PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP PUSH32 0xCDD708BA90BB5D2F93E3E14125CA604C4C86D0FB97142531835C795E1583B359 PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xD12 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xD27 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x7 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD3B SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD4A PUSH2 0x1FCF JUMP JUMPDEST PUSH2 0xD52 PUSH2 0x1CDE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xA PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xA PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xED7 PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF24 SWAP1 PUSH2 0x2A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF42 JUMPI PUSH2 0xF41 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH2 0xF66 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ PUSH2 0xFA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9E SWAP1 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x15 PUSH1 0x7 PUSH1 0x2 ADD SLOAD GT SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x113C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFDD JUMPI PUSH2 0xFDC PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD ISZERO DUP1 ISZERO PUSH2 0x10CC JUMPI POP DUP4 JUMPDEST ISZERO PUSH2 0x10EE JUMPI PUSH2 0x10E9 DUP3 PUSH2 0x10E4 PUSH1 0x2 DUP5 PUSH1 0x60 ADD MLOAD PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x1127 JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD ISZERO DUP1 ISZERO PUSH2 0x1108 JUMPI POP PUSH1 0x7 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x80 ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x1126 JUMPI PUSH2 0x1125 DUP3 PUSH2 0x1120 PUSH1 0x2 DUP5 PUSH1 0x60 ADD MLOAD PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x2203 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1134 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFB7 JUMP JUMPDEST POP PUSH2 0x1145 PUSH2 0x1CDE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1163 JUMPI PUSH2 0x1162 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1188 JUMPI PUSH2 0x1187 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BF SWAP1 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH9 0x3635C9ADC5DEA00000 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x11E3 JUMPI POP PUSH1 0x1 DUP2 LT ISZERO JUMPDEST PUSH2 0x1222 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1219 SWAP1 PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 PUSH2 0x1232 PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x12BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B6 SWAP1 PUSH2 0x2ACD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0x1304 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x134C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1370 SWAP2 SWAP1 PUSH2 0x256C JUMP JUMPDEST LT ISZERO PUSH2 0x13B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A8 SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 PUSH2 0x13C1 PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x144E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1445 SWAP1 PUSH2 0x29ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 PUSH2 0x145E PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x14EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E2 SWAP1 PUSH2 0x2A0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14F5 PUSH2 0x17FF JUMP JUMPDEST SWAP1 POP PUSH2 0x1501 DUP2 DUP6 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x15B8 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0xB870F7DB0316E21ABDDD14A3936865C51A6D298208FB1EF77605C57A7FE08DF DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x15EE SWAP3 SWAP2 SWAP1 PUSH2 0x288E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x15FE PUSH2 0x23B5 JUMP JUMPDEST ISZERO PUSH2 0x160C JUMPI PUSH2 0x160B PUSH2 0x1CDE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x17FB JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xD DUP2 LT ISZERO PUSH2 0x17E7 JUMPI DUP3 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16F4 JUMPI PUSH2 0x16F3 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1706 JUMPI PUSH2 0x1705 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x171E JUMPI PUSH2 0x171D PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1730 JUMPI PUSH2 0x172F PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1783 JUMPI PUSH2 0x1782 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x17B3 JUMPI PUSH2 0x17B2 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x17CF SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x17DF SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16C9 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x17F3 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16BD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x180F PUSH2 0x2411 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD GT PUSH2 0x1856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184D SWAP1 PUSH2 0x2A4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1865 PUSH2 0x23C8 JUMP JUMPDEST PUSH2 0x186F SWAP2 SWAP1 PUSH2 0x2DDF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1889 JUMPI PUSH2 0x1888 PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x18C3 JUMPI PUSH2 0x18C2 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x18D5 JUMPI PUSH2 0x18D4 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xC DUP2 GT ISZERO PUSH2 0x18FE JUMPI PUSH2 0x18FD PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1910 JUMPI PUSH2 0x190F PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP6 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x192E SWAP2 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x193F JUMPI PUSH2 0x193E PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP5 PUSH1 0x0 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x195F JUMPI PUSH2 0x195E PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19A1 JUMPI PUSH2 0x19A0 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x19DE JUMPI PUSH2 0x19DD PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP4 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x19FA JUMPI PUSH2 0x19F9 PUSH2 0x2E9D JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP SWAP1 SSTORE DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A4C SWAP1 PUSH2 0x2D62 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1A71 JUMPI PUSH2 0x1A70 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1A84 JUMPI PUSH2 0x1A83 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x1AB4 JUMPI POP PUSH1 0xA PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1A9F JUMPI PUSH2 0x1A9E PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1AB2 JUMPI PUSH2 0x1AB1 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x1AE3 JUMPI POP PUSH1 0xB PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1ACE JUMPI PUSH2 0x1ACD PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1AF1 JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x1B07 JUMP JUMPDEST DUP2 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1B04 JUMPI PUSH2 0x1B03 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x2 ADD SLOAD EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B64 PUSH2 0x17FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BBA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB1 SWAP1 PUSH2 0x2A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1BCF JUMPI PUSH2 0x1BCE PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1BF4 JUMPI PUSH2 0x1BF3 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1C34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2B SWAP1 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x11 PUSH1 0x7 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x1C7F JUMPI PUSH1 0x0 PUSH2 0x1C4F PUSH1 0xB PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C5E DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x7 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C72 SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP PUSH2 0x1C35 JUMP JUMPDEST PUSH32 0x5FF2337534D606F18E67583F9111646F2FDBB035A5CC8A454E5B382DC943B915 PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1CD3 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1CF2 JUMPI PUSH2 0x1CF1 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1D17 JUMPI PUSH2 0x1D16 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1D98 JUMPI PUSH1 0x1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1D45 JUMPI PUSH2 0x1D44 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x87B6FA18A1C8E172C612787DCBE8B401B2E3E144CFD5BE67730DFA0A3C18F79 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1D8B SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1DAC JUMPI PUSH2 0x1DAB PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1DD1 JUMPI PUSH2 0x1DD0 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1E53 JUMPI PUSH1 0x2 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1E00 JUMPI PUSH2 0x1DFF PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x87B6FA18A1C8E172C612787DCBE8B401B2E3E144CFD5BE67730DFA0A3C18F79 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1E46 SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1E67 JUMPI PUSH2 0x1E66 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1E8C JUMPI PUSH2 0x1E8B PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1F0E JUMPI PUSH1 0x3 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1EBB JUMPI PUSH2 0x1EBA PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x87B6FA18A1C8E172C612787DCBE8B401B2E3E144CFD5BE67730DFA0A3C18F79 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1F01 SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1FCB JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F22 JUMPI PUSH2 0x1F21 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F47 JUMPI PUSH2 0x1F46 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1FC9 JUMPI PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F76 JUMPI PUSH2 0x1F75 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x87B6FA18A1C8E172C612787DCBE8B401B2E3E144CFD5BE67730DFA0A3C18F79 PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1FBC SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1FCA JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1FE4 JUMPI PUSH2 0x1FE3 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2009 JUMPI PUSH2 0x2008 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2049 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2040 SWAP1 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x15 PUSH1 0x7 PUSH1 0x2 ADD SLOAD EQ SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x21E8 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x207F JUMPI PUSH2 0x207E PUSH2 0x2ECC JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x15 DUP3 PUSH1 0x2 ADD SLOAD EQ SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP6 ISZERO DUP1 ISZERO PUSH2 0x210F JUMPI POP DUP2 JUMPDEST ISZERO PUSH2 0x2166 JUMPI PUSH1 0x1 DUP4 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH2 0x2140 DUP4 PUSH1 0x1 PUSH2 0x23FB JUMP JUMPDEST PUSH2 0x214A SWAP2 SWAP1 PUSH2 0x2BC8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2160 DUP6 PUSH2 0x215B PUSH1 0x5 DUP5 PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x2203 JUMP JUMPDEST POP PUSH2 0x21D1 JUMP JUMPDEST DUP6 DUP1 ISZERO PUSH2 0x2170 JUMPI POP DUP2 JUMPDEST ISZERO PUSH2 0x21A1 JUMPI PUSH1 0x1 DUP4 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x219C DUP5 DUP3 PUSH2 0x2203 JUMP JUMPDEST PUSH2 0x21D0 JUMP JUMPDEST DUP6 DUP1 ISZERO PUSH2 0x21AC JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x21CF JUMPI PUSH1 0x1 DUP4 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x21E0 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2059 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x21FB SWAP2 SWAP1 PUSH2 0x2BF9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2285 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x229F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22D7 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x238C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23B0 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 ADD SLOAD PUSH1 0x1 DUP1 ADD SLOAD EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DIFFICULTY TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23DD SWAP3 SWAP2 SWAP1 PUSH2 0x27D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2409 SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2430 JUMPI PUSH2 0x242F PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x2449 JUMPI PUSH2 0x2448 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x245E DUP2 PUSH2 0x311F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2473 DUP2 PUSH2 0x3136 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2488 DUP2 PUSH2 0x314D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x249D DUP2 PUSH2 0x315D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24B2 DUP2 PUSH2 0x315D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24CE JUMPI PUSH2 0x24CD PUSH2 0x2EFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24DC DUP5 DUP3 DUP6 ADD PUSH2 0x244F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24FB JUMPI PUSH2 0x24FA PUSH2 0x2EFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2509 DUP5 DUP3 DUP6 ADD PUSH2 0x2464 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2528 JUMPI PUSH2 0x2527 PUSH2 0x2EFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2536 DUP5 DUP3 DUP6 ADD PUSH2 0x2479 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2555 JUMPI PUSH2 0x2554 PUSH2 0x2EFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2563 DUP5 DUP3 DUP6 ADD PUSH2 0x248E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2582 JUMPI PUSH2 0x2581 PUSH2 0x2EFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2590 DUP5 DUP3 DUP6 ADD PUSH2 0x24A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A5 DUP4 DUP4 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25BA DUP2 PUSH2 0x2C87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x25C9 DUP2 PUSH2 0x2C87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25DA DUP3 PUSH2 0x2B38 JUMP JUMPDEST PUSH2 0x25E4 DUP2 DUP6 PUSH2 0x2B50 JUMP JUMPDEST SWAP4 POP PUSH2 0x25EF DUP4 PUSH2 0x2B28 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2620 JUMPI DUP2 MLOAD PUSH2 0x2607 DUP9 DUP3 PUSH2 0x2599 JUMP JUMPDEST SWAP8 POP PUSH2 0x2612 DUP4 PUSH2 0x2B43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25F3 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2636 DUP2 PUSH2 0x2C99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2645 DUP2 PUSH2 0x2D08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2654 DUP2 PUSH2 0x2D2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2663 DUP2 PUSH2 0x2D3E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2672 DUP2 PUSH2 0x2D50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2685 PUSH1 0x1A DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2690 DUP3 PUSH2 0x2F00 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26A8 PUSH1 0x12 DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x26B3 DUP3 PUSH2 0x2F29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26CB PUSH1 0x19 DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x26D6 DUP3 PUSH2 0x2F52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26EE PUSH1 0x1E DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x26F9 DUP3 PUSH2 0x2F7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2711 PUSH1 0x16 DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x271C DUP3 PUSH2 0x2FA4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2734 PUSH1 0x27 DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x273F DUP3 PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2757 PUSH1 0x22 DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2762 DUP3 PUSH2 0x301C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x277A PUSH1 0x17 DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2785 DUP3 PUSH2 0x306B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x279D PUSH1 0x24 DUP4 PUSH2 0x2B61 JUMP JUMPDEST SWAP2 POP PUSH2 0x27A8 DUP3 PUSH2 0x3094 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27BC DUP2 PUSH2 0x2CFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x27D3 PUSH2 0x27CE DUP3 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x2DD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E5 DUP3 DUP6 PUSH2 0x27C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x27F5 DUP3 DUP5 PUSH2 0x27C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x281A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2835 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x25C0 JUMP JUMPDEST PUSH2 0x2842 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x25C0 JUMP JUMPDEST PUSH2 0x284F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x27B3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x286C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x25C0 JUMP JUMPDEST PUSH2 0x2879 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x265A JUMP JUMPDEST PUSH2 0x2886 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2669 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x28A3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x25C0 JUMP JUMPDEST PUSH2 0x28B0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x27B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x28CC PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x25C0 JUMP JUMPDEST PUSH2 0x28D9 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x27B3 JUMP JUMPDEST PUSH2 0x28E6 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x27B3 JUMP JUMPDEST PUSH2 0x28F3 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x27B3 JUMP JUMPDEST PUSH2 0x2900 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x264B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2912 DUP2 DUP5 PUSH2 0x25CF JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2934 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x262D JUMP JUMPDEST PUSH2 0x2941 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x262D JUMP JUMPDEST PUSH2 0x294E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x262D JUMP JUMPDEST PUSH2 0x295B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x27B3 JUMP JUMPDEST PUSH2 0x2968 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x27B3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2987 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x262D JUMP JUMPDEST PUSH2 0x2994 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x262D JUMP JUMPDEST PUSH2 0x29A1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x27B3 JUMP JUMPDEST PUSH2 0x29AE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x27B3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x263C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x264B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A06 DUP2 PUSH2 0x2678 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A26 DUP2 PUSH2 0x269B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A46 DUP2 PUSH2 0x26BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A66 DUP2 PUSH2 0x26E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A86 DUP2 PUSH2 0x2704 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AA6 DUP2 PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AC6 DUP2 PUSH2 0x274A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AE6 DUP2 PUSH2 0x276D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B06 DUP2 PUSH2 0x2790 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B22 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B7D DUP3 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2B88 DUP4 PUSH2 0x2CFE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2BBD JUMPI PUSH2 0x2BBC PUSH2 0x2E10 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD3 DUP3 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2BDE DUP4 PUSH2 0x2CFE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2BEE JUMPI PUSH2 0x2BED PUSH2 0x2E3F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C04 DUP3 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C0F DUP4 PUSH2 0x2CFE JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2C48 JUMPI PUSH2 0x2C47 PUSH2 0x2E10 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5E DUP3 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C69 DUP4 PUSH2 0x2CFE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2C7C JUMPI PUSH2 0x2C7B PUSH2 0x2E10 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C92 DUP3 PUSH2 0x2CDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2CB3 DUP3 PUSH2 0x30E3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2CC6 DUP3 PUSH2 0x30F7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2CD9 DUP3 PUSH2 0x310B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D13 DUP3 PUSH2 0x2D1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D25 DUP3 PUSH2 0x2CDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D37 DUP3 PUSH2 0x2CA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D49 DUP3 PUSH2 0x2CB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5B DUP3 PUSH2 0x2CCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D6D DUP3 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x2D81 JUMPI PUSH2 0x2D80 PUSH2 0x2E10 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D97 DUP3 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2DCA JUMPI PUSH2 0x2DC9 PUSH2 0x2E10 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DEA DUP3 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF5 DUP4 PUSH2 0x2CFE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2E05 JUMPI PUSH2 0x2E04 PUSH2 0x2E3F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x6E6F74206120706C6179657220696E20746869732067616D652E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x796F7572207475726E206973206F7665722E0000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x62657420616D6F756E74206D7573742062652076616C69642E00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6E6F206D6F7265206361726473206C65667420696E20746865206465636B0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6E6F7420796F7572207475726E20746F20706C61792E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6F6E6C7920746865206465616C65722063616E2063616C6C2074686973206675 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6374696F6E2E00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706C6179657220646F65736E2774206861766520656E6F75676820746F6B656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x732E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706C617965722068617320616C7265616479206265742E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x66756E6374696F6E2063616E6E6F742062652063616C6C656420726967687420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F772E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x30F4 JUMPI PUSH2 0x30F3 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x3108 JUMPI PUSH2 0x3107 PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0xD DUP2 LT PUSH2 0x311C JUMPI PUSH2 0x311B PUSH2 0x2E6E JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x3128 DUP2 PUSH2 0x2C87 JUMP JUMPDEST DUP2 EQ PUSH2 0x3133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x313F DUP2 PUSH2 0x2C99 JUMP JUMPDEST DUP2 EQ PUSH2 0x314A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x315A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3166 DUP2 PUSH2 0x2CFE JUMP JUMPDEST DUP2 EQ PUSH2 0x3171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0xDE 0x1E 0x5E PUSH9 0x813C3ACE540D8BFDBE SWAP10 0xE9 0xC SWAP10 DUP4 0x24 SWAP14 MULMOD DUP7 POP DUP2 SLT 0x27 0xB9 0x2F DUP15 MSTORE8 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"280:10327:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7155:443;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;7604:170;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5075:1030;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3576:1493;;;:::i;:::-;;6784:365;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;6111:667;;;:::i;:::-;;316:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3133:437;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;357:56;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1136:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;7780:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1048:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7155:443;7238:7;7259;7280;7301:18;7333:5;7352:16;7414:4;:18;;;;;;;;;;;;7446:4;:13;;;7473:4;:14;;;7501:4;:15;;;7530:4;:17;;;;;;;;;;;;7561:4;:20;;7393:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7155:443;;;;;;:::o;7604:170::-;7719:7;7687:13;1677:5;1656:26;;;;;;;;:::i;:::-;;:4;:17;;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;1635:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;7749:6:::1;:18;;;7742:25;;7604:170:::0;;:::o;5075:1030::-;5141:13;1677:5;1656:26;;;;;;;;:::i;:::-;;:4;:17;;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;1635:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;2454:4:::1;2420:38;;:7;:21;2428:12;:10;:12::i;:::-;2420:21;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:38;;;2399:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;2562:5;2528:39;;:7;:21;2536:12;:10;:12::i;:::-;2528:21;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:39;;;2520:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;5213:4:::2;:18;;;;;;;;;;;;5197:34;;:12;:10;:12::i;:::-;:34;;;5189:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;5269:21;5293:12;:10;:12::i;:::-;5269:36;;5315:21;5339:7;:22;5347:13;5339:22;;;;;;;;;;;;;;;5315:46;;5388:14;5376:26:::0;::::2;;;;;;;:::i;:::-;;:8;:26;;;;;;;;:::i;:::-;;;5372:441;;;5436:4;5418:6;:15;;;:22;;;;;;;;;;;;;;;;;;5454:4;:14;;;:16;;;;;;;;;:::i;:::-;;;;;;5372:441;;;5501:16;5520:15;:4;:13;:15::i;:::-;5501:34;;5554:47;5564:13;5579:4;:9;;;5590:4;:10;;;5554:47;;;;;;;;:::i;:::-;;;;;;;;5636:35;5660:4;:10;;;5636:23;:35::i;:::-;5615:6;:17;;;:56;;;;;;;:::i;:::-;;;;;;;;5710:2;5690:6;:17;;;:22;5686:117;;;5750:4;5732:6;:15;;;:22;;;;;;;;;;;;;;;;;;5772:4;:14;;;:16;;;;;;;;;:::i;:::-;;;;;;5686:117;5487:326;5372:441;5828:26;5840:13;5828:26;;;;;;:::i;:::-;;;;;;;;5888:4;5869:23;;:6;:15;;;;;;;;;;;;:23;;;:59;;;;;5913:4;:15;;;5896:4;:14;;;:32;5869:59;5865:134;;;5963:4;:20;;5984:4;:14;;;5963:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5942:4;:18;;;:57;;;;;;;;;;;;;;;;;;5865:134;6014:16;:14;:16::i;:::-;6010:89;;;6046:13;:11;:13::i;:::-;6073:15;:13;:15::i;:::-;6010:89;5179:926;;5075:1030:::0;;:::o;3576:1493::-;3609:13;1677:5;1656:26;;;;;;;;:::i;:::-;;:4;:17;;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;1635:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;2265:6:::1;:13;;;;;;;;;;;;2249:29;;:12;:10;:12::i;:::-;:29;;;2228:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;3650:9:::2;3645:391;3669:4;:15;;;3665:1;:19;3645:391;;;3705:21;3729:4;:20;;3750:1;3729:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3705:47;;3767:23;3793:15;:4;:13;:15::i;:::-;3767:41;;3827:61;3837:13;3852:11;:16;;;3870:11;:17;;;3827:61;;;;;;;;:::i;:::-;;;;;;;;3902:17;3922:42;3946:11;:17;;;3922:23;:42::i;:::-;3902:62;;4016:9;3979:7;:22;3987:13;3979:22;;;;;;;;;;;;;;;:33;;;:46;;;;;;;:::i;:::-;;;;;;;;3691:345;;;3686:3;;;;;:::i;:::-;;;;3645:391;;;;4046:23;4072:15;:4;:13;:15::i;:::-;4046:41;;4097:24;4124:42;4148:11;:17;;;4124:23;:42::i;:::-;4097:69;;4181:61;4191:6;:13;;;;;;;;;;;;4206:11;:16;;;4224:11;:17;;;4181:61;;;;;;;;:::i;:::-;;;;;;;;4274:16;4252:6;:18;;;:38;;;;;;;:::i;:::-;;;;;;;;4321:16;4300:6;:17;;;:37;;;;;;;:::i;:::-;;;;;;;;4353:9;4348:391;4372:4;:15;;;4368:1;:19;4348:391;;;4408:21;4432:4;:20;;4453:1;4432:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4408:47;;4470:23;4496:15;:4;:13;:15::i;:::-;4470:41;;4530:61;4540:13;4555:11;:16;;;4573:11;:17;;;4530:61;;;;;;;;:::i;:::-;;;;;;;;4605:17;4625:42;4649:11;:17;;;4625:23;:42::i;:::-;4605:62;;4719:9;4682:7;:22;4690:13;4682:22;;;;;;;;;;;;;;;:33;;;:46;;;;;;;:::i;:::-;;;;;;;;4394:345;;;4389:3;;;;;:::i;:::-;;;;4348:391;;;;4749:29;4781:15;:4;:13;:15::i;:::-;4749:47;;4811:119;4834:6;:13;;;;;;;;;;;;4861:17;:22;;;4897:17;:23;;;4811:119;;;;;;;;:::i;:::-;;;;;;;;4961:48;4985:17;:23;;;4961;:48::i;:::-;4940:6;:17;;;:69;;;;;;;:::i;:::-;;;;;;;;5020:16;:14;:16::i;:::-;5047:15;:13;:15::i;:::-;3635:1434;;;3576:1493:::0;:::o;6784:365::-;6883:4;6901;6919:7;6940;6993;:15;7001:6;6993:15;;;;;;;;;;;;;;;:23;;;;;;;;;;;;7030:7;:15;7038:6;7030:15;;;;;;;;;;;;;;;:24;;;;;;;;;;;;7068:7;:15;7076:6;7068:15;;;;;;;;;;;;;;;:24;;;7106:7;:15;7114:6;7106:15;;;;;;;;;;;;;;;:26;;;6972:170;;;;;;;;6784:365;;;;;:::o;6111:667::-;2265:6;:13;;;;;;;;;;;;2249:29;;:12;:10;:12::i;:::-;:29;;;2228:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;6157:12:::1;1677:5;1656:26;;;;;;;;:::i;:::-;;:4;:17;;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;1635:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;6181:16:::2;6221:2;6201:6;:17;;;:22;6181:43;;6240:9;6235:511;6259:4;:15;;;6255:1;:19;6235:511;;;6295:21;6319:4;:20;;6340:1;6319:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6295:47;;6356:20;6379:7;:22;6387:13;6379:22;;;;;;;;;;;;;;;6356:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;6421:6;:15;;;6420:16;:31;;;;;6440:11;6420:31;6416:320;;;6471:58;6481:13;6496:32;6509:1;6512:6;:15;;;6496:12;:32::i;:::-;6471:9;:58::i;:::-;6416:320;;;6572:6;:15;;;6571:16;:59;;;;;6612:6;:17;;;6592:6;:17;;;:37;6571:59;6550:186;;;6663:58;6673:13;6688:32;6701:1;6704:6;:15;;;6688:12;:32::i;:::-;6663:9;:58::i;:::-;6550:186;6416:320;6281:465;;6276:3;;;;;:::i;:::-;;;;6235:511;;;;6756:15;:13;:15::i;:::-;6171:607;2353:1:::1;6111:667::o:0;316:35::-;350:1;316:35;:::o;3133:437::-;3195:13;1677:5;1656:26;;;;;;;;:::i;:::-;;:4;:17;;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;1635:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;3229:6:::1;391:22;1835:6;:17;;:38;;;;;350:1;1856:6;:17;;1835:38;1814:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;1988:5;1955:38;;:7;:21;1963:12;:10;:12::i;:::-;1955:21;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:38;;;1934:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;2106:6;2073:5;::::0;::::1;;;;;;;;:15;;;2089:12;:10;:12::i;:::-;2073:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;2052:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;2454:4:::2;2420:38;;:7;:21;2428:12;:10;:12::i;:::-;2420:21;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:38;;;2399:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;2562:5;2528:39;;:7;:21;2536:12;:10;:12::i;:::-;2528:21;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:39;;;2520:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3270:14:::3;3287:12;:10;:12::i;:::-;3270:29;;3310;3324:6;3332;3310:13;:29::i;:::-;3376:4;3350:7;:15;3358:6;3350:15;;;;;;;;;;;;;;;:23;;;:30;;;;;;;;;;;;;;;;;;3417:6;3390:7;:15;3398:6;3390:15;;;;;;;;;;;;;;;:24;;:33;;;;3433:4;:13:::0;::::3;;:15;;;;;;;;;:::i;:::-;;;;;;3464:27;3476:6;3484;3464:27;;;;;;;:::i;:::-;;;;;;;;3506:16;:14;:16::i;:::-;3502:62;;;3538:15;:13;:15::i;:::-;3502:62;3260:310;1754:1:::1;3133:437:::0;;:::o;357:56::-;391:22;357:56;:::o;1136:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7780:98::-;7830:5;7854:4;:17;;;;;;;;;;;;7847:24;;7780:98;:::o;1048:22::-;;;;;;;;;;;;:::o;416:263:13:-;483:9;478:195;502:1;498;:5;478:195;;;529:9;524:139;548:2;544:1;:6;524:139;;;575:4;:10;;591:23;;;;;;;;601:1;596:7;;;;;;;;:::i;:::-;;591:23;;;;;;;;:::i;:::-;;;;;;611:1;605:8;;;;;;;;:::i;:::-;;591:23;;;;;;;;:::i;:::-;;;;;575:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;633:4;:13;;;:15;;;;;;;;;:::i;:::-;;;;;;552:3;;;;;:::i;:::-;;;;524:139;;;;505:3;;;;;:::i;:::-;;;;478:195;;;;416:263;:::o;655:96:5:-;708:7;734:10;727:17;;655:96;:::o;685:381:13:-;744:11;;:::i;:::-;791:1;775:4;:13;;;:17;767:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;837:13;865:4;:13;;;853:9;:7;:9::i;:::-;:25;;;;:::i;:::-;837:41;;888:16;907:4;:10;;918:5;907:17;;;;;;;;:::i;:::-;;;;;;;;;888:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;954:4;:10;;985:1;965:4;:10;;:17;;;;:21;;;;:::i;:::-;954:33;;;;;;;;:::i;:::-;;;;;;;;;934:4;:10;;945:5;934:17;;;;;;;;:::i;:::-;;;;;;;;;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;997:4;:10;;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:4;:13;;;:15;;;;;;;;;:::i;:::-;;;;;;1055:4;1048:11;;;;685:381;;;:::o;10303:302:12:-;10396:7;10445:10;10436:19;;;;;;;;:::i;:::-;;:5;:19;;;;;;;;:::i;:::-;;;:42;;;;10468:10;10459:19;;;;;;;;:::i;:::-;;:5;:19;;;;;;;;:::i;:::-;;;10436:42;:66;;;;10491:11;10482:20;;;;;;;;:::i;:::-;;:5;:20;;;;;;;;:::i;:::-;;;10436:66;10419:180;;;10534:2;10527:9;;;;10419:180;10582:5;10574:14;;;;;;;;:::i;:::-;;10567:21;;10303:302;;;;:::o;10185:112::-;10234:4;10275;:15;;;10257:4;:14;;;:33;10250:40;;10185:112;:::o;7884:285::-;2265:6;:13;;;;;;;;;;;;2249:29;;:12;:10;:12::i;:::-;:29;;;2228:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;7935:13:::1;1677:5;1656:26;;;;;;;;:::i;:::-;;:4;:17;;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;1635:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;7960:161:::2;7987:2;7967:6;:17;;;:22;7960:161;;;8005:16;8024:15;:4;:13;:15::i;:::-;8005:34;;8075:35;8099:4;:10;;;8075:23;:35::i;:::-;8054:6;:17;;;:56;;;;;;;:::i;:::-;;;;;;;;7991:130;7960:161;;;8136:26;8148:6;:13;;;;;;;;;;;;8136:26;;;;;;:::i;:::-;;;;;;;;2353:1:::1;7884:285::o:0;9390:672::-;9459:13;9438:34;;;;;;;;:::i;:::-;;:4;:17;;;;;;;;;;;;:34;;;;;;;;:::i;:::-;;;9434:622;;;9508:13;9488:4;:17;;;:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;9540:32;9554:4;:17;;;;;;;;;;;;9540:32;;;;;;:::i;:::-;;;;;;;;9434:622;;;9614:13;9593:34;;;;;;;;:::i;:::-;;:4;:17;;;;;;;;;;;;:34;;;;;;;;:::i;:::-;;;9589:467;;;9663:13;9643:4;:17;;;:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;9695:32;9709:4;:17;;;;;;;;;;;;9695:32;;;;;;:::i;:::-;;;;;;;;9589:467;;;9769:13;9748:34;;;;;;;;:::i;:::-;;:4;:17;;;;;;;;;;;;:34;;;;;;;;:::i;:::-;;;9744:312;;;9818:12;9798:4;:17;;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;9849;9863:4;:17;;;;;;;;;;;;9849:32;;;;;;:::i;:::-;;;;;;;;9744:312;;;9923:12;9902:33;;;;;;;;:::i;:::-;;:4;:17;;;;;;;;;;;;:33;;;;;;;;:::i;:::-;;;9898:158;;;9971:15;9951:4;:17;;;:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;10005:32;10019:4;:17;;;;;;;;;;;;10005:32;;;;;;:::i;:::-;;;;;;;;9898:158;;;;9744:312;9589:467;9434:622;9390:672::o;8175:941::-;8218:13;1677:5;1656:26;;;;;;;;:::i;:::-;;:4;:17;;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;1635:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;8243:21:::1;8289:2;8268:6;:17;;;:23;8243:49;;8308:9;8303:807;8327:4;:15;;;8323:1;:19;8303:807;;;8363:21;8387:4;:20;;8408:1;8387:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8363:47;;8424:21;8448:7;:22;8456:13;8448:22;;;;;;;;;;;;;;;8424:46;;8484:21;8530:2;8509:6;:17;;;:23;8484:49;;8547:16;8566:6;:15;;;8547:34;;8601:16;8600:17;:37;;;;;8621:16;8600:37;8596:504;;;8675:4;8657:6;:15;;;:22;;;;;;;;;;;;;;;;;;8697;8750:1;8722:25;8735:8;8745:1;8722:12;:25::i;:::-;:29;;;;:::i;:::-;8697:54;;8769:57;8779:13;8794:31;8807:1;8810:14;8794:12;:31::i;:::-;8769:9;:57::i;:::-;8639:202;8596:504;;;8851:16;:36;;;;;8871:16;8851:36;8847:253;;;8925:4;8907:6;:15;;;:22;;;;;;;;;;;;;;;;;;8947:34;8957:13;8972:8;8947:9;:34::i;:::-;8847:253;;;9006:16;:37;;;;;9027:16;9026:17;9006:37;9002:98;;;9081:4;9063:6;:15;;;:22;;;;;;;;;;;;;;;;;;9002:98;8847:253;8596:504;8349:761;;;;8344:3;;;;;:::i;:::-;;;;8303:807;;;;8233:883;8175:941:::0;:::o;3465:96:10:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;9258:126:12:-;9328:5;;;;;;;;;;:18;;;9347:6;:13;;;;;;;;;;;;9362:6;9370;9328:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9258:126;;:::o;9122:130::-;9196:5;;;;;;;;;;:18;;;9215:6;9223;:13;;;;;;;;;;;;9238:6;9196:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9122:130;;:::o;10068:111::-;10117:4;10157;:15;;;10140:4;:13;;;:32;10133:39;;10068:111;:::o;1252:187:13:-;1293:7;1383:16;1401:15;1366:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1356:62;;;;;;1331:101;;1312:120;;1252:187;:::o;2755:96:10:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;7:139:15:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:165::-;354:5;392:6;379:20;370:29;;408:46;448:5;408:46;:::i;:::-;360:100;;;;:::o;466:139::-;512:5;550:6;537:20;528:29;;566:33;593:5;566:33;:::i;:::-;518:87;;;;:::o;611:143::-;668:5;699:6;693:13;684:22;;715:33;742:5;715:33;:::i;:::-;674:80;;;;:::o;760:329::-;819:6;868:2;856:9;847:7;843:23;839:32;836:2;;;874:79;;:::i;:::-;836:2;994:1;1019:53;1064:7;1055:6;1044:9;1040:22;1019:53;:::i;:::-;1009:63;;965:117;826:263;;;;:::o;1095:345::-;1162:6;1211:2;1199:9;1190:7;1186:23;1182:32;1179:2;;;1217:79;;:::i;:::-;1179:2;1337:1;1362:61;1415:7;1406:6;1395:9;1391:22;1362:61;:::i;:::-;1352:71;;1308:125;1169:271;;;;:::o;1446:355::-;1518:6;1567:2;1555:9;1546:7;1542:23;1538:32;1535:2;;;1573:79;;:::i;:::-;1535:2;1693:1;1718:66;1776:7;1767:6;1756:9;1752:22;1718:66;:::i;:::-;1708:76;;1664:130;1525:276;;;;:::o;1807:329::-;1866:6;1915:2;1903:9;1894:7;1890:23;1886:32;1883:2;;;1921:79;;:::i;:::-;1883:2;2041:1;2066:53;2111:7;2102:6;2091:9;2087:22;2066:53;:::i;:::-;2056:63;;2012:117;1873:263;;;;:::o;2142:351::-;2212:6;2261:2;2249:9;2240:7;2236:23;2232:32;2229:2;;;2267:79;;:::i;:::-;2229:2;2387:1;2412:64;2468:7;2459:6;2448:9;2444:22;2412:64;:::i;:::-;2402:74;;2358:128;2219:274;;;;:::o;2499:179::-;2568:10;2589:46;2631:3;2623:6;2589:46;:::i;:::-;2667:4;2662:3;2658:14;2644:28;;2579:99;;;;:::o;2684:108::-;2761:24;2779:5;2761:24;:::i;:::-;2756:3;2749:37;2739:53;;:::o;2798:118::-;2885:24;2903:5;2885:24;:::i;:::-;2880:3;2873:37;2863:53;;:::o;2952:732::-;3071:3;3100:54;3148:5;3100:54;:::i;:::-;3170:86;3249:6;3244:3;3170:86;:::i;:::-;3163:93;;3280:56;3330:5;3280:56;:::i;:::-;3359:7;3390:1;3375:284;3400:6;3397:1;3394:13;3375:284;;;3476:6;3470:13;3503:63;3562:3;3547:13;3503:63;:::i;:::-;3496:70;;3589:60;3642:6;3589:60;:::i;:::-;3579:70;;3435:224;3422:1;3419;3415:9;3410:14;;3375:284;;;3379:14;3675:3;3668:10;;3076:608;;;;;;;:::o;3690:109::-;3771:21;3786:5;3771:21;:::i;:::-;3766:3;3759:34;3749:50;;:::o;3805:167::-;3910:55;3959:5;3910:55;:::i;:::-;3905:3;3898:68;3888:84;;:::o;3978:147::-;4073:45;4112:5;4073:45;:::i;:::-;4068:3;4061:58;4051:74;;:::o;4131:145::-;4225:44;4263:5;4225:44;:::i;:::-;4220:3;4213:57;4203:73;;:::o;4282:147::-;4377:45;4416:5;4377:45;:::i;:::-;4372:3;4365:58;4355:74;;:::o;4435:366::-;4577:3;4598:67;4662:2;4657:3;4598:67;:::i;:::-;4591:74;;4674:93;4763:3;4674:93;:::i;:::-;4792:2;4787:3;4783:12;4776:19;;4581:220;;;:::o;4807:366::-;4949:3;4970:67;5034:2;5029:3;4970:67;:::i;:::-;4963:74;;5046:93;5135:3;5046:93;:::i;:::-;5164:2;5159:3;5155:12;5148:19;;4953:220;;;:::o;5179:366::-;5321:3;5342:67;5406:2;5401:3;5342:67;:::i;:::-;5335:74;;5418:93;5507:3;5418:93;:::i;:::-;5536:2;5531:3;5527:12;5520:19;;5325:220;;;:::o;5551:366::-;5693:3;5714:67;5778:2;5773:3;5714:67;:::i;:::-;5707:74;;5790:93;5879:3;5790:93;:::i;:::-;5908:2;5903:3;5899:12;5892:19;;5697:220;;;:::o;5923:366::-;6065:3;6086:67;6150:2;6145:3;6086:67;:::i;:::-;6079:74;;6162:93;6251:3;6162:93;:::i;:::-;6280:2;6275:3;6271:12;6264:19;;6069:220;;;:::o;6295:366::-;6437:3;6458:67;6522:2;6517:3;6458:67;:::i;:::-;6451:74;;6534:93;6623:3;6534:93;:::i;:::-;6652:2;6647:3;6643:12;6636:19;;6441:220;;;:::o;6667:366::-;6809:3;6830:67;6894:2;6889:3;6830:67;:::i;:::-;6823:74;;6906:93;6995:3;6906:93;:::i;:::-;7024:2;7019:3;7015:12;7008:19;;6813:220;;;:::o;7039:366::-;7181:3;7202:67;7266:2;7261:3;7202:67;:::i;:::-;7195:74;;7278:93;7367:3;7278:93;:::i;:::-;7396:2;7391:3;7387:12;7380:19;;7185:220;;;:::o;7411:366::-;7553:3;7574:67;7638:2;7633:3;7574:67;:::i;:::-;7567:74;;7650:93;7739:3;7650:93;:::i;:::-;7768:2;7763:3;7759:12;7752:19;;7557:220;;;:::o;7783:118::-;7870:24;7888:5;7870:24;:::i;:::-;7865:3;7858:37;7848:53;;:::o;7907:157::-;8012:45;8032:24;8050:5;8032:24;:::i;:::-;8012:45;:::i;:::-;8007:3;8000:58;7990:74;;:::o;8070:397::-;8210:3;8225:75;8296:3;8287:6;8225:75;:::i;:::-;8325:2;8320:3;8316:12;8309:19;;8338:75;8409:3;8400:6;8338:75;:::i;:::-;8438:2;8433:3;8429:12;8422:19;;8458:3;8451:10;;8214:253;;;;;:::o;8473:222::-;8566:4;8604:2;8593:9;8589:18;8581:26;;8617:71;8685:1;8674:9;8670:17;8661:6;8617:71;:::i;:::-;8571:124;;;;:::o;8701:442::-;8850:4;8888:2;8877:9;8873:18;8865:26;;8901:71;8969:1;8958:9;8954:17;8945:6;8901:71;:::i;:::-;8982:72;9050:2;9039:9;9035:18;9026:6;8982:72;:::i;:::-;9064;9132:2;9121:9;9117:18;9108:6;9064:72;:::i;:::-;8855:288;;;;;;:::o;9149:472::-;9313:4;9351:2;9340:9;9336:18;9328:26;;9364:71;9432:1;9421:9;9417:17;9408:6;9364:71;:::i;:::-;9445:79;9520:2;9509:9;9505:18;9496:6;9445:79;:::i;:::-;9534:80;9610:2;9599:9;9595:18;9586:6;9534:80;:::i;:::-;9318:303;;;;;;:::o;9627:332::-;9748:4;9786:2;9775:9;9771:18;9763:26;;9799:71;9867:1;9856:9;9852:17;9843:6;9799:71;:::i;:::-;9880:72;9948:2;9937:9;9933:18;9924:6;9880:72;:::i;:::-;9753:206;;;;;:::o;9965:942::-;10256:4;10294:3;10283:9;10279:19;10271:27;;10308:71;10376:1;10365:9;10361:17;10352:6;10308:71;:::i;:::-;10389:72;10457:2;10446:9;10442:18;10433:6;10389:72;:::i;:::-;10471;10539:2;10528:9;10524:18;10515:6;10471:72;:::i;:::-;10553;10621:2;10610:9;10606:18;10597:6;10553:72;:::i;:::-;10635:81;10711:3;10700:9;10696:19;10687:6;10635:81;:::i;:::-;10764:9;10758:4;10754:20;10748:3;10737:9;10733:19;10726:49;10792:108;10895:4;10886:6;10792:108;:::i;:::-;10784:116;;10261:646;;;;;;;;;:::o;10913:628::-;11100:4;11138:3;11127:9;11123:19;11115:27;;11152:65;11214:1;11203:9;11199:17;11190:6;11152:65;:::i;:::-;11227:66;11289:2;11278:9;11274:18;11265:6;11227:66;:::i;:::-;11303;11365:2;11354:9;11350:18;11341:6;11303:66;:::i;:::-;11379:72;11447:2;11436:9;11432:18;11423:6;11379:72;:::i;:::-;11461:73;11529:3;11518:9;11514:19;11505:6;11461:73;:::i;:::-;11105:436;;;;;;;;:::o;11547:529::-;11712:4;11750:3;11739:9;11735:19;11727:27;;11764:65;11826:1;11815:9;11811:17;11802:6;11764:65;:::i;:::-;11839:66;11901:2;11890:9;11886:18;11877:6;11839:66;:::i;:::-;11915:72;11983:2;11972:9;11968:18;11959:6;11915:72;:::i;:::-;11997;12065:2;12054:9;12050:18;12041:6;11997:72;:::i;:::-;11717:359;;;;;;;:::o;12082:258::-;12193:4;12231:2;12220:9;12216:18;12208:26;;12244:89;12330:1;12319:9;12315:17;12306:6;12244:89;:::i;:::-;12198:142;;;;:::o;12346:238::-;12447:4;12485:2;12474:9;12470:18;12462:26;;12498:79;12574:1;12563:9;12559:17;12550:6;12498:79;:::i;:::-;12452:132;;;;:::o;12590:419::-;12756:4;12794:2;12783:9;12779:18;12771:26;;12843:9;12837:4;12833:20;12829:1;12818:9;12814:17;12807:47;12871:131;12997:4;12871:131;:::i;:::-;12863:139;;12761:248;;;:::o;13015:419::-;13181:4;13219:2;13208:9;13204:18;13196:26;;13268:9;13262:4;13258:20;13254:1;13243:9;13239:17;13232:47;13296:131;13422:4;13296:131;:::i;:::-;13288:139;;13186:248;;;:::o;13440:419::-;13606:4;13644:2;13633:9;13629:18;13621:26;;13693:9;13687:4;13683:20;13679:1;13668:9;13664:17;13657:47;13721:131;13847:4;13721:131;:::i;:::-;13713:139;;13611:248;;;:::o;13865:419::-;14031:4;14069:2;14058:9;14054:18;14046:26;;14118:9;14112:4;14108:20;14104:1;14093:9;14089:17;14082:47;14146:131;14272:4;14146:131;:::i;:::-;14138:139;;14036:248;;;:::o;14290:419::-;14456:4;14494:2;14483:9;14479:18;14471:26;;14543:9;14537:4;14533:20;14529:1;14518:9;14514:17;14507:47;14571:131;14697:4;14571:131;:::i;:::-;14563:139;;14461:248;;;:::o;14715:419::-;14881:4;14919:2;14908:9;14904:18;14896:26;;14968:9;14962:4;14958:20;14954:1;14943:9;14939:17;14932:47;14996:131;15122:4;14996:131;:::i;:::-;14988:139;;14886:248;;;:::o;15140:419::-;15306:4;15344:2;15333:9;15329:18;15321:26;;15393:9;15387:4;15383:20;15379:1;15368:9;15364:17;15357:47;15421:131;15547:4;15421:131;:::i;:::-;15413:139;;15311:248;;;:::o;15565:419::-;15731:4;15769:2;15758:9;15754:18;15746:26;;15818:9;15812:4;15808:20;15804:1;15793:9;15789:17;15782:47;15846:131;15972:4;15846:131;:::i;:::-;15838:139;;15736:248;;;:::o;15990:419::-;16156:4;16194:2;16183:9;16179:18;16171:26;;16243:9;16237:4;16233:20;16229:1;16218:9;16214:17;16207:47;16271:131;16397:4;16271:131;:::i;:::-;16263:139;;16161:248;;;:::o;16415:222::-;16508:4;16546:2;16535:9;16531:18;16523:26;;16559:71;16627:1;16616:9;16612:17;16603:6;16559:71;:::i;:::-;16513:124;;;;:::o;16724:132::-;16791:4;16814:3;16806:11;;16844:4;16839:3;16835:14;16827:22;;16796:60;;;:::o;16862:114::-;16929:6;16963:5;16957:12;16947:22;;16936:40;;;:::o;16982:113::-;17052:4;17084;17079:3;17075:14;17067:22;;17057:38;;;:::o;17101:184::-;17200:11;17234:6;17229:3;17222:19;17274:4;17269:3;17265:14;17250:29;;17212:73;;;;:::o;17291:169::-;17375:11;17409:6;17404:3;17397:19;17449:4;17444:3;17440:14;17425:29;;17387:73;;;;:::o;17466:305::-;17506:3;17525:20;17543:1;17525:20;:::i;:::-;17520:25;;17559:20;17577:1;17559:20;:::i;:::-;17554:25;;17713:1;17645:66;17641:74;17638:1;17635:81;17632:2;;;17719:18;;:::i;:::-;17632:2;17763:1;17760;17756:9;17749:16;;17510:261;;;;:::o;17777:185::-;17817:1;17834:20;17852:1;17834:20;:::i;:::-;17829:25;;17868:20;17886:1;17868:20;:::i;:::-;17863:25;;17907:1;17897:2;;17912:18;;:::i;:::-;17897:2;17954:1;17951;17947:9;17942:14;;17819:143;;;;:::o;17968:348::-;18008:7;18031:20;18049:1;18031:20;:::i;:::-;18026:25;;18065:20;18083:1;18065:20;:::i;:::-;18060:25;;18253:1;18185:66;18181:74;18178:1;18175:81;18170:1;18163:9;18156:17;18152:105;18149:2;;;18260:18;;:::i;:::-;18149:2;18308:1;18305;18301:9;18290:20;;18016:300;;;;:::o;18322:191::-;18362:4;18382:20;18400:1;18382:20;:::i;:::-;18377:25;;18416:20;18434:1;18416:20;:::i;:::-;18411:25;;18455:1;18452;18449:8;18446:2;;;18460:18;;:::i;:::-;18446:2;18505:1;18502;18498:9;18490:17;;18367:146;;;;:::o;18519:96::-;18556:7;18585:24;18603:5;18585:24;:::i;:::-;18574:35;;18564:51;;;:::o;18621:90::-;18655:7;18698:5;18691:13;18684:21;18673:32;;18663:48;;;:::o;18717:131::-;18764:7;18793:5;18782:16;;18799:43;18836:5;18799:43;:::i;:::-;18772:76;;;:::o;18854:129::-;18900:7;18929:5;18918:16;;18935:42;18971:5;18935:42;:::i;:::-;18908:75;;;:::o;18989:131::-;19036:7;19065:5;19054:16;;19071:43;19108:5;19071:43;:::i;:::-;19044:76;;;:::o;19126:126::-;19163:7;19203:42;19196:5;19192:54;19181:65;;19171:81;;;:::o;19258:77::-;19295:7;19324:5;19313:16;;19303:32;;;:::o;19341:162::-;19409:9;19442:55;19491:5;19442:55;:::i;:::-;19429:68;;19419:84;;;:::o;19509:131::-;19577:9;19610:24;19628:5;19610:24;:::i;:::-;19597:37;;19587:53;;;:::o;19646:131::-;19704:9;19737:34;19765:5;19737:34;:::i;:::-;19724:47;;19714:63;;;:::o;19783:129::-;19840:9;19873:33;19900:5;19873:33;:::i;:::-;19860:46;;19850:62;;;:::o;19918:131::-;19976:9;20009:34;20037:5;20009:34;:::i;:::-;19996:47;;19986:63;;;:::o;20055:171::-;20094:3;20117:24;20135:5;20117:24;:::i;:::-;20108:33;;20163:4;20156:5;20153:15;20150:2;;;20171:18;;:::i;:::-;20150:2;20218:1;20211:5;20207:13;20200:20;;20098:128;;;:::o;20232:233::-;20271:3;20294:24;20312:5;20294:24;:::i;:::-;20285:33;;20340:66;20333:5;20330:77;20327:2;;;20410:18;;:::i;:::-;20327:2;20457:1;20450:5;20446:13;20439:20;;20275:190;;;:::o;20471:79::-;20510:7;20539:5;20528:16;;20518:32;;;:::o;20556:176::-;20588:1;20605:20;20623:1;20605:20;:::i;:::-;20600:25;;20639:20;20657:1;20639:20;:::i;:::-;20634:25;;20678:1;20668:2;;20683:18;;:::i;:::-;20668:2;20724:1;20721;20717:9;20712:14;;20590:142;;;;:::o;20738:180::-;20786:77;20783:1;20776:88;20883:4;20880:1;20873:15;20907:4;20904:1;20897:15;20924:180;20972:77;20969:1;20962:88;21069:4;21066:1;21059:15;21093:4;21090:1;21083:15;21110:180;21158:77;21155:1;21148:88;21255:4;21252:1;21245:15;21279:4;21276:1;21269:15;21296:180;21344:77;21341:1;21334:88;21441:4;21438:1;21431:15;21465:4;21462:1;21455:15;21482:180;21530:77;21527:1;21520:88;21627:4;21624:1;21617:15;21651:4;21648:1;21641:15;21791:117;21900:1;21897;21890:12;21914:176;22054:28;22050:1;22042:6;22038:14;22031:52;22020:70;:::o;22096:168::-;22236:20;22232:1;22224:6;22220:14;22213:44;22202:62;:::o;22270:175::-;22410:27;22406:1;22398:6;22394:14;22387:51;22376:69;:::o;22451:180::-;22591:32;22587:1;22579:6;22575:14;22568:56;22557:74;:::o;22637:172::-;22777:24;22773:1;22765:6;22761:14;22754:48;22743:66;:::o;22815:226::-;22955:34;22951:1;22943:6;22939:14;22932:58;23024:9;23019:2;23011:6;23007:15;23000:34;22921:120;:::o;23047:221::-;23187:34;23183:1;23175:6;23171:14;23164:58;23256:4;23251:2;23243:6;23239:15;23232:29;23153:115;:::o;23274:173::-;23414:25;23410:1;23402:6;23398:14;23391:49;23380:67;:::o;23453:223::-;23593:34;23589:1;23581:6;23577:14;23570:58;23662:6;23657:2;23649:6;23645:15;23638:31;23559:117;:::o;23682:115::-;23765:1;23758:5;23755:12;23745:2;;23771:18;;:::i;:::-;23745:2;23735:62;:::o;23803:114::-;23885:1;23878:5;23875:12;23865:2;;23891:18;;:::i;:::-;23865:2;23855:62;:::o;23923:116::-;24006:2;23999:5;23996:13;23986:2;;24013:18;;:::i;:::-;23986:2;23976:63;:::o;24045:122::-;24118:24;24136:5;24118:24;:::i;:::-;24111:5;24108:35;24098:2;;24157:1;24154;24147:12;24098:2;24088:79;:::o;24173:116::-;24243:21;24258:5;24243:21;:::i;:::-;24236:5;24233:32;24223:2;;24279:1;24276;24269:12;24223:2;24213:76;:::o;24295:112::-;24381:1;24374:5;24371:12;24361:2;;24397:1;24394;24387:12;24361:2;24351:56;:::o;24413:122::-;24486:24;24504:5;24486:24;:::i;:::-;24479:5;24476:35;24466:2;;24525:1;24522;24515:12;24466:2;24456:79;:::o"},"methodIdentifiers":{"MAX_BET()":"7e95b523","MIN_BET()":"6540742f","bet(uint256)":"7365870b","deal()":"553df021","getCurrentStage()":"eedbe31d","getDealersFaceUpCardValue()":"248adb8f","getGameInfo()":"1746bd1b","getPlayerInfo(address)":"59328401","payout()":"63bd1d4a","play(uint8)":"53a04b05","players(address)":"e2eb41ff","token()":"fc0c546a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_players\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BetReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Suit\",\"name\":\"suit\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum Value\",\"name\":\"value\",\"type\":\"uint8\"}],\"name\":\"CardDrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollectedChips\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dealer\",\"type\":\"address\"}],\"name\":\"DealerMoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaidChips\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"PlayerMoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum Blackjack.Stage\",\"name\":\"stage\",\"type\":\"uint8\"}],\"name\":\"StageAdvanced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_BET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentStage\",\"outputs\":[{\"internalType\":\"enum Blackjack.Stage\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDealersFaceUpCardValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGameInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numPlayers\",\"type\":\"uint256\"},{\"internalType\":\"enum Blackjack.Stage\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getPlayerInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Blackjack.Decision\",\"name\":\"decision\",\"type\":\"uint8\"}],\"name\":\"play\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isPlayer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"betMade\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"turnOver\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"betValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stackValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ChipToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"A Blackjack game.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Blackjack.sol\":\"Blackjack\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/Blackjack.sol\":{\"keccak256\":\"0xbab0f6bd6c2711f5c134befe9c2f9e4f8c87877b6eba9d390ad89712a4da54fc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4374c7775caf44b9b589cbe8eb2b0781035d68aa96ef7cbcbbec1aa4c33abf1d\",\"dweb:/ipfs/QmRdzR4meiQqjQMwoYDw86P1XgEVsAjW8VCpk5wxYUUdbc\"]},\"contracts/CardDeck.sol\":{\"keccak256\":\"0x064271021e2958557c553825c1a09a1bc72d2289762700c2e29a3684d72fe0bf\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://894b3055f0bcf1daee5d22c2556cdba395028219a092181016e62845b01deb60\",\"dweb:/ipfs/Qmd9Q42LB6Tvp1m5TSU4SWWMgpczxEqd8KYRF5JrRatF3C\"]},\"contracts/ChipToken.sol\":{\"keccak256\":\"0x1b2006b458ef6dd4a4edc52bf36a6df6e4b881e479c98f5f817874a42d6e33fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddf63f09eacafad65648769fa1c8583b391fb7b195082d523004923fc6dfe3ea\",\"dweb:/ipfs/QmS8g3C6xBQ8V9ujNWS7mdF9Ebvz4pqtA6C1VhpNUrGoHk\"]}},\"version\":1}"}},"contracts/CardDeck.sol":{"CardDeckUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6beba3d240fad2aeee3094eecd9b1706eb5a18b4c03da762325d8639641711364736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xBE 0xBA RETURNDATASIZE 0x24 0xF 0xAD 0x2A 0xEE 0xE3 MULMOD 0x4E 0xEC 0xD9 0xB1 PUSH17 0x6EB5A18B4C03DA762325D8639641711364 PUSH20 0x6F6C634300080600330000000000000000000000 ","sourceMap":"388:1053:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6beba3d240fad2aeee3094eecd9b1706eb5a18b4c03da762325d8639641711364736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xBE 0xBA RETURNDATASIZE 0x24 0xF 0xAD 0x2A 0xEE 0xE3 MULMOD 0x4E 0xEC 0xD9 0xB1 PUSH17 0x6EB5A18B4C03DA762325D8639641711364 PUSH20 0x6F6C634300080600330000000000000000000000 ","sourceMap":"388:1053:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CardDeck.sol\":\"CardDeckUtils\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CardDeck.sol\":{\"keccak256\":\"0x064271021e2958557c553825c1a09a1bc72d2289762700c2e29a3684d72fe0bf\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://894b3055f0bcf1daee5d22c2556cdba395028219a092181016e62845b01deb60\",\"dweb:/ipfs/Qmd9Q42LB6Tvp1m5TSU4SWWMgpczxEqd8KYRF5JrRatF3C\"]}},\"version\":1}"}},"contracts/ChipToken.sol":{"ChipToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TRANSFER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_4019":{"entryPoint":null,"id":4019,"parameterSlots":0,"returnSlots":0},"@_433":{"entryPoint":null,"id":433,"parameterSlots":2,"returnSlots":0},"@_grantRole_283":{"entryPoint":380,"id":283,"parameterSlots":2,"returnSlots":0},"@_msgSender_1090":{"entryPoint":350,"id":1090,"parameterSlots":0,"returnSlots":1},"@_setupRole_223":{"entryPoint":358,"id":223,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":621,"id":79,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":903,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":957,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:516:15","statements":[{"body":{"nodeType":"YulBlock","src":"58:269:15","statements":[{"nodeType":"YulAssignment","src":"68:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"82:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"88:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"78:3:15"},"nodeType":"YulFunctionCall","src":"78:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"68:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"99:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"129:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"125:3:15"},"nodeType":"YulFunctionCall","src":"125:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"103:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"176:51:15","statements":[{"nodeType":"YulAssignment","src":"190:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"204:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"212:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"200:3:15"},"nodeType":"YulFunctionCall","src":"200:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"190:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"156:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"149:6:15"},"nodeType":"YulFunctionCall","src":"149:26:15"},"nodeType":"YulIf","src":"146:2:15"},{"body":{"nodeType":"YulBlock","src":"279:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"293:16:15"},"nodeType":"YulFunctionCall","src":"293:18:15"},"nodeType":"YulExpressionStatement","src":"293:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"243:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"266:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"274:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"263:2:15"},"nodeType":"YulFunctionCall","src":"263:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"240:2:15"},"nodeType":"YulFunctionCall","src":"240:38:15"},"nodeType":"YulIf","src":"237:2:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"51:6:15","type":""}],"src":"7:320:15"},{"body":{"nodeType":"YulBlock","src":"361:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"378:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"381:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"371:6:15"},"nodeType":"YulFunctionCall","src":"371:88:15"},"nodeType":"YulExpressionStatement","src":"371:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"475:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"478:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"468:6:15"},"nodeType":"YulFunctionCall","src":"468:15:15"},"nodeType":"YulExpressionStatement","src":"468:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"499:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"502:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"492:6:15"},"nodeType":"YulFunctionCall","src":"492:15:15"},"nodeType":"YulExpressionStatement","src":"492:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"333:180:15"}]},"contents":"{\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4368697000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4348495000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0x2D7 JUMP JUMPDEST POP DUP1 PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0x2D7 JUMP JUMPDEST POP POP POP PUSH3 0xD6 PUSH1 0x0 DUP1 SHL PUSH3 0xCA PUSH3 0x15E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x166 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x117 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH3 0x10B PUSH3 0x15E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x166 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x158 PUSH32 0x8502233096D909BEFBDA0999BB8EA2F3A6BE3C138B9FBF003752A4C8BCE86F6C PUSH3 0x14C PUSH3 0x15E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x166 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3EC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x178 DUP3 DUP3 PUSH3 0x17C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x18E DUP3 DUP3 PUSH3 0x26D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x269 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x20E PUSH3 0x15E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2E5 SWAP1 PUSH3 0x387 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x309 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x355 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x324 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x355 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x355 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x354 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x337 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x364 SWAP2 SWAP1 PUSH3 0x368 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x383 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x369 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3A0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3B7 JUMPI PUSH3 0x3B6 PUSH3 0x3BD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x22A3 DUP1 PUSH3 0x3FC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x42E JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x358 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x290 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x206B60F9 EQ PUSH2 0x1D8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1647 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27A PUSH2 0x62A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1BEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x360 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FC PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x448 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4D1 JUMPI POP PUSH2 0x4D0 DUP3 PUSH2 0xA1D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4E7 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x513 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x560 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x535 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x560 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x543 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x575 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH2 0x582 DUP2 DUP6 DUP6 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x8502233096D909BEFBDA0999BB8EA2F3A6BE3C138B9FBF003752A4C8BCE86F6C DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5C6 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D3 DUP6 DUP3 DUP6 PUSH2 0xC5A JUMP JUMPDEST PUSH2 0x5DE DUP6 DUP6 DUP6 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x612 DUP3 PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x61B DUP2 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x625 DUP4 DUP4 PUSH2 0xF75 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x63B PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B2 DUP3 DUP3 PUSH2 0x1055 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C1 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E2 DUP2 DUP6 DUP6 PUSH2 0x6D3 DUP6 DUP10 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0x1C30 JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x71E PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x719 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x75D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x754 SWAP1 PUSH2 0x1AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x767 DUP3 DUP3 PUSH2 0x1136 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x82D SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x859 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x87B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x889 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8C2 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8D0 DUP3 DUP7 PUSH2 0x996 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x922 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x939 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH2 0x946 DUP2 DUP6 DUP6 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x97E DUP3 PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x987 DUP2 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x991 DUP4 DUP4 PUSH2 0x1055 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF6 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB66 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC4D SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC66 DUP5 DUP5 PUSH2 0x996 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xCE0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC9 SWAP1 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCDF DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xA8F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4D SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBD SWAP1 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD1 DUP4 DUP4 DUP4 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4F SWAP1 PUSH2 0x1B13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xF48 SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xF5B DUP5 DUP5 DUP5 PUSH2 0x1293 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xF72 DUP2 PUSH2 0xF6D PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x1298 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF7F DUP3 DUP3 PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x1051 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xFF6 PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x105F DUP3 DUP3 PUSH2 0x7B4 JUMP JUMPDEST ISZERO PUSH2 0x1132 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x10D7 PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119D SWAP1 PUSH2 0x1BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B2 PUSH1 0x0 DUP4 DUP4 PUSH2 0x128E JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11C4 SWAP2 SWAP1 PUSH2 0x1C30 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1276 SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x128A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1293 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12A2 DUP3 DUP3 PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x1319 JUMPI PUSH2 0x12AF DUP2 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x12BD DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x134A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12CE SWAP3 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1310 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1343 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x134A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x135D SWAP2 SWAP1 PUSH2 0x1C86 JUMP JUMPDEST PUSH2 0x1367 SWAP2 SWAP1 PUSH2 0x1C30 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1380 JUMPI PUSH2 0x137F PUSH2 0x1E87 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13B2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x13EA JUMPI PUSH2 0x13E9 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x144E JUMPI PUSH2 0x144D PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x148E SWAP2 SWAP1 PUSH2 0x1C86 JUMP JUMPDEST PUSH2 0x1498 SWAP2 SWAP1 PUSH2 0x1C30 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1538 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x14DA JUMPI PUSH2 0x14D9 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14F1 JUMPI PUSH2 0x14F0 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x1531 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST SWAP1 POP PUSH2 0x149B JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x157C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1573 SWAP1 PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1595 DUP2 PUSH2 0x2211 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15AA DUP2 PUSH2 0x2228 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15BF DUP2 PUSH2 0x223F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D4 DUP2 PUSH2 0x2256 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F0 JUMPI PUSH2 0x15EF PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15FE DUP5 DUP3 DUP6 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x161E JUMPI PUSH2 0x161D PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x162C DUP6 DUP3 DUP7 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x163D DUP6 DUP3 DUP7 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1660 JUMPI PUSH2 0x165F PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x166E DUP7 DUP3 DUP8 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x167F DUP7 DUP3 DUP8 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1690 DUP7 DUP3 DUP8 ADD PUSH2 0x15C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B1 JUMPI PUSH2 0x16B0 PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16BF DUP6 DUP3 DUP7 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16D0 DUP6 DUP3 DUP7 ADD PUSH2 0x15C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F0 JUMPI PUSH2 0x16EF PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16FE DUP5 DUP3 DUP6 ADD PUSH2 0x159B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171E JUMPI PUSH2 0x171D PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172C DUP6 DUP3 DUP7 ADD PUSH2 0x159B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x173D DUP6 DUP3 DUP7 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x175D JUMPI PUSH2 0x175C PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x176B DUP5 DUP3 DUP6 ADD PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177D DUP2 PUSH2 0x1CF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x178C DUP2 PUSH2 0x1CFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179D DUP3 PUSH2 0x1C09 JUMP JUMPDEST PUSH2 0x17A7 DUP2 DUP6 PUSH2 0x1C14 JUMP JUMPDEST SWAP4 POP PUSH2 0x17B7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D6B JUMP JUMPDEST PUSH2 0x17C0 DUP2 PUSH2 0x1EBB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D6 DUP3 PUSH2 0x1C09 JUMP JUMPDEST PUSH2 0x17E0 DUP2 DUP6 PUSH2 0x1C25 JUMP JUMPDEST SWAP4 POP PUSH2 0x17F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D6B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1809 PUSH1 0x20 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1814 DUP3 PUSH2 0x1ECC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C PUSH1 0x23 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1837 DUP3 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184F PUSH1 0x33 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x185A DUP3 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1872 PUSH1 0x22 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x187D DUP3 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1895 PUSH1 0x1D DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A0 DUP3 PUSH2 0x1FE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B8 PUSH1 0x26 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C3 DUP3 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DB PUSH1 0x25 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x18E6 DUP3 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18FE PUSH1 0x24 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1909 DUP3 PUSH2 0x20A9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1921 PUSH1 0x17 DUP4 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH2 0x192C DUP3 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1944 PUSH1 0x25 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x194F DUP3 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1967 PUSH1 0x11 DUP4 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH2 0x1972 DUP3 PUSH2 0x2170 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198A PUSH1 0x2F DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1995 DUP3 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19AD PUSH1 0x1F DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x19B8 DUP3 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CC DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19DB DUP2 PUSH2 0x1D5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EC DUP3 PUSH2 0x1914 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F8 DUP3 DUP6 PUSH2 0x17CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1A03 DUP3 PUSH2 0x195A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A0F DUP3 DUP5 PUSH2 0x17CB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A30 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1774 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1783 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A6B DUP2 DUP5 PUSH2 0x1792 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A8C DUP2 PUSH2 0x17FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AAC DUP2 PUSH2 0x181F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ACC DUP2 PUSH2 0x1842 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AEC DUP2 PUSH2 0x1865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B0C DUP2 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2C DUP2 PUSH2 0x18AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B4C DUP2 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B6C DUP2 PUSH2 0x18F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B8C DUP2 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BAC DUP2 PUSH2 0x197D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BCC DUP2 PUSH2 0x19A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BE8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C03 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3B DUP3 PUSH2 0x1D54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C46 DUP4 PUSH2 0x1D54 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1C7B JUMPI PUSH2 0x1C7A PUSH2 0x1DFA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C91 DUP3 PUSH2 0x1D54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9C DUP4 PUSH2 0x1D54 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CD5 JUMPI PUSH2 0x1CD4 PUSH2 0x1DFA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CEB DUP3 PUSH2 0x1D34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D89 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D6E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D98 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA9 DUP3 PUSH2 0x1D54 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1DBD JUMPI PUSH2 0x1DBC PUSH2 0x1DFA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DE0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1DF4 JUMPI PUSH2 0x1DF3 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43686970546F6B656E3A206D7573742068617665206D696E74657220726F6C65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206D696E74206E65772063686970732E00000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x221A DUP2 PUSH2 0x1CE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2231 DUP2 PUSH2 0x1CFE JUMP JUMPDEST DUP2 EQ PUSH2 0x223C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2248 DUP2 PUSH2 0x1D08 JUMP JUMPDEST DUP2 EQ PUSH2 0x2253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x225F DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP2 EQ PUSH2 0x226A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xDE BLOCKHASH 0xCC ADD 0xDE BLOCKHASH 0x2D PUSH8 0xE1586C55820F8355 CALLVALUE PUSH6 0xEFEC8113AEFA PUSH25 0x70083C3A1B0A64736F6C634300080600330000000000000000 ","sourceMap":"302:625:14:-:0;;;501:193;;;;;;;;;;1980:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:5;2046;:13;;;;;;;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;;;;;;;:::i;:::-;;1980:113;;547:44:14::1;2198:4:0;558:18:14::0;::::1;578:12;:10;;;:12;;:::i;:::-;547:10;;;:44;;:::i;:::-;601:37;398:24;625:12;:10;;;:12;;:::i;:::-;601:10;;;:37;;:::i;:::-;648:39;468:26;674:12;:10;;;:12;;:::i;:::-;648:10;;;:39;;:::i;:::-;302:625:::0;;655:96:5;708:7;734:10;727:17;;655:96;:::o;6937:110:0:-;7015:25;7026:4;7032:7;7015:10;;;:25;;:::i;:::-;6937:110;;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;;;:22;;:::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;;;:12;;:::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;3021:145::-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;302:625:14:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:320:15:-;51:6;88:1;82:4;78:12;68:22;;135:1;129:4;125:12;156:18;146:2;;212:4;204:6;200:17;190:27;;146:2;274;266:6;263:14;243:18;240:38;237:2;;;293:18;;:::i;:::-;237:2;58:269;;;;:::o;333:180::-;381:77;378:1;371:88;478:4;475:1;468:15;502:4;499:1;492:15;302:625:14;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":2224,"id":27,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_3988":{"entryPoint":2385,"id":3988,"parameterSlots":0,"returnSlots":0},"@TRANSFER_ROLE_3993":{"entryPoint":1431,"id":3993,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_974":{"entryPoint":4755,"id":974,"parameterSlots":3,"returnSlots":0},"@_approve_909":{"entryPoint":2703,"id":909,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_963":{"entryPoint":4750,"id":963,"parameterSlots":3,"returnSlots":0},"@_checkRole_131":{"entryPoint":4760,"id":131,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":3937,"id":92,"parameterSlots":1,"returnSlots":0},"@_grantRole_283":{"entryPoint":3957,"id":283,"parameterSlots":2,"returnSlots":0},"@_mint_792":{"entryPoint":4406,"id":792,"parameterSlots":2,"returnSlots":0},"@_msgSender_1090":{"entryPoint":2695,"id":1090,"parameterSlots":0,"returnSlots":1},"@_revokeRole_314":{"entryPoint":4181,"id":314,"parameterSlots":2,"returnSlots":0},"@_spendAllowance_952":{"entryPoint":3162,"id":952,"parameterSlots":3,"returnSlots":0},"@_transfer_735":{"entryPoint":3302,"id":735,"parameterSlots":3,"returnSlots":0},"@allowance_530":{"entryPoint":2454,"id":530,"parameterSlots":2,"returnSlots":1},"@approve_555":{"entryPoint":1386,"id":555,"parameterSlots":2,"returnSlots":1},"@balanceOf_487":{"entryPoint":1899,"id":487,"parameterSlots":1,"returnSlots":1},"@decimals_463":{"entryPoint":1578,"id":463,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_658":{"entryPoint":2231,"id":658,"parameterSlots":2,"returnSlots":1},"@getRoleAdmin_146":{"entryPoint":1514,"id":146,"parameterSlots":1,"returnSlots":1},"@grantRole_166":{"entryPoint":1545,"id":166,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":1972,"id":79,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_617":{"entryPoint":1718,"id":617,"parameterSlots":2,"returnSlots":1},"@mint_4041":{"entryPoint":1773,"id":4041,"parameterSlots":2,"returnSlots":0},"@name_443":{"entryPoint":1240,"id":443,"parameterSlots":0,"returnSlots":1},"@renounceRole_209":{"entryPoint":1587,"id":209,"parameterSlots":2,"returnSlots":0},"@revokeRole_186":{"entryPoint":2421,"id":186,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1360":{"entryPoint":2589,"id":1360,"parameterSlots":1,"returnSlots":1},"@supportsInterface_60":{"entryPoint":1118,"id":60,"parameterSlots":1,"returnSlots":1},"@symbol_453":{"entryPoint":2078,"id":453,"parameterSlots":0,"returnSlots":1},"@toHexString_1291":{"entryPoint":4938,"id":1291,"parameterSlots":2,"returnSlots":1},"@toHexString_1311":{"entryPoint":4893,"id":1311,"parameterSlots":1,"returnSlots":1},"@totalSupply_473":{"entryPoint":1421,"id":473,"parameterSlots":0,"returnSlots":1},"@transferFrom_588":{"entryPoint":1467,"id":588,"parameterSlots":3,"returnSlots":1},"@transfer_512":{"entryPoint":2350,"id":512,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5510,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":5531,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5552,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5573,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5594,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5639,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5703,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5786,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":5850,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":5895,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5959,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6004,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6019,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6034,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6091,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":6140,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":6175,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_07ff70fd275540cbaf6ad370d0f20b4daf36515887b69565327b0f80c784907a_to_t_string_memory_ptr_fromStack":{"entryPoint":6210,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":6245,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":6280,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":6315,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":6350,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":6385,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6420,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":6455,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6490,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack":{"entryPoint":6525,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":6560,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6595,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":6610,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6625,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":6710,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6771,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6803,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_07ff70fd275540cbaf6ad370d0f20b4daf36515887b69565327b0f80c784907a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6835,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6867,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6899,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6931,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6963,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6995,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7027,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7059,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7091,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7123,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":7150,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7177,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7188,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7205,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7216,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7302,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7392,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7410,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7422,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7432,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7476,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7508,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":7518,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":7531,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":7582,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":7624,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7674,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7721,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7768,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7815,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7862,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7867,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":7884,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":7925,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_07ff70fd275540cbaf6ad370d0f20b4daf36515887b69565327b0f80c784907a":{"entryPoint":8004,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":8083,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":8162,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":8203,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":8282,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":8361,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874":{"entryPoint":8440,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":8481,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69":{"entryPoint":8560,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":8601,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":8680,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8721,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":8744,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":8767,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8790,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23769:15","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:15","statements":[{"nodeType":"YulAssignment","src":"69:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:15"},"nodeType":"YulFunctionCall","src":"78:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:15"},"nodeType":"YulFunctionCall","src":"107:33:15"},"nodeType":"YulExpressionStatement","src":"107:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:15","type":""}],"src":"7:139:15"},{"body":{"nodeType":"YulBlock","src":"204:87:15","statements":[{"nodeType":"YulAssignment","src":"214:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:15"},"nodeType":"YulFunctionCall","src":"223:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:15"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"252:26:15"},"nodeType":"YulFunctionCall","src":"252:33:15"},"nodeType":"YulExpressionStatement","src":"252:33:15"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:15","type":""}],"src":"152:139:15"},{"body":{"nodeType":"YulBlock","src":"348:86:15","statements":[{"nodeType":"YulAssignment","src":"358:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"380:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"367:12:15"},"nodeType":"YulFunctionCall","src":"367:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"358:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"422:5:15"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"396:25:15"},"nodeType":"YulFunctionCall","src":"396:32:15"},"nodeType":"YulExpressionStatement","src":"396:32:15"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"326:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"334:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"342:5:15","type":""}],"src":"297:137:15"},{"body":{"nodeType":"YulBlock","src":"492:87:15","statements":[{"nodeType":"YulAssignment","src":"502:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"524:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"511:12:15"},"nodeType":"YulFunctionCall","src":"511:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"502:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"567:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"540:26:15"},"nodeType":"YulFunctionCall","src":"540:33:15"},"nodeType":"YulExpressionStatement","src":"540:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"470:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"478:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"486:5:15","type":""}],"src":"440:139:15"},{"body":{"nodeType":"YulBlock","src":"651:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"697:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"699:77:15"},"nodeType":"YulFunctionCall","src":"699:79:15"},"nodeType":"YulExpressionStatement","src":"699:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"672:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"681:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"668:3:15"},"nodeType":"YulFunctionCall","src":"668:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"693:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"664:3:15"},"nodeType":"YulFunctionCall","src":"664:32:15"},"nodeType":"YulIf","src":"661:2:15"},{"nodeType":"YulBlock","src":"790:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"805:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"819:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"809:6:15","type":""}]},{"nodeType":"YulAssignment","src":"834:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"869:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"880:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"865:3:15"},"nodeType":"YulFunctionCall","src":"865:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"889:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"844:20:15"},"nodeType":"YulFunctionCall","src":"844:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"834:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"621:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"632:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"644:6:15","type":""}],"src":"585:329:15"},{"body":{"nodeType":"YulBlock","src":"1003:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"1049:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1051:77:15"},"nodeType":"YulFunctionCall","src":"1051:79:15"},"nodeType":"YulExpressionStatement","src":"1051:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1024:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1033:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1020:3:15"},"nodeType":"YulFunctionCall","src":"1020:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1045:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1016:3:15"},"nodeType":"YulFunctionCall","src":"1016:32:15"},"nodeType":"YulIf","src":"1013:2:15"},{"nodeType":"YulBlock","src":"1142:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1157:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1171:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1161:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1186:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1221:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1232:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1217:3:15"},"nodeType":"YulFunctionCall","src":"1217:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1241:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1196:20:15"},"nodeType":"YulFunctionCall","src":"1196:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1186:6:15"}]}]},{"nodeType":"YulBlock","src":"1269:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1284:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1298:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1288:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1314:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1360:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1345:3:15"},"nodeType":"YulFunctionCall","src":"1345:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1369:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1324:20:15"},"nodeType":"YulFunctionCall","src":"1324:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1314:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"965:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"976:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"988:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"996:6:15","type":""}],"src":"920:474:15"},{"body":{"nodeType":"YulBlock","src":"1500:519:15","statements":[{"body":{"nodeType":"YulBlock","src":"1546:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1548:77:15"},"nodeType":"YulFunctionCall","src":"1548:79:15"},"nodeType":"YulExpressionStatement","src":"1548:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1521:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1530:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1517:3:15"},"nodeType":"YulFunctionCall","src":"1517:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1542:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1513:3:15"},"nodeType":"YulFunctionCall","src":"1513:32:15"},"nodeType":"YulIf","src":"1510:2:15"},{"nodeType":"YulBlock","src":"1639:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1654:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1668:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1658:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1683:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1718:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1729:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1714:3:15"},"nodeType":"YulFunctionCall","src":"1714:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1738:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1693:20:15"},"nodeType":"YulFunctionCall","src":"1693:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1683:6:15"}]}]},{"nodeType":"YulBlock","src":"1766:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1781:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1795:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1785:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1811:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1846:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1857:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1842:3:15"},"nodeType":"YulFunctionCall","src":"1842:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1866:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1821:20:15"},"nodeType":"YulFunctionCall","src":"1821:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1811:6:15"}]}]},{"nodeType":"YulBlock","src":"1894:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1909:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1923:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1913:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1939:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1974:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1985:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1970:3:15"},"nodeType":"YulFunctionCall","src":"1970:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1994:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1949:20:15"},"nodeType":"YulFunctionCall","src":"1949:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1939:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1454:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1465:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1477:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1485:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1493:6:15","type":""}],"src":"1400:619:15"},{"body":{"nodeType":"YulBlock","src":"2108:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"2154:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2156:77:15"},"nodeType":"YulFunctionCall","src":"2156:79:15"},"nodeType":"YulExpressionStatement","src":"2156:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2129:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2138:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2125:3:15"},"nodeType":"YulFunctionCall","src":"2125:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2150:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2121:3:15"},"nodeType":"YulFunctionCall","src":"2121:32:15"},"nodeType":"YulIf","src":"2118:2:15"},{"nodeType":"YulBlock","src":"2247:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2262:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2276:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2266:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2291:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2326:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2337:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2322:3:15"},"nodeType":"YulFunctionCall","src":"2322:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2346:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2301:20:15"},"nodeType":"YulFunctionCall","src":"2301:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2291:6:15"}]}]},{"nodeType":"YulBlock","src":"2374:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2389:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2403:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2393:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2419:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2454:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2450:3:15"},"nodeType":"YulFunctionCall","src":"2450:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2474:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2429:20:15"},"nodeType":"YulFunctionCall","src":"2429:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2419:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2070:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2081:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2093:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2101:6:15","type":""}],"src":"2025:474:15"},{"body":{"nodeType":"YulBlock","src":"2571:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"2617:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2619:77:15"},"nodeType":"YulFunctionCall","src":"2619:79:15"},"nodeType":"YulExpressionStatement","src":"2619:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2592:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2601:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2588:3:15"},"nodeType":"YulFunctionCall","src":"2588:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2613:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2584:3:15"},"nodeType":"YulFunctionCall","src":"2584:32:15"},"nodeType":"YulIf","src":"2581:2:15"},{"nodeType":"YulBlock","src":"2710:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2725:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2739:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2729:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2754:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2800:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2785:3:15"},"nodeType":"YulFunctionCall","src":"2785:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2809:7:15"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2764:20:15"},"nodeType":"YulFunctionCall","src":"2764:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2754:6:15"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2541:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2552:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2564:6:15","type":""}],"src":"2505:329:15"},{"body":{"nodeType":"YulBlock","src":"2923:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"2969:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2971:77:15"},"nodeType":"YulFunctionCall","src":"2971:79:15"},"nodeType":"YulExpressionStatement","src":"2971:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2944:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2953:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2940:3:15"},"nodeType":"YulFunctionCall","src":"2940:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2965:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2936:3:15"},"nodeType":"YulFunctionCall","src":"2936:32:15"},"nodeType":"YulIf","src":"2933:2:15"},{"nodeType":"YulBlock","src":"3062:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3077:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3091:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3081:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3106:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3141:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3152:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3137:3:15"},"nodeType":"YulFunctionCall","src":"3137:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3161:7:15"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3116:20:15"},"nodeType":"YulFunctionCall","src":"3116:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3106:6:15"}]}]},{"nodeType":"YulBlock","src":"3189:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3204:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3218:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3208:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3234:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3269:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3280:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3265:3:15"},"nodeType":"YulFunctionCall","src":"3265:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3289:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3244:20:15"},"nodeType":"YulFunctionCall","src":"3244:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3234:6:15"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2885:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2896:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2908:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2916:6:15","type":""}],"src":"2840:474:15"},{"body":{"nodeType":"YulBlock","src":"3385:262:15","statements":[{"body":{"nodeType":"YulBlock","src":"3431:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3433:77:15"},"nodeType":"YulFunctionCall","src":"3433:79:15"},"nodeType":"YulExpressionStatement","src":"3433:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3406:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3415:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3402:3:15"},"nodeType":"YulFunctionCall","src":"3402:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3427:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3398:3:15"},"nodeType":"YulFunctionCall","src":"3398:32:15"},"nodeType":"YulIf","src":"3395:2:15"},{"nodeType":"YulBlock","src":"3524:116:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3539:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3553:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3543:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3568:62:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3602:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3613:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3598:3:15"},"nodeType":"YulFunctionCall","src":"3598:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3622:7:15"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"3578:19:15"},"nodeType":"YulFunctionCall","src":"3578:52:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3568:6:15"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3355:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3366:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3378:6:15","type":""}],"src":"3320:327:15"},{"body":{"nodeType":"YulBlock","src":"3712:50:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3729:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3749:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3734:14:15"},"nodeType":"YulFunctionCall","src":"3734:21:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3722:6:15"},"nodeType":"YulFunctionCall","src":"3722:34:15"},"nodeType":"YulExpressionStatement","src":"3722:34:15"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3700:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3707:3:15","type":""}],"src":"3653:109:15"},{"body":{"nodeType":"YulBlock","src":"3833:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3850:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3873:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3855:17:15"},"nodeType":"YulFunctionCall","src":"3855:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3843:6:15"},"nodeType":"YulFunctionCall","src":"3843:37:15"},"nodeType":"YulExpressionStatement","src":"3843:37:15"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3821:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3828:3:15","type":""}],"src":"3768:118:15"},{"body":{"nodeType":"YulBlock","src":"3984:272:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3994:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4041:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4008:32:15"},"nodeType":"YulFunctionCall","src":"4008:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3998:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4056:78:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4122:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"4127:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4063:58:15"},"nodeType":"YulFunctionCall","src":"4063:71:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4056:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4169:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4176:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4165:3:15"},"nodeType":"YulFunctionCall","src":"4165:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"4183:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"4188:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4143:21:15"},"nodeType":"YulFunctionCall","src":"4143:52:15"},"nodeType":"YulExpressionStatement","src":"4143:52:15"},{"nodeType":"YulAssignment","src":"4204:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4215:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4242:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4220:21:15"},"nodeType":"YulFunctionCall","src":"4220:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4211:3:15"},"nodeType":"YulFunctionCall","src":"4211:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4204:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3965:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3972:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3980:3:15","type":""}],"src":"3892:364:15"},{"body":{"nodeType":"YulBlock","src":"4372:267:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4382:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4429:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4396:32:15"},"nodeType":"YulFunctionCall","src":"4396:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4386:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4444:96:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4528:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"4533:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4451:76:15"},"nodeType":"YulFunctionCall","src":"4451:89:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4444:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4575:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4582:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4571:3:15"},"nodeType":"YulFunctionCall","src":"4571:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"4589:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"4594:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4549:21:15"},"nodeType":"YulFunctionCall","src":"4549:52:15"},"nodeType":"YulExpressionStatement","src":"4549:52:15"},{"nodeType":"YulAssignment","src":"4610:23:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4621:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"4626:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4617:3:15"},"nodeType":"YulFunctionCall","src":"4617:16:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4610:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4353:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4360:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4368:3:15","type":""}],"src":"4262:377:15"},{"body":{"nodeType":"YulBlock","src":"4791:220:15","statements":[{"nodeType":"YulAssignment","src":"4801:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4867:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4872:2:15","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4808:58:15"},"nodeType":"YulFunctionCall","src":"4808:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4801:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4973:3:15"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"4884:88:15"},"nodeType":"YulFunctionCall","src":"4884:93:15"},"nodeType":"YulExpressionStatement","src":"4884:93:15"},{"nodeType":"YulAssignment","src":"4986:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4997:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5002:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4993:3:15"},"nodeType":"YulFunctionCall","src":"4993:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4986:3:15"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4779:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4787:3:15","type":""}],"src":"4645:366:15"},{"body":{"nodeType":"YulBlock","src":"5163:220:15","statements":[{"nodeType":"YulAssignment","src":"5173:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5239:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5244:2:15","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5180:58:15"},"nodeType":"YulFunctionCall","src":"5180:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5173:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5345:3:15"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"5256:88:15"},"nodeType":"YulFunctionCall","src":"5256:93:15"},"nodeType":"YulExpressionStatement","src":"5256:93:15"},{"nodeType":"YulAssignment","src":"5358:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5369:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5374:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5365:3:15"},"nodeType":"YulFunctionCall","src":"5365:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5358:3:15"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5151:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5159:3:15","type":""}],"src":"5017:366:15"},{"body":{"nodeType":"YulBlock","src":"5535:220:15","statements":[{"nodeType":"YulAssignment","src":"5545:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5611:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5616:2:15","type":"","value":"51"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5552:58:15"},"nodeType":"YulFunctionCall","src":"5552:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5545:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5717:3:15"}],"functionName":{"name":"store_literal_in_memory_07ff70fd275540cbaf6ad370d0f20b4daf36515887b69565327b0f80c784907a","nodeType":"YulIdentifier","src":"5628:88:15"},"nodeType":"YulFunctionCall","src":"5628:93:15"},"nodeType":"YulExpressionStatement","src":"5628:93:15"},{"nodeType":"YulAssignment","src":"5730:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5741:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5746:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5737:3:15"},"nodeType":"YulFunctionCall","src":"5737:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5730:3:15"}]}]},"name":"abi_encode_t_stringliteral_07ff70fd275540cbaf6ad370d0f20b4daf36515887b69565327b0f80c784907a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5523:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5531:3:15","type":""}],"src":"5389:366:15"},{"body":{"nodeType":"YulBlock","src":"5907:220:15","statements":[{"nodeType":"YulAssignment","src":"5917:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5983:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5988:2:15","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5924:58:15"},"nodeType":"YulFunctionCall","src":"5924:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5917:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6089:3:15"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"6000:88:15"},"nodeType":"YulFunctionCall","src":"6000:93:15"},"nodeType":"YulExpressionStatement","src":"6000:93:15"},{"nodeType":"YulAssignment","src":"6102:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6113:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6118:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6109:3:15"},"nodeType":"YulFunctionCall","src":"6109:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6102:3:15"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5895:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5903:3:15","type":""}],"src":"5761:366:15"},{"body":{"nodeType":"YulBlock","src":"6279:220:15","statements":[{"nodeType":"YulAssignment","src":"6289:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6355:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6360:2:15","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6296:58:15"},"nodeType":"YulFunctionCall","src":"6296:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6289:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6461:3:15"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"6372:88:15"},"nodeType":"YulFunctionCall","src":"6372:93:15"},"nodeType":"YulExpressionStatement","src":"6372:93:15"},{"nodeType":"YulAssignment","src":"6474:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6485:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6490:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6481:3:15"},"nodeType":"YulFunctionCall","src":"6481:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6474:3:15"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6267:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6275:3:15","type":""}],"src":"6133:366:15"},{"body":{"nodeType":"YulBlock","src":"6651:220:15","statements":[{"nodeType":"YulAssignment","src":"6661:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6727:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6732:2:15","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6668:58:15"},"nodeType":"YulFunctionCall","src":"6668:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6661:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6833:3:15"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"6744:88:15"},"nodeType":"YulFunctionCall","src":"6744:93:15"},"nodeType":"YulExpressionStatement","src":"6744:93:15"},{"nodeType":"YulAssignment","src":"6846:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6857:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6862:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6853:3:15"},"nodeType":"YulFunctionCall","src":"6853:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6846:3:15"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6639:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6647:3:15","type":""}],"src":"6505:366:15"},{"body":{"nodeType":"YulBlock","src":"7023:220:15","statements":[{"nodeType":"YulAssignment","src":"7033:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7099:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7104:2:15","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7040:58:15"},"nodeType":"YulFunctionCall","src":"7040:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7033:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7205:3:15"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"7116:88:15"},"nodeType":"YulFunctionCall","src":"7116:93:15"},"nodeType":"YulExpressionStatement","src":"7116:93:15"},{"nodeType":"YulAssignment","src":"7218:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7229:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7234:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7225:3:15"},"nodeType":"YulFunctionCall","src":"7225:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7218:3:15"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7011:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7019:3:15","type":""}],"src":"6877:366:15"},{"body":{"nodeType":"YulBlock","src":"7395:220:15","statements":[{"nodeType":"YulAssignment","src":"7405:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7471:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7476:2:15","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7412:58:15"},"nodeType":"YulFunctionCall","src":"7412:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7405:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7577:3:15"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"7488:88:15"},"nodeType":"YulFunctionCall","src":"7488:93:15"},"nodeType":"YulExpressionStatement","src":"7488:93:15"},{"nodeType":"YulAssignment","src":"7590:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7601:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7606:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7597:3:15"},"nodeType":"YulFunctionCall","src":"7597:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7590:3:15"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7383:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7391:3:15","type":""}],"src":"7249:366:15"},{"body":{"nodeType":"YulBlock","src":"7785:238:15","statements":[{"nodeType":"YulAssignment","src":"7795:92:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7879:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7884:2:15","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7802:76:15"},"nodeType":"YulFunctionCall","src":"7802:85:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7795:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7985:3:15"}],"functionName":{"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulIdentifier","src":"7896:88:15"},"nodeType":"YulFunctionCall","src":"7896:93:15"},"nodeType":"YulExpressionStatement","src":"7896:93:15"},{"nodeType":"YulAssignment","src":"7998:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8009:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8014:2:15","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8005:3:15"},"nodeType":"YulFunctionCall","src":"8005:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7998:3:15"}]}]},"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7773:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7781:3:15","type":""}],"src":"7621:402:15"},{"body":{"nodeType":"YulBlock","src":"8175:220:15","statements":[{"nodeType":"YulAssignment","src":"8185:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8251:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8256:2:15","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8192:58:15"},"nodeType":"YulFunctionCall","src":"8192:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8185:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8357:3:15"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"8268:88:15"},"nodeType":"YulFunctionCall","src":"8268:93:15"},"nodeType":"YulExpressionStatement","src":"8268:93:15"},{"nodeType":"YulAssignment","src":"8370:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8381:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8386:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8377:3:15"},"nodeType":"YulFunctionCall","src":"8377:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8370:3:15"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8163:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8171:3:15","type":""}],"src":"8029:366:15"},{"body":{"nodeType":"YulBlock","src":"8565:238:15","statements":[{"nodeType":"YulAssignment","src":"8575:92:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8659:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8664:2:15","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8582:76:15"},"nodeType":"YulFunctionCall","src":"8582:85:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8575:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8765:3:15"}],"functionName":{"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulIdentifier","src":"8676:88:15"},"nodeType":"YulFunctionCall","src":"8676:93:15"},"nodeType":"YulExpressionStatement","src":"8676:93:15"},{"nodeType":"YulAssignment","src":"8778:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8789:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8794:2:15","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8785:3:15"},"nodeType":"YulFunctionCall","src":"8785:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8778:3:15"}]}]},"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8553:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8561:3:15","type":""}],"src":"8401:402:15"},{"body":{"nodeType":"YulBlock","src":"8955:220:15","statements":[{"nodeType":"YulAssignment","src":"8965:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9031:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9036:2:15","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8972:58:15"},"nodeType":"YulFunctionCall","src":"8972:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8965:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9137:3:15"}],"functionName":{"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulIdentifier","src":"9048:88:15"},"nodeType":"YulFunctionCall","src":"9048:93:15"},"nodeType":"YulExpressionStatement","src":"9048:93:15"},{"nodeType":"YulAssignment","src":"9150:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9161:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9166:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9157:3:15"},"nodeType":"YulFunctionCall","src":"9157:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9150:3:15"}]}]},"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8943:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8951:3:15","type":""}],"src":"8809:366:15"},{"body":{"nodeType":"YulBlock","src":"9327:220:15","statements":[{"nodeType":"YulAssignment","src":"9337:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9403:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9408:2:15","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9344:58:15"},"nodeType":"YulFunctionCall","src":"9344:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9337:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9509:3:15"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"9420:88:15"},"nodeType":"YulFunctionCall","src":"9420:93:15"},"nodeType":"YulExpressionStatement","src":"9420:93:15"},{"nodeType":"YulAssignment","src":"9522:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9533:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9538:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9529:3:15"},"nodeType":"YulFunctionCall","src":"9529:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9522:3:15"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9315:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9323:3:15","type":""}],"src":"9181:366:15"},{"body":{"nodeType":"YulBlock","src":"9618:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9635:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9658:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9640:17:15"},"nodeType":"YulFunctionCall","src":"9640:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9628:6:15"},"nodeType":"YulFunctionCall","src":"9628:37:15"},"nodeType":"YulExpressionStatement","src":"9628:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9606:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9613:3:15","type":""}],"src":"9553:118:15"},{"body":{"nodeType":"YulBlock","src":"9738:51:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9755:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9776:5:15"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"9760:15:15"},"nodeType":"YulFunctionCall","src":"9760:22:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9748:6:15"},"nodeType":"YulFunctionCall","src":"9748:35:15"},"nodeType":"YulExpressionStatement","src":"9748:35:15"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9726:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9733:3:15","type":""}],"src":"9677:112:15"},{"body":{"nodeType":"YulBlock","src":"10181:581:15","statements":[{"nodeType":"YulAssignment","src":"10192:155:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10343:3:15"}],"functionName":{"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10199:142:15"},"nodeType":"YulFunctionCall","src":"10199:148:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10192:3:15"}]},{"nodeType":"YulAssignment","src":"10357:102:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10446:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"10455:3:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10364:81:15"},"nodeType":"YulFunctionCall","src":"10364:95:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10357:3:15"}]},{"nodeType":"YulAssignment","src":"10469:155:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10620:3:15"}],"functionName":{"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10476:142:15"},"nodeType":"YulFunctionCall","src":"10476:148:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10469:3:15"}]},{"nodeType":"YulAssignment","src":"10634:102:15","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10723:6:15"},{"name":"pos","nodeType":"YulIdentifier","src":"10732:3:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10641:81:15"},"nodeType":"YulFunctionCall","src":"10641:95:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10634:3:15"}]},{"nodeType":"YulAssignment","src":"10746:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"10753:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10746:3:15"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10152:3:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10158:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10166:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10177:3:15","type":""}],"src":"9795:967:15"},{"body":{"nodeType":"YulBlock","src":"10860:118:15","statements":[{"nodeType":"YulAssignment","src":"10870:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10882:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10893:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10878:3:15"},"nodeType":"YulFunctionCall","src":"10878:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10870:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10944:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10957:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10968:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10953:3:15"},"nodeType":"YulFunctionCall","src":"10953:17:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"10906:37:15"},"nodeType":"YulFunctionCall","src":"10906:65:15"},"nodeType":"YulExpressionStatement","src":"10906:65:15"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10832:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10844:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10855:4:15","type":""}],"src":"10768:210:15"},{"body":{"nodeType":"YulBlock","src":"11082:124:15","statements":[{"nodeType":"YulAssignment","src":"11092:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11104:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11115:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11100:3:15"},"nodeType":"YulFunctionCall","src":"11100:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11092:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11172:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11185:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11196:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11181:3:15"},"nodeType":"YulFunctionCall","src":"11181:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11128:43:15"},"nodeType":"YulFunctionCall","src":"11128:71:15"},"nodeType":"YulExpressionStatement","src":"11128:71:15"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11054:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11066:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11077:4:15","type":""}],"src":"10984:222:15"},{"body":{"nodeType":"YulBlock","src":"11330:195:15","statements":[{"nodeType":"YulAssignment","src":"11340:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11352:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11363:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11348:3:15"},"nodeType":"YulFunctionCall","src":"11348:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11340:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11387:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11398:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11383:3:15"},"nodeType":"YulFunctionCall","src":"11383:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11406:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"11412:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11402:3:15"},"nodeType":"YulFunctionCall","src":"11402:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11376:6:15"},"nodeType":"YulFunctionCall","src":"11376:47:15"},"nodeType":"YulExpressionStatement","src":"11376:47:15"},{"nodeType":"YulAssignment","src":"11432:86:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11504:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"11513:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11440:63:15"},"nodeType":"YulFunctionCall","src":"11440:78:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11432:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11302:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11314:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11325:4:15","type":""}],"src":"11212:313:15"},{"body":{"nodeType":"YulBlock","src":"11702:248:15","statements":[{"nodeType":"YulAssignment","src":"11712:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11724:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11735:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11720:3:15"},"nodeType":"YulFunctionCall","src":"11720:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11712:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11759:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11770:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11755:3:15"},"nodeType":"YulFunctionCall","src":"11755:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11778:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"11784:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11774:3:15"},"nodeType":"YulFunctionCall","src":"11774:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11748:6:15"},"nodeType":"YulFunctionCall","src":"11748:47:15"},"nodeType":"YulExpressionStatement","src":"11748:47:15"},{"nodeType":"YulAssignment","src":"11804:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11938:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11812:124:15"},"nodeType":"YulFunctionCall","src":"11812:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11804:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11682:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11697:4:15","type":""}],"src":"11531:419:15"},{"body":{"nodeType":"YulBlock","src":"12127:248:15","statements":[{"nodeType":"YulAssignment","src":"12137:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12149:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12160:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12145:3:15"},"nodeType":"YulFunctionCall","src":"12145:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12137:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12184:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12195:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12180:3:15"},"nodeType":"YulFunctionCall","src":"12180:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12203:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"12209:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12199:3:15"},"nodeType":"YulFunctionCall","src":"12199:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12173:6:15"},"nodeType":"YulFunctionCall","src":"12173:47:15"},"nodeType":"YulExpressionStatement","src":"12173:47:15"},{"nodeType":"YulAssignment","src":"12229:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12363:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12237:124:15"},"nodeType":"YulFunctionCall","src":"12237:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12229:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12107:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12122:4:15","type":""}],"src":"11956:419:15"},{"body":{"nodeType":"YulBlock","src":"12552:248:15","statements":[{"nodeType":"YulAssignment","src":"12562:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12574:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12585:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12570:3:15"},"nodeType":"YulFunctionCall","src":"12570:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12562:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12609:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12620:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12605:3:15"},"nodeType":"YulFunctionCall","src":"12605:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12628:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"12634:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12624:3:15"},"nodeType":"YulFunctionCall","src":"12624:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12598:6:15"},"nodeType":"YulFunctionCall","src":"12598:47:15"},"nodeType":"YulExpressionStatement","src":"12598:47:15"},{"nodeType":"YulAssignment","src":"12654:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12788:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_07ff70fd275540cbaf6ad370d0f20b4daf36515887b69565327b0f80c784907a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12662:124:15"},"nodeType":"YulFunctionCall","src":"12662:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12654:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_07ff70fd275540cbaf6ad370d0f20b4daf36515887b69565327b0f80c784907a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12532:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12547:4:15","type":""}],"src":"12381:419:15"},{"body":{"nodeType":"YulBlock","src":"12977:248:15","statements":[{"nodeType":"YulAssignment","src":"12987:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12999:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13010:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12995:3:15"},"nodeType":"YulFunctionCall","src":"12995:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12987:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13034:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13045:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13030:3:15"},"nodeType":"YulFunctionCall","src":"13030:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13053:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13059:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13049:3:15"},"nodeType":"YulFunctionCall","src":"13049:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13023:6:15"},"nodeType":"YulFunctionCall","src":"13023:47:15"},"nodeType":"YulExpressionStatement","src":"13023:47:15"},{"nodeType":"YulAssignment","src":"13079:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13213:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13087:124:15"},"nodeType":"YulFunctionCall","src":"13087:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13079:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12957:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12972:4:15","type":""}],"src":"12806:419:15"},{"body":{"nodeType":"YulBlock","src":"13402:248:15","statements":[{"nodeType":"YulAssignment","src":"13412:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13424:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13435:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13420:3:15"},"nodeType":"YulFunctionCall","src":"13420:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13412:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13459:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13470:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13455:3:15"},"nodeType":"YulFunctionCall","src":"13455:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13478:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13484:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13474:3:15"},"nodeType":"YulFunctionCall","src":"13474:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13448:6:15"},"nodeType":"YulFunctionCall","src":"13448:47:15"},"nodeType":"YulExpressionStatement","src":"13448:47:15"},{"nodeType":"YulAssignment","src":"13504:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13638:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13512:124:15"},"nodeType":"YulFunctionCall","src":"13512:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13504:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13382:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13397:4:15","type":""}],"src":"13231:419:15"},{"body":{"nodeType":"YulBlock","src":"13827:248:15","statements":[{"nodeType":"YulAssignment","src":"13837:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13849:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13860:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13845:3:15"},"nodeType":"YulFunctionCall","src":"13845:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13837:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13884:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13895:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13880:3:15"},"nodeType":"YulFunctionCall","src":"13880:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13903:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13909:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13899:3:15"},"nodeType":"YulFunctionCall","src":"13899:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13873:6:15"},"nodeType":"YulFunctionCall","src":"13873:47:15"},"nodeType":"YulExpressionStatement","src":"13873:47:15"},{"nodeType":"YulAssignment","src":"13929:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14063:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13937:124:15"},"nodeType":"YulFunctionCall","src":"13937:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13929:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13807:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13822:4:15","type":""}],"src":"13656:419:15"},{"body":{"nodeType":"YulBlock","src":"14252:248:15","statements":[{"nodeType":"YulAssignment","src":"14262:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14274:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14285:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14270:3:15"},"nodeType":"YulFunctionCall","src":"14270:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14262:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14309:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14320:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14305:3:15"},"nodeType":"YulFunctionCall","src":"14305:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14328:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"14334:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14324:3:15"},"nodeType":"YulFunctionCall","src":"14324:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14298:6:15"},"nodeType":"YulFunctionCall","src":"14298:47:15"},"nodeType":"YulExpressionStatement","src":"14298:47:15"},{"nodeType":"YulAssignment","src":"14354:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14488:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14362:124:15"},"nodeType":"YulFunctionCall","src":"14362:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14354:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14232:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14247:4:15","type":""}],"src":"14081:419:15"},{"body":{"nodeType":"YulBlock","src":"14677:248:15","statements":[{"nodeType":"YulAssignment","src":"14687:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14699:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14710:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14695:3:15"},"nodeType":"YulFunctionCall","src":"14695:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14687:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14734:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14745:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14730:3:15"},"nodeType":"YulFunctionCall","src":"14730:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14753:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"14759:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14749:3:15"},"nodeType":"YulFunctionCall","src":"14749:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14723:6:15"},"nodeType":"YulFunctionCall","src":"14723:47:15"},"nodeType":"YulExpressionStatement","src":"14723:47:15"},{"nodeType":"YulAssignment","src":"14779:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14913:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14787:124:15"},"nodeType":"YulFunctionCall","src":"14787:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14779:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14657:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14672:4:15","type":""}],"src":"14506:419:15"},{"body":{"nodeType":"YulBlock","src":"15102:248:15","statements":[{"nodeType":"YulAssignment","src":"15112:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15124:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15135:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15120:3:15"},"nodeType":"YulFunctionCall","src":"15120:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15112:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15159:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15170:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15155:3:15"},"nodeType":"YulFunctionCall","src":"15155:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15178:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"15184:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15174:3:15"},"nodeType":"YulFunctionCall","src":"15174:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15148:6:15"},"nodeType":"YulFunctionCall","src":"15148:47:15"},"nodeType":"YulExpressionStatement","src":"15148:47:15"},{"nodeType":"YulAssignment","src":"15204:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15338:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15212:124:15"},"nodeType":"YulFunctionCall","src":"15212:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15204:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15082:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15097:4:15","type":""}],"src":"14931:419:15"},{"body":{"nodeType":"YulBlock","src":"15527:248:15","statements":[{"nodeType":"YulAssignment","src":"15537:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15549:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15560:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15545:3:15"},"nodeType":"YulFunctionCall","src":"15545:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15537:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15584:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15595:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15580:3:15"},"nodeType":"YulFunctionCall","src":"15580:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15603:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"15609:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15599:3:15"},"nodeType":"YulFunctionCall","src":"15599:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15573:6:15"},"nodeType":"YulFunctionCall","src":"15573:47:15"},"nodeType":"YulExpressionStatement","src":"15573:47:15"},{"nodeType":"YulAssignment","src":"15629:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15763:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15637:124:15"},"nodeType":"YulFunctionCall","src":"15637:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15629:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15507:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15522:4:15","type":""}],"src":"15356:419:15"},{"body":{"nodeType":"YulBlock","src":"15952:248:15","statements":[{"nodeType":"YulAssignment","src":"15962:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15974:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15985:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15970:3:15"},"nodeType":"YulFunctionCall","src":"15970:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15962:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16009:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16020:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16005:3:15"},"nodeType":"YulFunctionCall","src":"16005:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16028:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"16034:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16024:3:15"},"nodeType":"YulFunctionCall","src":"16024:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15998:6:15"},"nodeType":"YulFunctionCall","src":"15998:47:15"},"nodeType":"YulExpressionStatement","src":"15998:47:15"},{"nodeType":"YulAssignment","src":"16054:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16188:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16062:124:15"},"nodeType":"YulFunctionCall","src":"16062:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16054:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15932:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15947:4:15","type":""}],"src":"15781:419:15"},{"body":{"nodeType":"YulBlock","src":"16304:124:15","statements":[{"nodeType":"YulAssignment","src":"16314:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16326:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16337:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16322:3:15"},"nodeType":"YulFunctionCall","src":"16322:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16314:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16394:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16407:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16418:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16403:3:15"},"nodeType":"YulFunctionCall","src":"16403:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16350:43:15"},"nodeType":"YulFunctionCall","src":"16350:71:15"},"nodeType":"YulExpressionStatement","src":"16350:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16276:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16288:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16299:4:15","type":""}],"src":"16206:222:15"},{"body":{"nodeType":"YulBlock","src":"16528:120:15","statements":[{"nodeType":"YulAssignment","src":"16538:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16550:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16561:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16546:3:15"},"nodeType":"YulFunctionCall","src":"16546:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16538:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16614:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16627:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16638:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16623:3:15"},"nodeType":"YulFunctionCall","src":"16623:17:15"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"16574:39:15"},"nodeType":"YulFunctionCall","src":"16574:67:15"},"nodeType":"YulExpressionStatement","src":"16574:67:15"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16500:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16512:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16523:4:15","type":""}],"src":"16434:214:15"},{"body":{"nodeType":"YulBlock","src":"16694:35:15","statements":[{"nodeType":"YulAssignment","src":"16704:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16720:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16714:5:15"},"nodeType":"YulFunctionCall","src":"16714:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16704:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16687:6:15","type":""}],"src":"16654:75:15"},{"body":{"nodeType":"YulBlock","src":"16794:40:15","statements":[{"nodeType":"YulAssignment","src":"16805:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16821:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16815:5:15"},"nodeType":"YulFunctionCall","src":"16815:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16805:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16777:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16787:6:15","type":""}],"src":"16735:99:15"},{"body":{"nodeType":"YulBlock","src":"16936:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16953:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"16958:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16946:6:15"},"nodeType":"YulFunctionCall","src":"16946:19:15"},"nodeType":"YulExpressionStatement","src":"16946:19:15"},{"nodeType":"YulAssignment","src":"16974:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16993:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"16998:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16989:3:15"},"nodeType":"YulFunctionCall","src":"16989:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16974:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16908:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"16913:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16924:11:15","type":""}],"src":"16840:169:15"},{"body":{"nodeType":"YulBlock","src":"17129:34:15","statements":[{"nodeType":"YulAssignment","src":"17139:18:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"17154:3:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17139:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17101:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"17106:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17117:11:15","type":""}],"src":"17015:148:15"},{"body":{"nodeType":"YulBlock","src":"17213:261:15","statements":[{"nodeType":"YulAssignment","src":"17223:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17246:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17228:17:15"},"nodeType":"YulFunctionCall","src":"17228:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17223:1:15"}]},{"nodeType":"YulAssignment","src":"17257:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17280:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17262:17:15"},"nodeType":"YulFunctionCall","src":"17262:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17257:1:15"}]},{"body":{"nodeType":"YulBlock","src":"17420:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17422:16:15"},"nodeType":"YulFunctionCall","src":"17422:18:15"},"nodeType":"YulExpressionStatement","src":"17422:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17341:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17348:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"17416:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17344:3:15"},"nodeType":"YulFunctionCall","src":"17344:74:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17338:2:15"},"nodeType":"YulFunctionCall","src":"17338:81:15"},"nodeType":"YulIf","src":"17335:2:15"},{"nodeType":"YulAssignment","src":"17452:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17463:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"17466:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17459:3:15"},"nodeType":"YulFunctionCall","src":"17459:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17452:3:15"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17200:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"17203:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17209:3:15","type":""}],"src":"17169:305:15"},{"body":{"nodeType":"YulBlock","src":"17528:300:15","statements":[{"nodeType":"YulAssignment","src":"17538:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17561:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17543:17:15"},"nodeType":"YulFunctionCall","src":"17543:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17538:1:15"}]},{"nodeType":"YulAssignment","src":"17572:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17595:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17577:17:15"},"nodeType":"YulFunctionCall","src":"17577:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17572:1:15"}]},{"body":{"nodeType":"YulBlock","src":"17770:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17772:16:15"},"nodeType":"YulFunctionCall","src":"17772:18:15"},"nodeType":"YulExpressionStatement","src":"17772:18:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17682:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17675:6:15"},"nodeType":"YulFunctionCall","src":"17675:9:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17668:6:15"},"nodeType":"YulFunctionCall","src":"17668:17:15"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17690:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17697:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"17765:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17693:3:15"},"nodeType":"YulFunctionCall","src":"17693:74:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17687:2:15"},"nodeType":"YulFunctionCall","src":"17687:81:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17664:3:15"},"nodeType":"YulFunctionCall","src":"17664:105:15"},"nodeType":"YulIf","src":"17661:2:15"},{"nodeType":"YulAssignment","src":"17802:20:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17817:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"17820:1:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17813:3:15"},"nodeType":"YulFunctionCall","src":"17813:9:15"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"17802:7:15"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17511:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"17514:1:15","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"17520:7:15","type":""}],"src":"17480:348:15"},{"body":{"nodeType":"YulBlock","src":"17879:51:15","statements":[{"nodeType":"YulAssignment","src":"17889:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17918:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17900:17:15"},"nodeType":"YulFunctionCall","src":"17900:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17889:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17861:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17871:7:15","type":""}],"src":"17834:96:15"},{"body":{"nodeType":"YulBlock","src":"17978:48:15","statements":[{"nodeType":"YulAssignment","src":"17988:32:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18013:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18006:6:15"},"nodeType":"YulFunctionCall","src":"18006:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17999:6:15"},"nodeType":"YulFunctionCall","src":"17999:21:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17988:7:15"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17960:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17970:7:15","type":""}],"src":"17936:90:15"},{"body":{"nodeType":"YulBlock","src":"18077:32:15","statements":[{"nodeType":"YulAssignment","src":"18087:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"18098:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18087:7:15"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18059:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18069:7:15","type":""}],"src":"18032:77:15"},{"body":{"nodeType":"YulBlock","src":"18159:105:15","statements":[{"nodeType":"YulAssignment","src":"18169:89:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18184:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"18191:66:15","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18180:3:15"},"nodeType":"YulFunctionCall","src":"18180:78:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18169:7:15"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18141:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18151:7:15","type":""}],"src":"18115:149:15"},{"body":{"nodeType":"YulBlock","src":"18315:81:15","statements":[{"nodeType":"YulAssignment","src":"18325:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18340:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"18347:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18336:3:15"},"nodeType":"YulFunctionCall","src":"18336:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18325:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18297:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18307:7:15","type":""}],"src":"18270:126:15"},{"body":{"nodeType":"YulBlock","src":"18447:32:15","statements":[{"nodeType":"YulAssignment","src":"18457:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"18468:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18457:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18429:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18439:7:15","type":""}],"src":"18402:77:15"},{"body":{"nodeType":"YulBlock","src":"18528:43:15","statements":[{"nodeType":"YulAssignment","src":"18538:27:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18553:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"18560:4:15","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18549:3:15"},"nodeType":"YulFunctionCall","src":"18549:16:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18538:7:15"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18510:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18520:7:15","type":""}],"src":"18485:86:15"},{"body":{"nodeType":"YulBlock","src":"18626:258:15","statements":[{"nodeType":"YulVariableDeclaration","src":"18636:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"18645:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18640:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"18705:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18730:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"18735:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18726:3:15"},"nodeType":"YulFunctionCall","src":"18726:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18749:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"18754:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18745:3:15"},"nodeType":"YulFunctionCall","src":"18745:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18739:5:15"},"nodeType":"YulFunctionCall","src":"18739:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18719:6:15"},"nodeType":"YulFunctionCall","src":"18719:39:15"},"nodeType":"YulExpressionStatement","src":"18719:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18666:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"18669:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18663:2:15"},"nodeType":"YulFunctionCall","src":"18663:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18677:19:15","statements":[{"nodeType":"YulAssignment","src":"18679:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18688:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"18691:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18684:3:15"},"nodeType":"YulFunctionCall","src":"18684:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18679:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"18659:3:15","statements":[]},"src":"18655:113:15"},{"body":{"nodeType":"YulBlock","src":"18802:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18852:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"18857:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18848:3:15"},"nodeType":"YulFunctionCall","src":"18848:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"18866:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18841:6:15"},"nodeType":"YulFunctionCall","src":"18841:27:15"},"nodeType":"YulExpressionStatement","src":"18841:27:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18783:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"18786:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18780:2:15"},"nodeType":"YulFunctionCall","src":"18780:13:15"},"nodeType":"YulIf","src":"18777:2:15"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18608:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18613:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"18618:6:15","type":""}],"src":"18577:307:15"},{"body":{"nodeType":"YulBlock","src":"18933:128:15","statements":[{"nodeType":"YulAssignment","src":"18943:33:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18970:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18952:17:15"},"nodeType":"YulFunctionCall","src":"18952:24:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18943:5:15"}]},{"body":{"nodeType":"YulBlock","src":"19004:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19006:16:15"},"nodeType":"YulFunctionCall","src":"19006:18:15"},"nodeType":"YulExpressionStatement","src":"19006:18:15"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18991:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"18998:4:15","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18988:2:15"},"nodeType":"YulFunctionCall","src":"18988:15:15"},"nodeType":"YulIf","src":"18985:2:15"},{"nodeType":"YulAssignment","src":"19035:20:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19046:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"19053:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19042:3:15"},"nodeType":"YulFunctionCall","src":"19042:13:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19035:3:15"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18919:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18929:3:15","type":""}],"src":"18890:171:15"},{"body":{"nodeType":"YulBlock","src":"19118:269:15","statements":[{"nodeType":"YulAssignment","src":"19128:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19142:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"19148:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19138:3:15"},"nodeType":"YulFunctionCall","src":"19138:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19128:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"19159:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19189:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"19195:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19185:3:15"},"nodeType":"YulFunctionCall","src":"19185:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"19163:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"19236:51:15","statements":[{"nodeType":"YulAssignment","src":"19250:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19264:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"19272:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19260:3:15"},"nodeType":"YulFunctionCall","src":"19260:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19250:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19216:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19209:6:15"},"nodeType":"YulFunctionCall","src":"19209:26:15"},"nodeType":"YulIf","src":"19206:2:15"},{"body":{"nodeType":"YulBlock","src":"19339:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"19353:16:15"},"nodeType":"YulFunctionCall","src":"19353:18:15"},"nodeType":"YulExpressionStatement","src":"19353:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19303:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19326:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"19334:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19323:2:15"},"nodeType":"YulFunctionCall","src":"19323:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19300:2:15"},"nodeType":"YulFunctionCall","src":"19300:38:15"},"nodeType":"YulIf","src":"19297:2:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19102:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"19111:6:15","type":""}],"src":"19067:320:15"},{"body":{"nodeType":"YulBlock","src":"19421:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19438:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19441:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19431:6:15"},"nodeType":"YulFunctionCall","src":"19431:88:15"},"nodeType":"YulExpressionStatement","src":"19431:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19535:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19538:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19528:6:15"},"nodeType":"YulFunctionCall","src":"19528:15:15"},"nodeType":"YulExpressionStatement","src":"19528:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19559:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19562:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19552:6:15"},"nodeType":"YulFunctionCall","src":"19552:15:15"},"nodeType":"YulExpressionStatement","src":"19552:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19393:180:15"},{"body":{"nodeType":"YulBlock","src":"19607:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19624:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19627:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19617:6:15"},"nodeType":"YulFunctionCall","src":"19617:88:15"},"nodeType":"YulExpressionStatement","src":"19617:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19721:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19724:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19714:6:15"},"nodeType":"YulFunctionCall","src":"19714:15:15"},"nodeType":"YulExpressionStatement","src":"19714:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19745:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19748:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19738:6:15"},"nodeType":"YulFunctionCall","src":"19738:15:15"},"nodeType":"YulExpressionStatement","src":"19738:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"19579:180:15"},{"body":{"nodeType":"YulBlock","src":"19793:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19810:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19813:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19803:6:15"},"nodeType":"YulFunctionCall","src":"19803:88:15"},"nodeType":"YulExpressionStatement","src":"19803:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19907:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19910:4:15","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19900:6:15"},"nodeType":"YulFunctionCall","src":"19900:15:15"},"nodeType":"YulExpressionStatement","src":"19900:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19931:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19934:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19924:6:15"},"nodeType":"YulFunctionCall","src":"19924:15:15"},"nodeType":"YulExpressionStatement","src":"19924:15:15"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"19765:180:15"},{"body":{"nodeType":"YulBlock","src":"19979:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19996:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19999:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19989:6:15"},"nodeType":"YulFunctionCall","src":"19989:88:15"},"nodeType":"YulExpressionStatement","src":"19989:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20093:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20096:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20086:6:15"},"nodeType":"YulFunctionCall","src":"20086:15:15"},"nodeType":"YulExpressionStatement","src":"20086:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20117:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20120:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20110:6:15"},"nodeType":"YulFunctionCall","src":"20110:15:15"},"nodeType":"YulExpressionStatement","src":"20110:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"19951:180:15"},{"body":{"nodeType":"YulBlock","src":"20226:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20243:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20246:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20236:6:15"},"nodeType":"YulFunctionCall","src":"20236:12:15"},"nodeType":"YulExpressionStatement","src":"20236:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"20137:117:15"},{"body":{"nodeType":"YulBlock","src":"20349:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20366:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20369:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20359:6:15"},"nodeType":"YulFunctionCall","src":"20359:12:15"},"nodeType":"YulExpressionStatement","src":"20359:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"20260:117:15"},{"body":{"nodeType":"YulBlock","src":"20431:54:15","statements":[{"nodeType":"YulAssignment","src":"20441:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20459:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"20466:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20455:3:15"},"nodeType":"YulFunctionCall","src":"20455:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20475:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20471:3:15"},"nodeType":"YulFunctionCall","src":"20471:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20451:3:15"},"nodeType":"YulFunctionCall","src":"20451:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20441:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20414:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"20424:6:15","type":""}],"src":"20383:102:15"},{"body":{"nodeType":"YulBlock","src":"20597:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20619:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"20627:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20615:3:15"},"nodeType":"YulFunctionCall","src":"20615:14:15"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"20631:34:15","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20608:6:15"},"nodeType":"YulFunctionCall","src":"20608:58:15"},"nodeType":"YulExpressionStatement","src":"20608:58:15"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20589:6:15","type":""}],"src":"20491:182:15"},{"body":{"nodeType":"YulBlock","src":"20785:116:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20807:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"20815:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20803:3:15"},"nodeType":"YulFunctionCall","src":"20803:14:15"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"20819:34:15","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20796:6:15"},"nodeType":"YulFunctionCall","src":"20796:58:15"},"nodeType":"YulExpressionStatement","src":"20796:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20875:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"20883:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20871:3:15"},"nodeType":"YulFunctionCall","src":"20871:15:15"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"20888:5:15","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20864:6:15"},"nodeType":"YulFunctionCall","src":"20864:30:15"},"nodeType":"YulExpressionStatement","src":"20864:30:15"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20777:6:15","type":""}],"src":"20679:222:15"},{"body":{"nodeType":"YulBlock","src":"21013:132:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21035:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21043:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21031:3:15"},"nodeType":"YulFunctionCall","src":"21031:14:15"},{"hexValue":"43686970546f6b656e3a206d7573742068617665206d696e74657220726f6c65","kind":"string","nodeType":"YulLiteral","src":"21047:34:15","type":"","value":"ChipToken: must have minter role"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21024:6:15"},"nodeType":"YulFunctionCall","src":"21024:58:15"},"nodeType":"YulExpressionStatement","src":"21024:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21103:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21111:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21099:3:15"},"nodeType":"YulFunctionCall","src":"21099:15:15"},{"hexValue":"20746f206d696e74206e65772063686970732e","kind":"string","nodeType":"YulLiteral","src":"21116:21:15","type":"","value":" to mint new chips."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21092:6:15"},"nodeType":"YulFunctionCall","src":"21092:46:15"},"nodeType":"YulExpressionStatement","src":"21092:46:15"}]},"name":"store_literal_in_memory_07ff70fd275540cbaf6ad370d0f20b4daf36515887b69565327b0f80c784907a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21005:6:15","type":""}],"src":"20907:238:15"},{"body":{"nodeType":"YulBlock","src":"21257:115:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21279:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21287:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21275:3:15"},"nodeType":"YulFunctionCall","src":"21275:14:15"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"21291:34:15","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21268:6:15"},"nodeType":"YulFunctionCall","src":"21268:58:15"},"nodeType":"YulExpressionStatement","src":"21268:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21347:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21355:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21343:3:15"},"nodeType":"YulFunctionCall","src":"21343:15:15"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"21360:4:15","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21336:6:15"},"nodeType":"YulFunctionCall","src":"21336:29:15"},"nodeType":"YulExpressionStatement","src":"21336:29:15"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21249:6:15","type":""}],"src":"21151:221:15"},{"body":{"nodeType":"YulBlock","src":"21484:73:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21506:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21514:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21502:3:15"},"nodeType":"YulFunctionCall","src":"21502:14:15"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"21518:31:15","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21495:6:15"},"nodeType":"YulFunctionCall","src":"21495:55:15"},"nodeType":"YulExpressionStatement","src":"21495:55:15"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21476:6:15","type":""}],"src":"21378:179:15"},{"body":{"nodeType":"YulBlock","src":"21669:119:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21691:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21699:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21687:3:15"},"nodeType":"YulFunctionCall","src":"21687:14:15"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"21703:34:15","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21680:6:15"},"nodeType":"YulFunctionCall","src":"21680:58:15"},"nodeType":"YulExpressionStatement","src":"21680:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21759:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21767:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21755:3:15"},"nodeType":"YulFunctionCall","src":"21755:15:15"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"21772:8:15","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21748:6:15"},"nodeType":"YulFunctionCall","src":"21748:33:15"},"nodeType":"YulExpressionStatement","src":"21748:33:15"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21661:6:15","type":""}],"src":"21563:225:15"},{"body":{"nodeType":"YulBlock","src":"21900:118:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21922:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21930:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21918:3:15"},"nodeType":"YulFunctionCall","src":"21918:14:15"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"21934:34:15","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21911:6:15"},"nodeType":"YulFunctionCall","src":"21911:58:15"},"nodeType":"YulExpressionStatement","src":"21911:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21990:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"21998:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21986:3:15"},"nodeType":"YulFunctionCall","src":"21986:15:15"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"22003:7:15","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21979:6:15"},"nodeType":"YulFunctionCall","src":"21979:32:15"},"nodeType":"YulExpressionStatement","src":"21979:32:15"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21892:6:15","type":""}],"src":"21794:224:15"},{"body":{"nodeType":"YulBlock","src":"22130:117:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22152:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22160:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22148:3:15"},"nodeType":"YulFunctionCall","src":"22148:14:15"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"22164:34:15","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22141:6:15"},"nodeType":"YulFunctionCall","src":"22141:58:15"},"nodeType":"YulExpressionStatement","src":"22141:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22220:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22228:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22216:3:15"},"nodeType":"YulFunctionCall","src":"22216:15:15"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"22233:6:15","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22209:6:15"},"nodeType":"YulFunctionCall","src":"22209:31:15"},"nodeType":"YulExpressionStatement","src":"22209:31:15"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22122:6:15","type":""}],"src":"22024:223:15"},{"body":{"nodeType":"YulBlock","src":"22359:67:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22381:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22389:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22377:3:15"},"nodeType":"YulFunctionCall","src":"22377:14:15"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"22393:25:15","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22370:6:15"},"nodeType":"YulFunctionCall","src":"22370:49:15"},"nodeType":"YulExpressionStatement","src":"22370:49:15"}]},"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22351:6:15","type":""}],"src":"22253:173:15"},{"body":{"nodeType":"YulBlock","src":"22538:118:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22560:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22568:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22556:3:15"},"nodeType":"YulFunctionCall","src":"22556:14:15"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"22572:34:15","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22549:6:15"},"nodeType":"YulFunctionCall","src":"22549:58:15"},"nodeType":"YulExpressionStatement","src":"22549:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22628:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22636:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22624:3:15"},"nodeType":"YulFunctionCall","src":"22624:15:15"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"22641:7:15","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22617:6:15"},"nodeType":"YulFunctionCall","src":"22617:32:15"},"nodeType":"YulExpressionStatement","src":"22617:32:15"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22530:6:15","type":""}],"src":"22432:224:15"},{"body":{"nodeType":"YulBlock","src":"22768:61:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22790:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22798:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22786:3:15"},"nodeType":"YulFunctionCall","src":"22786:14:15"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"22802:19:15","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22779:6:15"},"nodeType":"YulFunctionCall","src":"22779:43:15"},"nodeType":"YulExpressionStatement","src":"22779:43:15"}]},"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22760:6:15","type":""}],"src":"22662:167:15"},{"body":{"nodeType":"YulBlock","src":"22941:128:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22963:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"22971:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22959:3:15"},"nodeType":"YulFunctionCall","src":"22959:14:15"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"22975:34:15","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22952:6:15"},"nodeType":"YulFunctionCall","src":"22952:58:15"},"nodeType":"YulExpressionStatement","src":"22952:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23031:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23039:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23027:3:15"},"nodeType":"YulFunctionCall","src":"23027:15:15"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"23044:17:15","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23020:6:15"},"nodeType":"YulFunctionCall","src":"23020:42:15"},"nodeType":"YulExpressionStatement","src":"23020:42:15"}]},"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22933:6:15","type":""}],"src":"22835:234:15"},{"body":{"nodeType":"YulBlock","src":"23181:75:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23203:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"23211:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23199:3:15"},"nodeType":"YulFunctionCall","src":"23199:14:15"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"23215:33:15","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23192:6:15"},"nodeType":"YulFunctionCall","src":"23192:57:15"},"nodeType":"YulExpressionStatement","src":"23192:57:15"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23173:6:15","type":""}],"src":"23075:181:15"},{"body":{"nodeType":"YulBlock","src":"23305:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"23362:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23371:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23374:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23364:6:15"},"nodeType":"YulFunctionCall","src":"23364:12:15"},"nodeType":"YulExpressionStatement","src":"23364:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23328:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23353:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"23335:17:15"},"nodeType":"YulFunctionCall","src":"23335:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23325:2:15"},"nodeType":"YulFunctionCall","src":"23325:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23318:6:15"},"nodeType":"YulFunctionCall","src":"23318:43:15"},"nodeType":"YulIf","src":"23315:2:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23298:5:15","type":""}],"src":"23262:122:15"},{"body":{"nodeType":"YulBlock","src":"23433:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"23490:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23499:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23502:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23492:6:15"},"nodeType":"YulFunctionCall","src":"23492:12:15"},"nodeType":"YulExpressionStatement","src":"23492:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23456:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23481:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"23463:17:15"},"nodeType":"YulFunctionCall","src":"23463:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23453:2:15"},"nodeType":"YulFunctionCall","src":"23453:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23446:6:15"},"nodeType":"YulFunctionCall","src":"23446:43:15"},"nodeType":"YulIf","src":"23443:2:15"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23426:5:15","type":""}],"src":"23390:122:15"},{"body":{"nodeType":"YulBlock","src":"23560:78:15","statements":[{"body":{"nodeType":"YulBlock","src":"23616:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23625:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23628:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23618:6:15"},"nodeType":"YulFunctionCall","src":"23618:12:15"},"nodeType":"YulExpressionStatement","src":"23618:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23583:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23607:5:15"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"23590:16:15"},"nodeType":"YulFunctionCall","src":"23590:23:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23580:2:15"},"nodeType":"YulFunctionCall","src":"23580:34:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23573:6:15"},"nodeType":"YulFunctionCall","src":"23573:42:15"},"nodeType":"YulIf","src":"23570:2:15"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23553:5:15","type":""}],"src":"23518:120:15"},{"body":{"nodeType":"YulBlock","src":"23687:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"23744:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23753:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23756:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23746:6:15"},"nodeType":"YulFunctionCall","src":"23746:12:15"},"nodeType":"YulExpressionStatement","src":"23746:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23710:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23735:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23717:17:15"},"nodeType":"YulFunctionCall","src":"23717:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23707:2:15"},"nodeType":"YulFunctionCall","src":"23707:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23700:6:15"},"nodeType":"YulFunctionCall","src":"23700:43:15"},"nodeType":"YulIf","src":"23697:2:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23680:5:15","type":""}],"src":"23644:122:15"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_07ff70fd275540cbaf6ad370d0f20b4daf36515887b69565327b0f80c784907a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_07ff70fd275540cbaf6ad370d0f20b4daf36515887b69565327b0f80c784907a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_07ff70fd275540cbaf6ad370d0f20b4daf36515887b69565327b0f80c784907a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_07ff70fd275540cbaf6ad370d0f20b4daf36515887b69565327b0f80c784907a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_07ff70fd275540cbaf6ad370d0f20b4daf36515887b69565327b0f80c784907a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ChipToken: must have minter role\")\n\n        mstore(add(memPtr, 32), \" to mint new chips.\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101375760003560e01c806339509351116100b8578063a217fddf1161007c578063a217fddf14610376578063a457c2d714610394578063a9059cbb146103c4578063d5391393146103f4578063d547741f14610412578063dd62ed3e1461042e57610137565b806339509351146102ac57806340c10f19146102dc57806370a08231146102f857806391d148541461032857806395d89b411461035857610137565b806323b872dd116100ff57806323b872dd146101f6578063248a9ca3146102265780632f2ff15d14610256578063313ce5671461027257806336568abe1461029057610137565b806301ffc9a71461013c57806306fdde031461016c578063095ea7b31461018a57806318160ddd146101ba578063206b60f9146101d8575b600080fd5b61015660048036038101906101519190611747565b61045e565b6040516101639190611a1b565b60405180910390f35b6101746104d8565b6040516101819190611a51565b60405180910390f35b6101a4600480360381019061019f919061169a565b61056a565b6040516101b19190611a1b565b60405180910390f35b6101c261058d565b6040516101cf9190611bd3565b60405180910390f35b6101e0610597565b6040516101ed9190611a36565b60405180910390f35b610210600480360381019061020b9190611647565b6105bb565b60405161021d9190611a1b565b60405180910390f35b610240600480360381019061023b91906116da565b6105ea565b60405161024d9190611a36565b60405180910390f35b610270600480360381019061026b9190611707565b610609565b005b61027a61062a565b6040516102879190611bee565b60405180910390f35b6102aa60048036038101906102a59190611707565b610633565b005b6102c660048036038101906102c1919061169a565b6106b6565b6040516102d39190611a1b565b60405180910390f35b6102f660048036038101906102f1919061169a565b6106ed565b005b610312600480360381019061030d91906115da565b61076b565b60405161031f9190611bd3565b60405180910390f35b610342600480360381019061033d9190611707565b6107b4565b60405161034f9190611a1b565b60405180910390f35b61036061081e565b60405161036d9190611a51565b60405180910390f35b61037e6108b0565b60405161038b9190611a36565b60405180910390f35b6103ae60048036038101906103a9919061169a565b6108b7565b6040516103bb9190611a1b565b60405180910390f35b6103de60048036038101906103d9919061169a565b61092e565b6040516103eb9190611a1b565b60405180910390f35b6103fc610951565b6040516104099190611a36565b60405180910390f35b61042c60048036038101906104279190611707565b610975565b005b61044860048036038101906104439190611607565b610996565b6040516104559190611bd3565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104d157506104d082610a1d565b5b9050919050565b6060600480546104e790611dc8565b80601f016020809104026020016040519081016040528092919081815260200182805461051390611dc8565b80156105605780601f1061053557610100808354040283529160200191610560565b820191906000526020600020905b81548152906001019060200180831161054357829003601f168201915b5050505050905090565b600080610575610a87565b9050610582818585610a8f565b600191505092915050565b6000600354905090565b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c81565b6000806105c6610a87565b90506105d3858285610c5a565b6105de858585610ce6565b60019150509392505050565b6000806000838152602001908152602001600020600101549050919050565b610612826105ea565b61061b81610f61565b6106258383610f75565b505050565b60006012905090565b61063b610a87565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f90611b93565b60405180910390fd5b6106b28282611055565b5050565b6000806106c1610a87565b90506106e28185856106d38589610996565b6106dd9190611c30565b610a8f565b600191505092915050565b61071e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610719610a87565b6107b4565b61075d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075490611ab3565b60405180910390fd5b6107678282611136565b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60606005805461082d90611dc8565b80601f016020809104026020016040519081016040528092919081815260200182805461085990611dc8565b80156108a65780601f1061087b576101008083540402835291602001916108a6565b820191906000526020600020905b81548152906001019060200180831161088957829003601f168201915b5050505050905090565b6000801b81565b6000806108c2610a87565b905060006108d08286610996565b905083811015610915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090c90611b73565b60405180910390fd5b6109228286868403610a8f565b60019250505092915050565b600080610939610a87565b9050610946818585610ce6565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61097e826105ea565b61098781610f61565b6109918383611055565b505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610aff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af690611b53565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6690611ad3565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610c4d9190611bd3565b60405180910390a3505050565b6000610c668484610996565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ce05781811015610cd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc990611af3565b60405180910390fd5b610cdf8484848403610a8f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4d90611b33565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbd90611a93565b60405180910390fd5b610dd183838361128e565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4f90611b13565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f489190611bd3565b60405180910390a3610f5b848484611293565b50505050565b610f7281610f6d610a87565b611298565b50565b610f7f82826107b4565b61105157600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610ff6610a87565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61105f82826107b4565b1561113257600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506110d7610a87565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119d90611bb3565b60405180910390fd5b6111b26000838361128e565b80600360008282546111c49190611c30565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112769190611bd3565b60405180910390a361128a60008383611293565b5050565b505050565b505050565b6112a282826107b4565b611319576112af8161131d565b6112bd8360001c602061134a565b6040516020016112ce9291906119e1565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113109190611a51565b60405180910390fd5b5050565b60606113438273ffffffffffffffffffffffffffffffffffffffff16601460ff1661134a565b9050919050565b60606000600283600261135d9190611c86565b6113679190611c30565b67ffffffffffffffff8111156113805761137f611e87565b5b6040519080825280601f01601f1916602001820160405280156113b25781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106113ea576113e9611e58565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061144e5761144d611e58565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261148e9190611c86565b6114989190611c30565b90505b6001811115611538577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106114da576114d9611e58565b5b1a60f81b8282815181106114f1576114f0611e58565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061153190611d9e565b905061149b565b506000841461157c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157390611a73565b60405180910390fd5b8091505092915050565b60008135905061159581612211565b92915050565b6000813590506115aa81612228565b92915050565b6000813590506115bf8161223f565b92915050565b6000813590506115d481612256565b92915050565b6000602082840312156115f0576115ef611eb6565b5b60006115fe84828501611586565b91505092915050565b6000806040838503121561161e5761161d611eb6565b5b600061162c85828601611586565b925050602061163d85828601611586565b9150509250929050565b6000806000606084860312156116605761165f611eb6565b5b600061166e86828701611586565b935050602061167f86828701611586565b9250506040611690868287016115c5565b9150509250925092565b600080604083850312156116b1576116b0611eb6565b5b60006116bf85828601611586565b92505060206116d0858286016115c5565b9150509250929050565b6000602082840312156116f0576116ef611eb6565b5b60006116fe8482850161159b565b91505092915050565b6000806040838503121561171e5761171d611eb6565b5b600061172c8582860161159b565b925050602061173d85828601611586565b9150509250929050565b60006020828403121561175d5761175c611eb6565b5b600061176b848285016115b0565b91505092915050565b61177d81611cf2565b82525050565b61178c81611cfe565b82525050565b600061179d82611c09565b6117a78185611c14565b93506117b7818560208601611d6b565b6117c081611ebb565b840191505092915050565b60006117d682611c09565b6117e08185611c25565b93506117f0818560208601611d6b565b80840191505092915050565b6000611809602083611c14565b915061181482611ecc565b602082019050919050565b600061182c602383611c14565b915061183782611ef5565b604082019050919050565b600061184f603383611c14565b915061185a82611f44565b604082019050919050565b6000611872602283611c14565b915061187d82611f93565b604082019050919050565b6000611895601d83611c14565b91506118a082611fe2565b602082019050919050565b60006118b8602683611c14565b91506118c38261200b565b604082019050919050565b60006118db602583611c14565b91506118e68261205a565b604082019050919050565b60006118fe602483611c14565b9150611909826120a9565b604082019050919050565b6000611921601783611c25565b915061192c826120f8565b601782019050919050565b6000611944602583611c14565b915061194f82612121565b604082019050919050565b6000611967601183611c25565b915061197282612170565b601182019050919050565b600061198a602f83611c14565b915061199582612199565b604082019050919050565b60006119ad601f83611c14565b91506119b8826121e8565b602082019050919050565b6119cc81611d54565b82525050565b6119db81611d5e565b82525050565b60006119ec82611914565b91506119f882856117cb565b9150611a038261195a565b9150611a0f82846117cb565b91508190509392505050565b6000602082019050611a306000830184611774565b92915050565b6000602082019050611a4b6000830184611783565b92915050565b60006020820190508181036000830152611a6b8184611792565b905092915050565b60006020820190508181036000830152611a8c816117fc565b9050919050565b60006020820190508181036000830152611aac8161181f565b9050919050565b60006020820190508181036000830152611acc81611842565b9050919050565b60006020820190508181036000830152611aec81611865565b9050919050565b60006020820190508181036000830152611b0c81611888565b9050919050565b60006020820190508181036000830152611b2c816118ab565b9050919050565b60006020820190508181036000830152611b4c816118ce565b9050919050565b60006020820190508181036000830152611b6c816118f1565b9050919050565b60006020820190508181036000830152611b8c81611937565b9050919050565b60006020820190508181036000830152611bac8161197d565b9050919050565b60006020820190508181036000830152611bcc816119a0565b9050919050565b6000602082019050611be860008301846119c3565b92915050565b6000602082019050611c0360008301846119d2565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000611c3b82611d54565b9150611c4683611d54565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c7b57611c7a611dfa565b5b828201905092915050565b6000611c9182611d54565b9150611c9c83611d54565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611cd557611cd4611dfa565b5b828202905092915050565b6000611ceb82611d34565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611d89578082015181840152602081019050611d6e565b83811115611d98576000848401525b50505050565b6000611da982611d54565b91506000821415611dbd57611dbc611dfa565b5b600182039050919050565b60006002820490506001821680611de057607f821691505b60208210811415611df457611df3611e29565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f43686970546f6b656e3a206d7573742068617665206d696e74657220726f6c6560008201527f20746f206d696e74206e65772063686970732e00000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61221a81611ce0565b811461222557600080fd5b50565b61223181611cfe565b811461223c57600080fd5b50565b61224881611d08565b811461225357600080fd5b50565b61225f81611d54565b811461226a57600080fd5b5056fea2646970667358221220c3de40cc01de402d67e1586c55820f83553465efec8113aefa7870083c3a1b0a64736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x42E JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x358 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x290 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x206B60F9 EQ PUSH2 0x1D8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1647 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27A PUSH2 0x62A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1BEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x360 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FC PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x448 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4D1 JUMPI POP PUSH2 0x4D0 DUP3 PUSH2 0xA1D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4E7 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x513 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x560 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x535 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x560 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x543 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x575 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH2 0x582 DUP2 DUP6 DUP6 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x8502233096D909BEFBDA0999BB8EA2F3A6BE3C138B9FBF003752A4C8BCE86F6C DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5C6 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D3 DUP6 DUP3 DUP6 PUSH2 0xC5A JUMP JUMPDEST PUSH2 0x5DE DUP6 DUP6 DUP6 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x612 DUP3 PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x61B DUP2 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x625 DUP4 DUP4 PUSH2 0xF75 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x63B PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B2 DUP3 DUP3 PUSH2 0x1055 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C1 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E2 DUP2 DUP6 DUP6 PUSH2 0x6D3 DUP6 DUP10 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0x1C30 JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x71E PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x719 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x75D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x754 SWAP1 PUSH2 0x1AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x767 DUP3 DUP3 PUSH2 0x1136 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x82D SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x859 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x87B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x889 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8C2 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8D0 DUP3 DUP7 PUSH2 0x996 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x922 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x939 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH2 0x946 DUP2 DUP6 DUP6 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x97E DUP3 PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x987 DUP2 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x991 DUP4 DUP4 PUSH2 0x1055 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF6 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB66 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC4D SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC66 DUP5 DUP5 PUSH2 0x996 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xCE0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC9 SWAP1 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCDF DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xA8F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4D SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBD SWAP1 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD1 DUP4 DUP4 DUP4 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4F SWAP1 PUSH2 0x1B13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xF48 SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xF5B DUP5 DUP5 DUP5 PUSH2 0x1293 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xF72 DUP2 PUSH2 0xF6D PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x1298 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF7F DUP3 DUP3 PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x1051 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xFF6 PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x105F DUP3 DUP3 PUSH2 0x7B4 JUMP JUMPDEST ISZERO PUSH2 0x1132 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x10D7 PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119D SWAP1 PUSH2 0x1BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B2 PUSH1 0x0 DUP4 DUP4 PUSH2 0x128E JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11C4 SWAP2 SWAP1 PUSH2 0x1C30 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1276 SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x128A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1293 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12A2 DUP3 DUP3 PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x1319 JUMPI PUSH2 0x12AF DUP2 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x12BD DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x134A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12CE SWAP3 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1310 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1343 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x134A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x135D SWAP2 SWAP1 PUSH2 0x1C86 JUMP JUMPDEST PUSH2 0x1367 SWAP2 SWAP1 PUSH2 0x1C30 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1380 JUMPI PUSH2 0x137F PUSH2 0x1E87 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13B2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x13EA JUMPI PUSH2 0x13E9 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x144E JUMPI PUSH2 0x144D PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x148E SWAP2 SWAP1 PUSH2 0x1C86 JUMP JUMPDEST PUSH2 0x1498 SWAP2 SWAP1 PUSH2 0x1C30 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1538 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x14DA JUMPI PUSH2 0x14D9 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14F1 JUMPI PUSH2 0x14F0 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x1531 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST SWAP1 POP PUSH2 0x149B JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x157C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1573 SWAP1 PUSH2 0x1A73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1595 DUP2 PUSH2 0x2211 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15AA DUP2 PUSH2 0x2228 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15BF DUP2 PUSH2 0x223F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D4 DUP2 PUSH2 0x2256 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F0 JUMPI PUSH2 0x15EF PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15FE DUP5 DUP3 DUP6 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x161E JUMPI PUSH2 0x161D PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x162C DUP6 DUP3 DUP7 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x163D DUP6 DUP3 DUP7 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1660 JUMPI PUSH2 0x165F PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x166E DUP7 DUP3 DUP8 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x167F DUP7 DUP3 DUP8 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1690 DUP7 DUP3 DUP8 ADD PUSH2 0x15C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B1 JUMPI PUSH2 0x16B0 PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16BF DUP6 DUP3 DUP7 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16D0 DUP6 DUP3 DUP7 ADD PUSH2 0x15C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F0 JUMPI PUSH2 0x16EF PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16FE DUP5 DUP3 DUP6 ADD PUSH2 0x159B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171E JUMPI PUSH2 0x171D PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172C DUP6 DUP3 DUP7 ADD PUSH2 0x159B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x173D DUP6 DUP3 DUP7 ADD PUSH2 0x1586 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x175D JUMPI PUSH2 0x175C PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x176B DUP5 DUP3 DUP6 ADD PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177D DUP2 PUSH2 0x1CF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x178C DUP2 PUSH2 0x1CFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179D DUP3 PUSH2 0x1C09 JUMP JUMPDEST PUSH2 0x17A7 DUP2 DUP6 PUSH2 0x1C14 JUMP JUMPDEST SWAP4 POP PUSH2 0x17B7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D6B JUMP JUMPDEST PUSH2 0x17C0 DUP2 PUSH2 0x1EBB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D6 DUP3 PUSH2 0x1C09 JUMP JUMPDEST PUSH2 0x17E0 DUP2 DUP6 PUSH2 0x1C25 JUMP JUMPDEST SWAP4 POP PUSH2 0x17F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D6B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1809 PUSH1 0x20 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1814 DUP3 PUSH2 0x1ECC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C PUSH1 0x23 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1837 DUP3 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184F PUSH1 0x33 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x185A DUP3 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1872 PUSH1 0x22 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x187D DUP3 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1895 PUSH1 0x1D DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A0 DUP3 PUSH2 0x1FE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B8 PUSH1 0x26 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C3 DUP3 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DB PUSH1 0x25 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x18E6 DUP3 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18FE PUSH1 0x24 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1909 DUP3 PUSH2 0x20A9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1921 PUSH1 0x17 DUP4 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH2 0x192C DUP3 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1944 PUSH1 0x25 DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x194F DUP3 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1967 PUSH1 0x11 DUP4 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH2 0x1972 DUP3 PUSH2 0x2170 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198A PUSH1 0x2F DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x1995 DUP3 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19AD PUSH1 0x1F DUP4 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 POP PUSH2 0x19B8 DUP3 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CC DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19DB DUP2 PUSH2 0x1D5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EC DUP3 PUSH2 0x1914 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F8 DUP3 DUP6 PUSH2 0x17CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1A03 DUP3 PUSH2 0x195A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A0F DUP3 DUP5 PUSH2 0x17CB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A30 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1774 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1783 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A6B DUP2 DUP5 PUSH2 0x1792 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A8C DUP2 PUSH2 0x17FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AAC DUP2 PUSH2 0x181F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ACC DUP2 PUSH2 0x1842 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AEC DUP2 PUSH2 0x1865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B0C DUP2 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2C DUP2 PUSH2 0x18AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B4C DUP2 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B6C DUP2 PUSH2 0x18F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B8C DUP2 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BAC DUP2 PUSH2 0x197D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BCC DUP2 PUSH2 0x19A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BE8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C03 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3B DUP3 PUSH2 0x1D54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C46 DUP4 PUSH2 0x1D54 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1C7B JUMPI PUSH2 0x1C7A PUSH2 0x1DFA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C91 DUP3 PUSH2 0x1D54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9C DUP4 PUSH2 0x1D54 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CD5 JUMPI PUSH2 0x1CD4 PUSH2 0x1DFA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CEB DUP3 PUSH2 0x1D34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D89 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D6E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D98 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA9 DUP3 PUSH2 0x1D54 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1DBD JUMPI PUSH2 0x1DBC PUSH2 0x1DFA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DE0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1DF4 JUMPI PUSH2 0x1DF3 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43686970546F6B656E3A206D7573742068617665206D696E74657220726F6C65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206D696E74206E65772063686970732E00000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x221A DUP2 PUSH2 0x1CE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2231 DUP2 PUSH2 0x1CFE JUMP JUMPDEST DUP2 EQ PUSH2 0x223C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2248 DUP2 PUSH2 0x1D08 JUMP JUMPDEST DUP2 EQ PUSH2 0x2253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x225F DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP2 EQ PUSH2 0x226A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xDE BLOCKHASH 0xCC ADD 0xDE BLOCKHASH 0x2D PUSH8 0xE1586C55820F8355 CALLVALUE PUSH6 0xEFEC8113AEFA PUSH25 0x70083C3A1B0A64736F6C634300080600330000000000000000 ","sourceMap":"302:625:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;428:66:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4504:129:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4929:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3104:91:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6038:214:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5854:234:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;700:225:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3419:125:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3021:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2153:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;360:62:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5354:147:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3987:149:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2732:202:0;2817:4;2855:32;2840:47;;;:11;:47;;;;:87;;;;2891:36;2915:11;2891:23;:36::i;:::-;2840:87;2833:94;;2732:202;;;:::o;2158:98:2:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;428:66:14:-;468:26;428:66;:::o;5203:256:2:-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;4504:129:0:-;4578:7;4604:6;:12;4611:4;4604:12;;;;;;;;;;;:22;;;4597:29;;4504:129;;;:::o;4929:145::-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;3104:91:2:-;3162:5;3186:2;3179:9;;3104:91;:::o;6038:214:0:-;6144:12;:10;:12::i;:::-;6133:23;;:7;:23;;;6125:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;5854:234:2:-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;700:225:14:-;780:34;398:24;801:12;:10;:12::i;:::-;780:7;:34::i;:::-;759:132;;;;;;;;;;;;:::i;:::-;;;;;;;;;901:17;907:2;911:6;901:5;:17::i;:::-;700:225;;:::o;3419:125:2:-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;3021:145:0:-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;2369:102:2:-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;2153:49:0:-;2198:4;2153:49;;;:::o;6575:427:2:-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;360:62:14:-;398:24;360:62;:::o;5354:147:0:-;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;:::-;5354:147:::0;;;:::o;3987:149:2:-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;829:155:7:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;655:96:5:-;708:7;734:10;727:17;;655:96;:::o;10457:340:2:-;10575:1;10558:19;;:5;:19;;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;3460:103:0:-;3526:30;3537:4;3543:12;:10;:12::i;:::-;3526:10;:30::i;:::-;3460:103;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;:12::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:6;:12;8119:4;8112:12;;;;;;;;;;;:20;;:29;8133:7;8112:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8195:12;:10;:12::i;:::-;8168:40;;8186:7;8168:40;;8180:4;8168:40;;;;;;;;;;8070:149;7991:234;;:::o;8520:535:2:-;8622:1;8603:21;;:7;:21;;;;8595:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;;;;;8921:6;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8973:7;8952:37;;8969:1;8952:37;;;8982:6;8952:37;;;;;;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;:::-;8520:535;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;3844:479:0:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4234:13;;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3970:336;;;;;;;;;;;:::i;:::-;;;;;;;;3927:390;3844:479;;:::o;2407:149:6:-;2465:13;2497:52;2525:4;2509:22;;343:2;2497:52;;:11;:52::i;:::-;2490:59;;2407:149;;;:::o;1818:437::-;1893:13;1918:19;1963:1;1954:6;1950:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2030:9;2055:1;2046:6;2042:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2113:3;2105:5;:11;2096:21;;;;;;;:::i;:::-;;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2141:1;2131:11;;;;;2065:3;;;;:::i;:::-;;;2025:128;;;;2179:1;2170:5;:10;2162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:6;2227:21;;;1818:437;;;;:::o;7:139:15:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:137::-;342:5;380:6;367:20;358:29;;396:32;422:5;396:32;:::i;:::-;348:86;;;;:::o;440:139::-;486:5;524:6;511:20;502:29;;540:33;567:5;540:33;:::i;:::-;492:87;;;;:::o;585:329::-;644:6;693:2;681:9;672:7;668:23;664:32;661:2;;;699:79;;:::i;:::-;661:2;819:1;844:53;889:7;880:6;869:9;865:22;844:53;:::i;:::-;834:63;;790:117;651:263;;;;:::o;920:474::-;988:6;996;1045:2;1033:9;1024:7;1020:23;1016:32;1013:2;;;1051:79;;:::i;:::-;1013:2;1171:1;1196:53;1241:7;1232:6;1221:9;1217:22;1196:53;:::i;:::-;1186:63;;1142:117;1298:2;1324:53;1369:7;1360:6;1349:9;1345:22;1324:53;:::i;:::-;1314:63;;1269:118;1003:391;;;;;:::o;1400:619::-;1477:6;1485;1493;1542:2;1530:9;1521:7;1517:23;1513:32;1510:2;;;1548:79;;:::i;:::-;1510:2;1668:1;1693:53;1738:7;1729:6;1718:9;1714:22;1693:53;:::i;:::-;1683:63;;1639:117;1795:2;1821:53;1866:7;1857:6;1846:9;1842:22;1821:53;:::i;:::-;1811:63;;1766:118;1923:2;1949:53;1994:7;1985:6;1974:9;1970:22;1949:53;:::i;:::-;1939:63;;1894:118;1500:519;;;;;:::o;2025:474::-;2093:6;2101;2150:2;2138:9;2129:7;2125:23;2121:32;2118:2;;;2156:79;;:::i;:::-;2118:2;2276:1;2301:53;2346:7;2337:6;2326:9;2322:22;2301:53;:::i;:::-;2291:63;;2247:117;2403:2;2429:53;2474:7;2465:6;2454:9;2450:22;2429:53;:::i;:::-;2419:63;;2374:118;2108:391;;;;;:::o;2505:329::-;2564:6;2613:2;2601:9;2592:7;2588:23;2584:32;2581:2;;;2619:79;;:::i;:::-;2581:2;2739:1;2764:53;2809:7;2800:6;2789:9;2785:22;2764:53;:::i;:::-;2754:63;;2710:117;2571:263;;;;:::o;2840:474::-;2908:6;2916;2965:2;2953:9;2944:7;2940:23;2936:32;2933:2;;;2971:79;;:::i;:::-;2933:2;3091:1;3116:53;3161:7;3152:6;3141:9;3137:22;3116:53;:::i;:::-;3106:63;;3062:117;3218:2;3244:53;3289:7;3280:6;3269:9;3265:22;3244:53;:::i;:::-;3234:63;;3189:118;2923:391;;;;;:::o;3320:327::-;3378:6;3427:2;3415:9;3406:7;3402:23;3398:32;3395:2;;;3433:79;;:::i;:::-;3395:2;3553:1;3578:52;3622:7;3613:6;3602:9;3598:22;3578:52;:::i;:::-;3568:62;;3524:116;3385:262;;;;:::o;3653:109::-;3734:21;3749:5;3734:21;:::i;:::-;3729:3;3722:34;3712:50;;:::o;3768:118::-;3855:24;3873:5;3855:24;:::i;:::-;3850:3;3843:37;3833:53;;:::o;3892:364::-;3980:3;4008:39;4041:5;4008:39;:::i;:::-;4063:71;4127:6;4122:3;4063:71;:::i;:::-;4056:78;;4143:52;4188:6;4183:3;4176:4;4169:5;4165:16;4143:52;:::i;:::-;4220:29;4242:6;4220:29;:::i;:::-;4215:3;4211:39;4204:46;;3984:272;;;;;:::o;4262:377::-;4368:3;4396:39;4429:5;4396:39;:::i;:::-;4451:89;4533:6;4528:3;4451:89;:::i;:::-;4444:96;;4549:52;4594:6;4589:3;4582:4;4575:5;4571:16;4549:52;:::i;:::-;4626:6;4621:3;4617:16;4610:23;;4372:267;;;;;:::o;4645:366::-;4787:3;4808:67;4872:2;4867:3;4808:67;:::i;:::-;4801:74;;4884:93;4973:3;4884:93;:::i;:::-;5002:2;4997:3;4993:12;4986:19;;4791:220;;;:::o;5017:366::-;5159:3;5180:67;5244:2;5239:3;5180:67;:::i;:::-;5173:74;;5256:93;5345:3;5256:93;:::i;:::-;5374:2;5369:3;5365:12;5358:19;;5163:220;;;:::o;5389:366::-;5531:3;5552:67;5616:2;5611:3;5552:67;:::i;:::-;5545:74;;5628:93;5717:3;5628:93;:::i;:::-;5746:2;5741:3;5737:12;5730:19;;5535:220;;;:::o;5761:366::-;5903:3;5924:67;5988:2;5983:3;5924:67;:::i;:::-;5917:74;;6000:93;6089:3;6000:93;:::i;:::-;6118:2;6113:3;6109:12;6102:19;;5907:220;;;:::o;6133:366::-;6275:3;6296:67;6360:2;6355:3;6296:67;:::i;:::-;6289:74;;6372:93;6461:3;6372:93;:::i;:::-;6490:2;6485:3;6481:12;6474:19;;6279:220;;;:::o;6505:366::-;6647:3;6668:67;6732:2;6727:3;6668:67;:::i;:::-;6661:74;;6744:93;6833:3;6744:93;:::i;:::-;6862:2;6857:3;6853:12;6846:19;;6651:220;;;:::o;6877:366::-;7019:3;7040:67;7104:2;7099:3;7040:67;:::i;:::-;7033:74;;7116:93;7205:3;7116:93;:::i;:::-;7234:2;7229:3;7225:12;7218:19;;7023:220;;;:::o;7249:366::-;7391:3;7412:67;7476:2;7471:3;7412:67;:::i;:::-;7405:74;;7488:93;7577:3;7488:93;:::i;:::-;7606:2;7601:3;7597:12;7590:19;;7395:220;;;:::o;7621:402::-;7781:3;7802:85;7884:2;7879:3;7802:85;:::i;:::-;7795:92;;7896:93;7985:3;7896:93;:::i;:::-;8014:2;8009:3;8005:12;7998:19;;7785:238;;;:::o;8029:366::-;8171:3;8192:67;8256:2;8251:3;8192:67;:::i;:::-;8185:74;;8268:93;8357:3;8268:93;:::i;:::-;8386:2;8381:3;8377:12;8370:19;;8175:220;;;:::o;8401:402::-;8561:3;8582:85;8664:2;8659:3;8582:85;:::i;:::-;8575:92;;8676:93;8765:3;8676:93;:::i;:::-;8794:2;8789:3;8785:12;8778:19;;8565:238;;;:::o;8809:366::-;8951:3;8972:67;9036:2;9031:3;8972:67;:::i;:::-;8965:74;;9048:93;9137:3;9048:93;:::i;:::-;9166:2;9161:3;9157:12;9150:19;;8955:220;;;:::o;9181:366::-;9323:3;9344:67;9408:2;9403:3;9344:67;:::i;:::-;9337:74;;9420:93;9509:3;9420:93;:::i;:::-;9538:2;9533:3;9529:12;9522:19;;9327:220;;;:::o;9553:118::-;9640:24;9658:5;9640:24;:::i;:::-;9635:3;9628:37;9618:53;;:::o;9677:112::-;9760:22;9776:5;9760:22;:::i;:::-;9755:3;9748:35;9738:51;;:::o;9795:967::-;10177:3;10199:148;10343:3;10199:148;:::i;:::-;10192:155;;10364:95;10455:3;10446:6;10364:95;:::i;:::-;10357:102;;10476:148;10620:3;10476:148;:::i;:::-;10469:155;;10641:95;10732:3;10723:6;10641:95;:::i;:::-;10634:102;;10753:3;10746:10;;10181:581;;;;;:::o;10768:210::-;10855:4;10893:2;10882:9;10878:18;10870:26;;10906:65;10968:1;10957:9;10953:17;10944:6;10906:65;:::i;:::-;10860:118;;;;:::o;10984:222::-;11077:4;11115:2;11104:9;11100:18;11092:26;;11128:71;11196:1;11185:9;11181:17;11172:6;11128:71;:::i;:::-;11082:124;;;;:::o;11212:313::-;11325:4;11363:2;11352:9;11348:18;11340:26;;11412:9;11406:4;11402:20;11398:1;11387:9;11383:17;11376:47;11440:78;11513:4;11504:6;11440:78;:::i;:::-;11432:86;;11330:195;;;;:::o;11531:419::-;11697:4;11735:2;11724:9;11720:18;11712:26;;11784:9;11778:4;11774:20;11770:1;11759:9;11755:17;11748:47;11812:131;11938:4;11812:131;:::i;:::-;11804:139;;11702:248;;;:::o;11956:419::-;12122:4;12160:2;12149:9;12145:18;12137:26;;12209:9;12203:4;12199:20;12195:1;12184:9;12180:17;12173:47;12237:131;12363:4;12237:131;:::i;:::-;12229:139;;12127:248;;;:::o;12381:419::-;12547:4;12585:2;12574:9;12570:18;12562:26;;12634:9;12628:4;12624:20;12620:1;12609:9;12605:17;12598:47;12662:131;12788:4;12662:131;:::i;:::-;12654:139;;12552:248;;;:::o;12806:419::-;12972:4;13010:2;12999:9;12995:18;12987:26;;13059:9;13053:4;13049:20;13045:1;13034:9;13030:17;13023:47;13087:131;13213:4;13087:131;:::i;:::-;13079:139;;12977:248;;;:::o;13231:419::-;13397:4;13435:2;13424:9;13420:18;13412:26;;13484:9;13478:4;13474:20;13470:1;13459:9;13455:17;13448:47;13512:131;13638:4;13512:131;:::i;:::-;13504:139;;13402:248;;;:::o;13656:419::-;13822:4;13860:2;13849:9;13845:18;13837:26;;13909:9;13903:4;13899:20;13895:1;13884:9;13880:17;13873:47;13937:131;14063:4;13937:131;:::i;:::-;13929:139;;13827:248;;;:::o;14081:419::-;14247:4;14285:2;14274:9;14270:18;14262:26;;14334:9;14328:4;14324:20;14320:1;14309:9;14305:17;14298:47;14362:131;14488:4;14362:131;:::i;:::-;14354:139;;14252:248;;;:::o;14506:419::-;14672:4;14710:2;14699:9;14695:18;14687:26;;14759:9;14753:4;14749:20;14745:1;14734:9;14730:17;14723:47;14787:131;14913:4;14787:131;:::i;:::-;14779:139;;14677:248;;;:::o;14931:419::-;15097:4;15135:2;15124:9;15120:18;15112:26;;15184:9;15178:4;15174:20;15170:1;15159:9;15155:17;15148:47;15212:131;15338:4;15212:131;:::i;:::-;15204:139;;15102:248;;;:::o;15356:419::-;15522:4;15560:2;15549:9;15545:18;15537:26;;15609:9;15603:4;15599:20;15595:1;15584:9;15580:17;15573:47;15637:131;15763:4;15637:131;:::i;:::-;15629:139;;15527:248;;;:::o;15781:419::-;15947:4;15985:2;15974:9;15970:18;15962:26;;16034:9;16028:4;16024:20;16020:1;16009:9;16005:17;15998:47;16062:131;16188:4;16062:131;:::i;:::-;16054:139;;15952:248;;;:::o;16206:222::-;16299:4;16337:2;16326:9;16322:18;16314:26;;16350:71;16418:1;16407:9;16403:17;16394:6;16350:71;:::i;:::-;16304:124;;;;:::o;16434:214::-;16523:4;16561:2;16550:9;16546:18;16538:26;;16574:67;16638:1;16627:9;16623:17;16614:6;16574:67;:::i;:::-;16528:120;;;;:::o;16735:99::-;16787:6;16821:5;16815:12;16805:22;;16794:40;;;:::o;16840:169::-;16924:11;16958:6;16953:3;16946:19;16998:4;16993:3;16989:14;16974:29;;16936:73;;;;:::o;17015:148::-;17117:11;17154:3;17139:18;;17129:34;;;;:::o;17169:305::-;17209:3;17228:20;17246:1;17228:20;:::i;:::-;17223:25;;17262:20;17280:1;17262:20;:::i;:::-;17257:25;;17416:1;17348:66;17344:74;17341:1;17338:81;17335:2;;;17422:18;;:::i;:::-;17335:2;17466:1;17463;17459:9;17452:16;;17213:261;;;;:::o;17480:348::-;17520:7;17543:20;17561:1;17543:20;:::i;:::-;17538:25;;17577:20;17595:1;17577:20;:::i;:::-;17572:25;;17765:1;17697:66;17693:74;17690:1;17687:81;17682:1;17675:9;17668:17;17664:105;17661:2;;;17772:18;;:::i;:::-;17661:2;17820:1;17817;17813:9;17802:20;;17528:300;;;;:::o;17834:96::-;17871:7;17900:24;17918:5;17900:24;:::i;:::-;17889:35;;17879:51;;;:::o;17936:90::-;17970:7;18013:5;18006:13;17999:21;17988:32;;17978:48;;;:::o;18032:77::-;18069:7;18098:5;18087:16;;18077:32;;;:::o;18115:149::-;18151:7;18191:66;18184:5;18180:78;18169:89;;18159:105;;;:::o;18270:126::-;18307:7;18347:42;18340:5;18336:54;18325:65;;18315:81;;;:::o;18402:77::-;18439:7;18468:5;18457:16;;18447:32;;;:::o;18485:86::-;18520:7;18560:4;18553:5;18549:16;18538:27;;18528:43;;;:::o;18577:307::-;18645:1;18655:113;18669:6;18666:1;18663:13;18655:113;;;18754:1;18749:3;18745:11;18739:18;18735:1;18730:3;18726:11;18719:39;18691:2;18688:1;18684:10;18679:15;;18655:113;;;18786:6;18783:1;18780:13;18777:2;;;18866:1;18857:6;18852:3;18848:16;18841:27;18777:2;18626:258;;;;:::o;18890:171::-;18929:3;18952:24;18970:5;18952:24;:::i;:::-;18943:33;;18998:4;18991:5;18988:15;18985:2;;;19006:18;;:::i;:::-;18985:2;19053:1;19046:5;19042:13;19035:20;;18933:128;;;:::o;19067:320::-;19111:6;19148:1;19142:4;19138:12;19128:22;;19195:1;19189:4;19185:12;19216:18;19206:2;;19272:4;19264:6;19260:17;19250:27;;19206:2;19334;19326:6;19323:14;19303:18;19300:38;19297:2;;;19353:18;;:::i;:::-;19297:2;19118:269;;;;:::o;19393:180::-;19441:77;19438:1;19431:88;19538:4;19535:1;19528:15;19562:4;19559:1;19552:15;19579:180;19627:77;19624:1;19617:88;19724:4;19721:1;19714:15;19748:4;19745:1;19738:15;19765:180;19813:77;19810:1;19803:88;19910:4;19907:1;19900:15;19934:4;19931:1;19924:15;19951:180;19999:77;19996:1;19989:88;20096:4;20093:1;20086:15;20120:4;20117:1;20110:15;20260:117;20369:1;20366;20359:12;20383:102;20424:6;20475:2;20471:7;20466:2;20459:5;20455:14;20451:28;20441:38;;20431:54;;;:::o;20491:182::-;20631:34;20627:1;20619:6;20615:14;20608:58;20597:76;:::o;20679:222::-;20819:34;20815:1;20807:6;20803:14;20796:58;20888:5;20883:2;20875:6;20871:15;20864:30;20785:116;:::o;20907:238::-;21047:34;21043:1;21035:6;21031:14;21024:58;21116:21;21111:2;21103:6;21099:15;21092:46;21013:132;:::o;21151:221::-;21291:34;21287:1;21279:6;21275:14;21268:58;21360:4;21355:2;21347:6;21343:15;21336:29;21257:115;:::o;21378:179::-;21518:31;21514:1;21506:6;21502:14;21495:55;21484:73;:::o;21563:225::-;21703:34;21699:1;21691:6;21687:14;21680:58;21772:8;21767:2;21759:6;21755:15;21748:33;21669:119;:::o;21794:224::-;21934:34;21930:1;21922:6;21918:14;21911:58;22003:7;21998:2;21990:6;21986:15;21979:32;21900:118;:::o;22024:223::-;22164:34;22160:1;22152:6;22148:14;22141:58;22233:6;22228:2;22220:6;22216:15;22209:31;22130:117;:::o;22253:173::-;22393:25;22389:1;22381:6;22377:14;22370:49;22359:67;:::o;22432:224::-;22572:34;22568:1;22560:6;22556:14;22549:58;22641:7;22636:2;22628:6;22624:15;22617:32;22538:118;:::o;22662:167::-;22802:19;22798:1;22790:6;22786:14;22779:43;22768:61;:::o;22835:234::-;22975:34;22971:1;22963:6;22959:14;22952:58;23044:17;23039:2;23031:6;23027:15;23020:42;22941:128;:::o;23075:181::-;23215:33;23211:1;23203:6;23199:14;23192:57;23181:75;:::o;23262:122::-;23335:24;23353:5;23335:24;:::i;:::-;23328:5;23325:35;23315:2;;23374:1;23371;23364:12;23315:2;23305:79;:::o;23390:122::-;23463:24;23481:5;23463:24;:::i;:::-;23456:5;23453:35;23443:2;;23502:1;23499;23492:12;23443:2;23433:79;:::o;23518:120::-;23590:23;23607:5;23590:23;:::i;:::-;23583:5;23580:34;23570:2;;23628:1;23625;23618:12;23570:2;23560:78;:::o;23644:122::-;23717:24;23735:5;23717:24;:::i;:::-;23710:5;23707:35;23697:2;;23756:1;23753;23746:12;23697:2;23687:79;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","TRANSFER_ROLE()":"206b60f9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"A ChipToken contract for use as in game currency in casino games.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ChipToken.sol\":\"ChipToken\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/ChipToken.sol\":{\"keccak256\":\"0x1b2006b458ef6dd4a4edc52bf36a6df6e4b881e479c98f5f817874a42d6e33fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddf63f09eacafad65648769fa1c8583b391fb7b195082d523004923fc6dfe3ea\",\"dweb:/ipfs/QmS8g3C6xBQ8V9ujNWS7mdF9Ebvz4pqtA6C1VhpNUrGoHk\"]}},\"version\":1}"}}}}}