##############
# Yaml Anchors
##############
# Install Kurtosis CLI
install_and_start_kurtosis: &install_and_start_kurtosis
  run: |
      echo "deb [trusted=yes] https://apt.fury.io/kurtosis-tech/ /" | sudo tee /etc/apt/sources.list.d/kurtosis.list
      sudo apt update
      sudo apt install kurtosis-cli
      kurtosis config init dont-send-metrics
      kurtosis cluster set docker
      kurtosis engine start

##############
# CircleCI
##############
version: 2.1

orbs:
  slack: circleci/slack@4.10.1
  kurtosis-docs-checker: kurtosis-tech/docs-checker@0.2.9

executors:
  ubuntu_vm:
    machine:
      image: ubuntu-2004:2023.04.2

parameters:
  # To enable/disabled the check_latest_version workflow execution which will be triggered by this scheduled pipeline: https://app.circleci.com/settings/project/github/kurtosis-tech/awesome-kurtosis/triggers
  should-enable-check-latest-version-workflow:
    type: boolean
    default: false
  # To enable/disabled the check_code workflow execution which will be triggered by the PR's checkers
  should-enable-build-workflow:
    type: boolean
    default: true

jobs:
  check_all:
    # strictly speaking we don't "need" this(large) but we are continuously adding new examples
    resource_class: large
    executor: ubuntu_vm
    steps:
      - checkout
      - <<: *install_and_start_kurtosis

      - run:
          name: Run the ./scripts/run.sh in each subdirectory
          no_output_timeout: 30m
          command: |
            set -euo pipefail
            skip_dirs=(".circleci/ .github/ data-package/")
            for directory in */ ; do
              if git --no-pager diff --exit-code origin/main...HEAD -- ':.circleci' ":${directory%/}"; then
                continue
              fi            
              if ! echo "$skip_dirs" | grep -q "$directory"; then
                "./${directory}scripts/run.sh"
                kurtosis clean -a
                sleep 2
              fi
            done

  check_all_nightly:
    # strictly speaking we don't "need" this(large) but we are continuously adding new examples
    resource_class: large
    executor: ubuntu_vm
    steps:
      - checkout
      - <<: *install_and_start_kurtosis

      - run:
          name: Run the ./scripts/run.sh in each subdirectory
          no_output_timeout: 30m
          command: |
            set -euo pipefail
            shopt -s globstar
            for run in **/run.sh; do
                "$run"
                kurtosis clean -a
                sleep 2
            done

      # this step will be always run even if the previous step fails, some steps are configured this way. More info here: https://circleci.com/docs/configuration-reference#steps
      - slack/notify:
          channel: engineering
          event: fail
          # You can preview this template and know more about templates here: https://github.com/CircleCI-Public/slack-orb/wiki#templates
          template: basic_fail_1


  publish_simple_api:
    executor: ubuntu_vm
    steps:
      - checkout
      - run: simple-api/scripts/build.sh
      - run: echo "${DOCKER_PASSWORD}" | docker login -u ${DOCKER_USERNAME} --password-stdin
      - run: |
          set -euo pipefail
          if ! git_ref="$(git rev-parse --short HEAD)"; then
            echo "Error: Couldn't get a Git ref to use for a Docker tag" >&2
            exit 1
          fi
          image_org_and_repo="kurtosistech/kurtosis-simple-api"
          image_name_with_git_ref_version="${image_org_and_repo}:${git_ref}"
          image_name_with_latest_version="${image_org_and_repo}:latest"
          docker tag "${image_name_with_latest_version}" "${image_name_with_git_ref_version}"
          docker push "${image_name_with_latest_version}"
          docker push "${image_name_with_git_ref_version}"

workflows:
  check_latest_version:
    when: << pipeline.parameters.should-enable-check-latest-version-workflow >>
    jobs:
      - check_all_nightly:
          context:
            - slack-secrets
  build:
    when: << pipeline.parameters.should-enable-build-workflow >>
    jobs:
      - kurtosis-docs-checker/check-docs:
          should-check-changelog: false
      - check_all:
          filters:
            branches:
              ignore:
                - main
      - publish_simple_api:
          context:
            - docker-user
          filters:
            branches:
              only:
                - main
